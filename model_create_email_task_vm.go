/*
FastReport Cloud

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gofrcloud

import (
	"encoding/json"
)

// checks if the CreateEmailTaskVM type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateEmailTaskVM{}

// CreateEmailTaskVM struct for CreateEmailTaskVM
type CreateEmailTaskVM struct {
	Body NullableString `json:"body,omitempty"`
	EnableSsl *bool `json:"enableSsl,omitempty"`
	From NullableString `json:"from,omitempty"`
	IsBodyHtml *bool `json:"isBodyHtml,omitempty"`
	Password NullableString `json:"password,omitempty"`
	Port *int32 `json:"port,omitempty"`
	Server NullableString `json:"server,omitempty"`
	Subject NullableString `json:"subject,omitempty"`
	To []string `json:"to,omitempty"`
	Username NullableString `json:"username,omitempty"`
}

// NewCreateEmailTaskVM instantiates a new CreateEmailTaskVM object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateEmailTaskVM(t string) *CreateEmailTaskVM {
	this := CreateEmailTaskVM{}
	this.T = t
	return &this
}

// NewCreateEmailTaskVMWithDefaults instantiates a new CreateEmailTaskVM object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateEmailTaskVMWithDefaults() *CreateEmailTaskVM {
	this := CreateEmailTaskVM{}
	return &this
}

// GetBody returns the Body field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateEmailTaskVM) GetBody() string {
	if o == nil || IsNil(o.Body.Get()) {
		var ret string
		return ret
	}
	return *o.Body.Get()
}

// GetBodyOk returns a tuple with the Body field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateEmailTaskVM) GetBodyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Body.Get(), o.Body.IsSet()
}

// HasBody returns a boolean if a field has been set.
func (o *CreateEmailTaskVM) HasBody() bool {
	if o != nil && o.Body.IsSet() {
		return true
	}

	return false
}

// SetBody gets a reference to the given NullableString and assigns it to the Body field.
func (o *CreateEmailTaskVM) SetBody(v string) {
	o.Body.Set(&v)
}
// SetBodyNil sets the value for Body to be an explicit nil
func (o *CreateEmailTaskVM) SetBodyNil() {
	o.Body.Set(nil)
}

// UnsetBody ensures that no value is present for Body, not even an explicit nil
func (o *CreateEmailTaskVM) UnsetBody() {
	o.Body.Unset()
}

// GetEnableSsl returns the EnableSsl field value if set, zero value otherwise.
func (o *CreateEmailTaskVM) GetEnableSsl() bool {
	if o == nil || IsNil(o.EnableSsl) {
		var ret bool
		return ret
	}
	return *o.EnableSsl
}

// GetEnableSslOk returns a tuple with the EnableSsl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateEmailTaskVM) GetEnableSslOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableSsl) {
		return nil, false
	}
	return o.EnableSsl, true
}

// HasEnableSsl returns a boolean if a field has been set.
func (o *CreateEmailTaskVM) HasEnableSsl() bool {
	if o != nil && !IsNil(o.EnableSsl) {
		return true
	}

	return false
}

// SetEnableSsl gets a reference to the given bool and assigns it to the EnableSsl field.
func (o *CreateEmailTaskVM) SetEnableSsl(v bool) {
	o.EnableSsl = &v
}

// GetFrom returns the From field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateEmailTaskVM) GetFrom() string {
	if o == nil || IsNil(o.From.Get()) {
		var ret string
		return ret
	}
	return *o.From.Get()
}

// GetFromOk returns a tuple with the From field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateEmailTaskVM) GetFromOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.From.Get(), o.From.IsSet()
}

// HasFrom returns a boolean if a field has been set.
func (o *CreateEmailTaskVM) HasFrom() bool {
	if o != nil && o.From.IsSet() {
		return true
	}

	return false
}

// SetFrom gets a reference to the given NullableString and assigns it to the From field.
func (o *CreateEmailTaskVM) SetFrom(v string) {
	o.From.Set(&v)
}
// SetFromNil sets the value for From to be an explicit nil
func (o *CreateEmailTaskVM) SetFromNil() {
	o.From.Set(nil)
}

// UnsetFrom ensures that no value is present for From, not even an explicit nil
func (o *CreateEmailTaskVM) UnsetFrom() {
	o.From.Unset()
}

// GetIsBodyHtml returns the IsBodyHtml field value if set, zero value otherwise.
func (o *CreateEmailTaskVM) GetIsBodyHtml() bool {
	if o == nil || IsNil(o.IsBodyHtml) {
		var ret bool
		return ret
	}
	return *o.IsBodyHtml
}

// GetIsBodyHtmlOk returns a tuple with the IsBodyHtml field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateEmailTaskVM) GetIsBodyHtmlOk() (*bool, bool) {
	if o == nil || IsNil(o.IsBodyHtml) {
		return nil, false
	}
	return o.IsBodyHtml, true
}

// HasIsBodyHtml returns a boolean if a field has been set.
func (o *CreateEmailTaskVM) HasIsBodyHtml() bool {
	if o != nil && !IsNil(o.IsBodyHtml) {
		return true
	}

	return false
}

// SetIsBodyHtml gets a reference to the given bool and assigns it to the IsBodyHtml field.
func (o *CreateEmailTaskVM) SetIsBodyHtml(v bool) {
	o.IsBodyHtml = &v
}

// GetPassword returns the Password field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateEmailTaskVM) GetPassword() string {
	if o == nil || IsNil(o.Password.Get()) {
		var ret string
		return ret
	}
	return *o.Password.Get()
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateEmailTaskVM) GetPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Password.Get(), o.Password.IsSet()
}

// HasPassword returns a boolean if a field has been set.
func (o *CreateEmailTaskVM) HasPassword() bool {
	if o != nil && o.Password.IsSet() {
		return true
	}

	return false
}

// SetPassword gets a reference to the given NullableString and assigns it to the Password field.
func (o *CreateEmailTaskVM) SetPassword(v string) {
	o.Password.Set(&v)
}
// SetPasswordNil sets the value for Password to be an explicit nil
func (o *CreateEmailTaskVM) SetPasswordNil() {
	o.Password.Set(nil)
}

// UnsetPassword ensures that no value is present for Password, not even an explicit nil
func (o *CreateEmailTaskVM) UnsetPassword() {
	o.Password.Unset()
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *CreateEmailTaskVM) GetPort() int32 {
	if o == nil || IsNil(o.Port) {
		var ret int32
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateEmailTaskVM) GetPortOk() (*int32, bool) {
	if o == nil || IsNil(o.Port) {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *CreateEmailTaskVM) HasPort() bool {
	if o != nil && !IsNil(o.Port) {
		return true
	}

	return false
}

// SetPort gets a reference to the given int32 and assigns it to the Port field.
func (o *CreateEmailTaskVM) SetPort(v int32) {
	o.Port = &v
}

// GetServer returns the Server field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateEmailTaskVM) GetServer() string {
	if o == nil || IsNil(o.Server.Get()) {
		var ret string
		return ret
	}
	return *o.Server.Get()
}

// GetServerOk returns a tuple with the Server field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateEmailTaskVM) GetServerOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Server.Get(), o.Server.IsSet()
}

// HasServer returns a boolean if a field has been set.
func (o *CreateEmailTaskVM) HasServer() bool {
	if o != nil && o.Server.IsSet() {
		return true
	}

	return false
}

// SetServer gets a reference to the given NullableString and assigns it to the Server field.
func (o *CreateEmailTaskVM) SetServer(v string) {
	o.Server.Set(&v)
}
// SetServerNil sets the value for Server to be an explicit nil
func (o *CreateEmailTaskVM) SetServerNil() {
	o.Server.Set(nil)
}

// UnsetServer ensures that no value is present for Server, not even an explicit nil
func (o *CreateEmailTaskVM) UnsetServer() {
	o.Server.Unset()
}

// GetSubject returns the Subject field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateEmailTaskVM) GetSubject() string {
	if o == nil || IsNil(o.Subject.Get()) {
		var ret string
		return ret
	}
	return *o.Subject.Get()
}

// GetSubjectOk returns a tuple with the Subject field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateEmailTaskVM) GetSubjectOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Subject.Get(), o.Subject.IsSet()
}

// HasSubject returns a boolean if a field has been set.
func (o *CreateEmailTaskVM) HasSubject() bool {
	if o != nil && o.Subject.IsSet() {
		return true
	}

	return false
}

// SetSubject gets a reference to the given NullableString and assigns it to the Subject field.
func (o *CreateEmailTaskVM) SetSubject(v string) {
	o.Subject.Set(&v)
}
// SetSubjectNil sets the value for Subject to be an explicit nil
func (o *CreateEmailTaskVM) SetSubjectNil() {
	o.Subject.Set(nil)
}

// UnsetSubject ensures that no value is present for Subject, not even an explicit nil
func (o *CreateEmailTaskVM) UnsetSubject() {
	o.Subject.Unset()
}

// GetTo returns the To field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateEmailTaskVM) GetTo() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.To
}

// GetToOk returns a tuple with the To field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateEmailTaskVM) GetToOk() ([]string, bool) {
	if o == nil || IsNil(o.To) {
		return nil, false
	}
	return o.To, true
}

// HasTo returns a boolean if a field has been set.
func (o *CreateEmailTaskVM) HasTo() bool {
	if o != nil && IsNil(o.To) {
		return true
	}

	return false
}

// SetTo gets a reference to the given []string and assigns it to the To field.
func (o *CreateEmailTaskVM) SetTo(v []string) {
	o.To = v
}

// GetUsername returns the Username field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateEmailTaskVM) GetUsername() string {
	if o == nil || IsNil(o.Username.Get()) {
		var ret string
		return ret
	}
	return *o.Username.Get()
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateEmailTaskVM) GetUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Username.Get(), o.Username.IsSet()
}

// HasUsername returns a boolean if a field has been set.
func (o *CreateEmailTaskVM) HasUsername() bool {
	if o != nil && o.Username.IsSet() {
		return true
	}

	return false
}

// SetUsername gets a reference to the given NullableString and assigns it to the Username field.
func (o *CreateEmailTaskVM) SetUsername(v string) {
	o.Username.Set(&v)
}
// SetUsernameNil sets the value for Username to be an explicit nil
func (o *CreateEmailTaskVM) SetUsernameNil() {
	o.Username.Set(nil)
}

// UnsetUsername ensures that no value is present for Username, not even an explicit nil
func (o *CreateEmailTaskVM) UnsetUsername() {
	o.Username.Unset()
}

func (o CreateEmailTaskVM) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateEmailTaskVM) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Body.IsSet() {
		toSerialize["body"] = o.Body.Get()
	}
	if !IsNil(o.EnableSsl) {
		toSerialize["enableSsl"] = o.EnableSsl
	}
	if o.From.IsSet() {
		toSerialize["from"] = o.From.Get()
	}
	if !IsNil(o.IsBodyHtml) {
		toSerialize["isBodyHtml"] = o.IsBodyHtml
	}
	if o.Password.IsSet() {
		toSerialize["password"] = o.Password.Get()
	}
	if !IsNil(o.Port) {
		toSerialize["port"] = o.Port
	}
	if o.Server.IsSet() {
		toSerialize["server"] = o.Server.Get()
	}
	if o.Subject.IsSet() {
		toSerialize["subject"] = o.Subject.Get()
	}
	if o.To != nil {
		toSerialize["to"] = o.To
	}
	if o.Username.IsSet() {
		toSerialize["username"] = o.Username.Get()
	}
	return toSerialize, nil
}

type NullableCreateEmailTaskVM struct {
	value *CreateEmailTaskVM
	isSet bool
}

func (v NullableCreateEmailTaskVM) Get() *CreateEmailTaskVM {
	return v.value
}

func (v *NullableCreateEmailTaskVM) Set(val *CreateEmailTaskVM) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateEmailTaskVM) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateEmailTaskVM) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateEmailTaskVM(val *CreateEmailTaskVM) *NullableCreateEmailTaskVM {
	return &NullableCreateEmailTaskVM{value: val, isSet: true}
}

func (v NullableCreateEmailTaskVM) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateEmailTaskVM) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


