/*
FastReport Cloud

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gofrcloud

import (
	"encoding/json"
)

// checks if the UpdateTransportTaskBaseVM type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateTransportTaskBaseVM{}

// UpdateTransportTaskBaseVM struct for UpdateTransportTaskBaseVM
type UpdateTransportTaskBaseVM struct {
	InputFile *InputFileVM `json:"inputFile,omitempty"`
	T string `json:"$t"`
}

// NewUpdateTransportTaskBaseVM instantiates a new UpdateTransportTaskBaseVM object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateTransportTaskBaseVM(t string) *UpdateTransportTaskBaseVM {
	this := UpdateTransportTaskBaseVM{}
	this.T = t
	return &this
}

// NewUpdateTransportTaskBaseVMWithDefaults instantiates a new UpdateTransportTaskBaseVM object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateTransportTaskBaseVMWithDefaults() *UpdateTransportTaskBaseVM {
	this := UpdateTransportTaskBaseVM{}
	return &this
}

// GetInputFile returns the InputFile field value if set, zero value otherwise.
func (o *UpdateTransportTaskBaseVM) GetInputFile() InputFileVM {
	if o == nil || IsNil(o.InputFile) {
		var ret InputFileVM
		return ret
	}
	return *o.InputFile
}

// GetInputFileOk returns a tuple with the InputFile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTransportTaskBaseVM) GetInputFileOk() (*InputFileVM, bool) {
	if o == nil || IsNil(o.InputFile) {
		return nil, false
	}
	return o.InputFile, true
}

// HasInputFile returns a boolean if a field has been set.
func (o *UpdateTransportTaskBaseVM) HasInputFile() bool {
	if o != nil && !IsNil(o.InputFile) {
		return true
	}

	return false
}

// SetInputFile gets a reference to the given InputFileVM and assigns it to the InputFile field.
func (o *UpdateTransportTaskBaseVM) SetInputFile(v InputFileVM) {
	o.InputFile = &v
}

// GetT returns the T field value
func (o *UpdateTransportTaskBaseVM) GetT() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.T
}

// GetTOk returns a tuple with the T field value
// and a boolean to check if the value has been set.
func (o *UpdateTransportTaskBaseVM) GetTOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.T, true
}

// SetT sets field value
func (o *UpdateTransportTaskBaseVM) SetT(v string) {
	o.T = v
}

func (o UpdateTransportTaskBaseVM) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateTransportTaskBaseVM) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.InputFile) {
		toSerialize["inputFile"] = o.InputFile
	}
	toSerialize["$t"] = o.T
	return toSerialize, nil
}

type NullableUpdateTransportTaskBaseVM struct {
	value *UpdateTransportTaskBaseVM
	isSet bool
}

func (v NullableUpdateTransportTaskBaseVM) Get() *UpdateTransportTaskBaseVM {
	return v.value
}

func (v *NullableUpdateTransportTaskBaseVM) Set(val *UpdateTransportTaskBaseVM) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateTransportTaskBaseVM) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateTransportTaskBaseVM) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateTransportTaskBaseVM(val *UpdateTransportTaskBaseVM) *NullableUpdateTransportTaskBaseVM {
	return &NullableUpdateTransportTaskBaseVM{value: val, isSet: true}
}

func (v NullableUpdateTransportTaskBaseVM) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateTransportTaskBaseVM) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


