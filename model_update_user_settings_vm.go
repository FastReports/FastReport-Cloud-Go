/*
 * FastReport Cloud
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gofrcloud

import (
	"encoding/json"
)

// UpdateUserSettingsVM struct for UpdateUserSettingsVM
type UpdateUserSettingsVM struct {
	ProfileVisibility *ProfileVisibility `json:"profileVisibility,omitempty"`
	DefaultSubscription NullableString `json:"defaultSubscription,omitempty"`
	ShowHiddenFilesAndFolders NullableBool `json:"showHiddenFilesAndFolders,omitempty"`
}

// NewUpdateUserSettingsVM instantiates a new UpdateUserSettingsVM object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateUserSettingsVM() *UpdateUserSettingsVM {
	this := UpdateUserSettingsVM{}
	return &this
}

// NewUpdateUserSettingsVMWithDefaults instantiates a new UpdateUserSettingsVM object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateUserSettingsVMWithDefaults() *UpdateUserSettingsVM {
	this := UpdateUserSettingsVM{}
	return &this
}

// GetProfileVisibility returns the ProfileVisibility field value if set, zero value otherwise.
func (o *UpdateUserSettingsVM) GetProfileVisibility() ProfileVisibility {
	if o == nil || o.ProfileVisibility == nil {
		var ret ProfileVisibility
		return ret
	}
	return *o.ProfileVisibility
}

// GetProfileVisibilityOk returns a tuple with the ProfileVisibility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateUserSettingsVM) GetProfileVisibilityOk() (*ProfileVisibility, bool) {
	if o == nil || o.ProfileVisibility == nil {
		return nil, false
	}
	return o.ProfileVisibility, true
}

// HasProfileVisibility returns a boolean if a field has been set.
func (o *UpdateUserSettingsVM) HasProfileVisibility() bool {
	if o != nil && o.ProfileVisibility != nil {
		return true
	}

	return false
}

// SetProfileVisibility gets a reference to the given ProfileVisibility and assigns it to the ProfileVisibility field.
func (o *UpdateUserSettingsVM) SetProfileVisibility(v ProfileVisibility) {
	o.ProfileVisibility = &v
}

// GetDefaultSubscription returns the DefaultSubscription field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateUserSettingsVM) GetDefaultSubscription() string {
	if o == nil || o.DefaultSubscription.Get() == nil {
		var ret string
		return ret
	}
	return *o.DefaultSubscription.Get()
}

// GetDefaultSubscriptionOk returns a tuple with the DefaultSubscription field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateUserSettingsVM) GetDefaultSubscriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.DefaultSubscription.Get(), o.DefaultSubscription.IsSet()
}

// HasDefaultSubscription returns a boolean if a field has been set.
func (o *UpdateUserSettingsVM) HasDefaultSubscription() bool {
	if o != nil && o.DefaultSubscription.IsSet() {
		return true
	}

	return false
}

// SetDefaultSubscription gets a reference to the given NullableString and assigns it to the DefaultSubscription field.
func (o *UpdateUserSettingsVM) SetDefaultSubscription(v string) {
	o.DefaultSubscription.Set(&v)
}
// SetDefaultSubscriptionNil sets the value for DefaultSubscription to be an explicit nil
func (o *UpdateUserSettingsVM) SetDefaultSubscriptionNil() {
	o.DefaultSubscription.Set(nil)
}

// UnsetDefaultSubscription ensures that no value is present for DefaultSubscription, not even an explicit nil
func (o *UpdateUserSettingsVM) UnsetDefaultSubscription() {
	o.DefaultSubscription.Unset()
}

// GetShowHiddenFilesAndFolders returns the ShowHiddenFilesAndFolders field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateUserSettingsVM) GetShowHiddenFilesAndFolders() bool {
	if o == nil || o.ShowHiddenFilesAndFolders.Get() == nil {
		var ret bool
		return ret
	}
	return *o.ShowHiddenFilesAndFolders.Get()
}

// GetShowHiddenFilesAndFoldersOk returns a tuple with the ShowHiddenFilesAndFolders field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateUserSettingsVM) GetShowHiddenFilesAndFoldersOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return o.ShowHiddenFilesAndFolders.Get(), o.ShowHiddenFilesAndFolders.IsSet()
}

// HasShowHiddenFilesAndFolders returns a boolean if a field has been set.
func (o *UpdateUserSettingsVM) HasShowHiddenFilesAndFolders() bool {
	if o != nil && o.ShowHiddenFilesAndFolders.IsSet() {
		return true
	}

	return false
}

// SetShowHiddenFilesAndFolders gets a reference to the given NullableBool and assigns it to the ShowHiddenFilesAndFolders field.
func (o *UpdateUserSettingsVM) SetShowHiddenFilesAndFolders(v bool) {
	o.ShowHiddenFilesAndFolders.Set(&v)
}
// SetShowHiddenFilesAndFoldersNil sets the value for ShowHiddenFilesAndFolders to be an explicit nil
func (o *UpdateUserSettingsVM) SetShowHiddenFilesAndFoldersNil() {
	o.ShowHiddenFilesAndFolders.Set(nil)
}

// UnsetShowHiddenFilesAndFolders ensures that no value is present for ShowHiddenFilesAndFolders, not even an explicit nil
func (o *UpdateUserSettingsVM) UnsetShowHiddenFilesAndFolders() {
	o.ShowHiddenFilesAndFolders.Unset()
}

func (o UpdateUserSettingsVM) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ProfileVisibility != nil {
		toSerialize["profileVisibility"] = o.ProfileVisibility
	}
	if o.DefaultSubscription.IsSet() {
		toSerialize["defaultSubscription"] = o.DefaultSubscription.Get()
	}
	if o.ShowHiddenFilesAndFolders.IsSet() {
		toSerialize["showHiddenFilesAndFolders"] = o.ShowHiddenFilesAndFolders.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateUserSettingsVM struct {
	value *UpdateUserSettingsVM
	isSet bool
}

func (v NullableUpdateUserSettingsVM) Get() *UpdateUserSettingsVM {
	return v.value
}

func (v *NullableUpdateUserSettingsVM) Set(val *UpdateUserSettingsVM) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateUserSettingsVM) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateUserSettingsVM) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateUserSettingsVM(val *UpdateUserSettingsVM) *NullableUpdateUserSettingsVM {
	return &NullableUpdateUserSettingsVM{value: val, isSet: true}
}

func (v NullableUpdateUserSettingsVM) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateUserSettingsVM) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


