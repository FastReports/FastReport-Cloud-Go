/*
FastReport Cloud

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gofrcloud

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SubscriptionPermissionCRUDVM type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SubscriptionPermissionCRUDVM{}

// SubscriptionPermissionCRUDVM struct for SubscriptionPermissionCRUDVM
type SubscriptionPermissionCRUDVM struct {
	CloudBaseVM
	Create *SubscriptionCreate `json:"create,omitempty"`
	Delete *SubscriptionDelete `json:"delete,omitempty"`
	Execute *SubscriptionExecute `json:"execute,omitempty"`
	Get *SubscriptionGet `json:"get,omitempty"`
	Update *SubscriptionUpdate `json:"update,omitempty"`
	Administrate *SubscriptionAdministrate `json:"administrate,omitempty"`
	T string `json:"$t"`
}

type _SubscriptionPermissionCRUDVM SubscriptionPermissionCRUDVM

// NewSubscriptionPermissionCRUDVM instantiates a new SubscriptionPermissionCRUDVM object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubscriptionPermissionCRUDVM(t string) *SubscriptionPermissionCRUDVM {
	this := SubscriptionPermissionCRUDVM{}
	this.T = t
	return &this
}

// NewSubscriptionPermissionCRUDVMWithDefaults instantiates a new SubscriptionPermissionCRUDVM object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubscriptionPermissionCRUDVMWithDefaults() *SubscriptionPermissionCRUDVM {
	this := SubscriptionPermissionCRUDVM{}
	return &this
}

// GetCreate returns the Create field value if set, zero value otherwise.
func (o *SubscriptionPermissionCRUDVM) GetCreate() SubscriptionCreate {
	if o == nil || IsNil(o.Create) {
		var ret SubscriptionCreate
		return ret
	}
	return *o.Create
}

// GetCreateOk returns a tuple with the Create field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionPermissionCRUDVM) GetCreateOk() (*SubscriptionCreate, bool) {
	if o == nil || IsNil(o.Create) {
		return nil, false
	}
	return o.Create, true
}

// HasCreate returns a boolean if a field has been set.
func (o *SubscriptionPermissionCRUDVM) HasCreate() bool {
	if o != nil && !IsNil(o.Create) {
		return true
	}

	return false
}

// SetCreate gets a reference to the given SubscriptionCreate and assigns it to the Create field.
func (o *SubscriptionPermissionCRUDVM) SetCreate(v SubscriptionCreate) {
	o.Create = &v
}

// GetDelete returns the Delete field value if set, zero value otherwise.
func (o *SubscriptionPermissionCRUDVM) GetDelete() SubscriptionDelete {
	if o == nil || IsNil(o.Delete) {
		var ret SubscriptionDelete
		return ret
	}
	return *o.Delete
}

// GetDeleteOk returns a tuple with the Delete field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionPermissionCRUDVM) GetDeleteOk() (*SubscriptionDelete, bool) {
	if o == nil || IsNil(o.Delete) {
		return nil, false
	}
	return o.Delete, true
}

// HasDelete returns a boolean if a field has been set.
func (o *SubscriptionPermissionCRUDVM) HasDelete() bool {
	if o != nil && !IsNil(o.Delete) {
		return true
	}

	return false
}

// SetDelete gets a reference to the given SubscriptionDelete and assigns it to the Delete field.
func (o *SubscriptionPermissionCRUDVM) SetDelete(v SubscriptionDelete) {
	o.Delete = &v
}

// GetExecute returns the Execute field value if set, zero value otherwise.
func (o *SubscriptionPermissionCRUDVM) GetExecute() SubscriptionExecute {
	if o == nil || IsNil(o.Execute) {
		var ret SubscriptionExecute
		return ret
	}
	return *o.Execute
}

// GetExecuteOk returns a tuple with the Execute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionPermissionCRUDVM) GetExecuteOk() (*SubscriptionExecute, bool) {
	if o == nil || IsNil(o.Execute) {
		return nil, false
	}
	return o.Execute, true
}

// HasExecute returns a boolean if a field has been set.
func (o *SubscriptionPermissionCRUDVM) HasExecute() bool {
	if o != nil && !IsNil(o.Execute) {
		return true
	}

	return false
}

// SetExecute gets a reference to the given SubscriptionExecute and assigns it to the Execute field.
func (o *SubscriptionPermissionCRUDVM) SetExecute(v SubscriptionExecute) {
	o.Execute = &v
}

// GetGet returns the Get field value if set, zero value otherwise.
func (o *SubscriptionPermissionCRUDVM) GetGet() SubscriptionGet {
	if o == nil || IsNil(o.Get) {
		var ret SubscriptionGet
		return ret
	}
	return *o.Get
}

// GetGetOk returns a tuple with the Get field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionPermissionCRUDVM) GetGetOk() (*SubscriptionGet, bool) {
	if o == nil || IsNil(o.Get) {
		return nil, false
	}
	return o.Get, true
}

// HasGet returns a boolean if a field has been set.
func (o *SubscriptionPermissionCRUDVM) HasGet() bool {
	if o != nil && !IsNil(o.Get) {
		return true
	}

	return false
}

// SetGet gets a reference to the given SubscriptionGet and assigns it to the Get field.
func (o *SubscriptionPermissionCRUDVM) SetGet(v SubscriptionGet) {
	o.Get = &v
}

// GetUpdate returns the Update field value if set, zero value otherwise.
func (o *SubscriptionPermissionCRUDVM) GetUpdate() SubscriptionUpdate {
	if o == nil || IsNil(o.Update) {
		var ret SubscriptionUpdate
		return ret
	}
	return *o.Update
}

// GetUpdateOk returns a tuple with the Update field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionPermissionCRUDVM) GetUpdateOk() (*SubscriptionUpdate, bool) {
	if o == nil || IsNil(o.Update) {
		return nil, false
	}
	return o.Update, true
}

// HasUpdate returns a boolean if a field has been set.
func (o *SubscriptionPermissionCRUDVM) HasUpdate() bool {
	if o != nil && !IsNil(o.Update) {
		return true
	}

	return false
}

// SetUpdate gets a reference to the given SubscriptionUpdate and assigns it to the Update field.
func (o *SubscriptionPermissionCRUDVM) SetUpdate(v SubscriptionUpdate) {
	o.Update = &v
}

// GetAdministrate returns the Administrate field value if set, zero value otherwise.
func (o *SubscriptionPermissionCRUDVM) GetAdministrate() SubscriptionAdministrate {
	if o == nil || IsNil(o.Administrate) {
		var ret SubscriptionAdministrate
		return ret
	}
	return *o.Administrate
}

// GetAdministrateOk returns a tuple with the Administrate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionPermissionCRUDVM) GetAdministrateOk() (*SubscriptionAdministrate, bool) {
	if o == nil || IsNil(o.Administrate) {
		return nil, false
	}
	return o.Administrate, true
}

// HasAdministrate returns a boolean if a field has been set.
func (o *SubscriptionPermissionCRUDVM) HasAdministrate() bool {
	if o != nil && !IsNil(o.Administrate) {
		return true
	}

	return false
}

// SetAdministrate gets a reference to the given SubscriptionAdministrate and assigns it to the Administrate field.
func (o *SubscriptionPermissionCRUDVM) SetAdministrate(v SubscriptionAdministrate) {
	o.Administrate = &v
}

// GetT returns the T field value
func (o *SubscriptionPermissionCRUDVM) GetT() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.T
}

// GetTOk returns a tuple with the T field value
// and a boolean to check if the value has been set.
func (o *SubscriptionPermissionCRUDVM) GetTOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.T, true
}

// SetT sets field value
func (o *SubscriptionPermissionCRUDVM) SetT(v string) {
	o.T = v
}

func (o SubscriptionPermissionCRUDVM) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SubscriptionPermissionCRUDVM) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	serializedCloudBaseVM, errCloudBaseVM := json.Marshal(o.CloudBaseVM)
	if errCloudBaseVM != nil {
		return map[string]interface{}{}, errCloudBaseVM
	}
	errCloudBaseVM = json.Unmarshal([]byte(serializedCloudBaseVM), &toSerialize)
	if errCloudBaseVM != nil {
		return map[string]interface{}{}, errCloudBaseVM
	}
	if !IsNil(o.Create) {
		toSerialize["create"] = o.Create
	}
	if !IsNil(o.Delete) {
		toSerialize["delete"] = o.Delete
	}
	if !IsNil(o.Execute) {
		toSerialize["execute"] = o.Execute
	}
	if !IsNil(o.Get) {
		toSerialize["get"] = o.Get
	}
	if !IsNil(o.Update) {
		toSerialize["update"] = o.Update
	}
	if !IsNil(o.Administrate) {
		toSerialize["administrate"] = o.Administrate
	}
	toSerialize["$t"] = o.T
	return toSerialize, nil
}

func (o *SubscriptionPermissionCRUDVM) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"$t",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSubscriptionPermissionCRUDVM := _SubscriptionPermissionCRUDVM{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSubscriptionPermissionCRUDVM)

	if err != nil {
		return err
	}

	*o = SubscriptionPermissionCRUDVM(varSubscriptionPermissionCRUDVM)

	return err
}

type NullableSubscriptionPermissionCRUDVM struct {
	value *SubscriptionPermissionCRUDVM
	isSet bool
}

func (v NullableSubscriptionPermissionCRUDVM) Get() *SubscriptionPermissionCRUDVM {
	return v.value
}

func (v *NullableSubscriptionPermissionCRUDVM) Set(val *SubscriptionPermissionCRUDVM) {
	v.value = val
	v.isSet = true
}

func (v NullableSubscriptionPermissionCRUDVM) IsSet() bool {
	return v.isSet
}

func (v *NullableSubscriptionPermissionCRUDVM) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubscriptionPermissionCRUDVM(val *SubscriptionPermissionCRUDVM) *NullableSubscriptionPermissionCRUDVM {
	return &NullableSubscriptionPermissionCRUDVM{value: val, isSet: true}
}

func (v NullableSubscriptionPermissionCRUDVM) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubscriptionPermissionCRUDVM) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


