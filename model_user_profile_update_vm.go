/*
 * FastReport Cloud
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gofrcloud

import (
	"encoding/json"
)

// UserProfileUpdateVM struct for UserProfileUpdateVM
type UserProfileUpdateVM struct {
	Name *string `json:"name,omitempty"`
	Username *string `json:"username,omitempty"`
	Email *string `json:"email,omitempty"`
	PasswordNew *string `json:"passwordNew,omitempty"`
	PasswordNew2 *string `json:"passwordNew2,omitempty"`
}

// NewUserProfileUpdateVM instantiates a new UserProfileUpdateVM object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserProfileUpdateVM() *UserProfileUpdateVM {
	this := UserProfileUpdateVM{}
	return &this
}

// NewUserProfileUpdateVMWithDefaults instantiates a new UserProfileUpdateVM object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserProfileUpdateVMWithDefaults() *UserProfileUpdateVM {
	this := UserProfileUpdateVM{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UserProfileUpdateVM) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserProfileUpdateVM) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UserProfileUpdateVM) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UserProfileUpdateVM) SetName(v string) {
	o.Name = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *UserProfileUpdateVM) GetUsername() string {
	if o == nil || o.Username == nil {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserProfileUpdateVM) GetUsernameOk() (*string, bool) {
	if o == nil || o.Username == nil {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *UserProfileUpdateVM) HasUsername() bool {
	if o != nil && o.Username != nil {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *UserProfileUpdateVM) SetUsername(v string) {
	o.Username = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *UserProfileUpdateVM) GetEmail() string {
	if o == nil || o.Email == nil {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserProfileUpdateVM) GetEmailOk() (*string, bool) {
	if o == nil || o.Email == nil {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *UserProfileUpdateVM) HasEmail() bool {
	if o != nil && o.Email != nil {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *UserProfileUpdateVM) SetEmail(v string) {
	o.Email = &v
}

// GetPasswordNew returns the PasswordNew field value if set, zero value otherwise.
func (o *UserProfileUpdateVM) GetPasswordNew() string {
	if o == nil || o.PasswordNew == nil {
		var ret string
		return ret
	}
	return *o.PasswordNew
}

// GetPasswordNewOk returns a tuple with the PasswordNew field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserProfileUpdateVM) GetPasswordNewOk() (*string, bool) {
	if o == nil || o.PasswordNew == nil {
		return nil, false
	}
	return o.PasswordNew, true
}

// HasPasswordNew returns a boolean if a field has been set.
func (o *UserProfileUpdateVM) HasPasswordNew() bool {
	if o != nil && o.PasswordNew != nil {
		return true
	}

	return false
}

// SetPasswordNew gets a reference to the given string and assigns it to the PasswordNew field.
func (o *UserProfileUpdateVM) SetPasswordNew(v string) {
	o.PasswordNew = &v
}

// GetPasswordNew2 returns the PasswordNew2 field value if set, zero value otherwise.
func (o *UserProfileUpdateVM) GetPasswordNew2() string {
	if o == nil || o.PasswordNew2 == nil {
		var ret string
		return ret
	}
	return *o.PasswordNew2
}

// GetPasswordNew2Ok returns a tuple with the PasswordNew2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserProfileUpdateVM) GetPasswordNew2Ok() (*string, bool) {
	if o == nil || o.PasswordNew2 == nil {
		return nil, false
	}
	return o.PasswordNew2, true
}

// HasPasswordNew2 returns a boolean if a field has been set.
func (o *UserProfileUpdateVM) HasPasswordNew2() bool {
	if o != nil && o.PasswordNew2 != nil {
		return true
	}

	return false
}

// SetPasswordNew2 gets a reference to the given string and assigns it to the PasswordNew2 field.
func (o *UserProfileUpdateVM) SetPasswordNew2(v string) {
	o.PasswordNew2 = &v
}

func (o UserProfileUpdateVM) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Username != nil {
		toSerialize["username"] = o.Username
	}
	if o.Email != nil {
		toSerialize["email"] = o.Email
	}
	if o.PasswordNew != nil {
		toSerialize["passwordNew"] = o.PasswordNew
	}
	if o.PasswordNew2 != nil {
		toSerialize["passwordNew2"] = o.PasswordNew2
	}
	return json.Marshal(toSerialize)
}

type NullableUserProfileUpdateVM struct {
	value *UserProfileUpdateVM
	isSet bool
}

func (v NullableUserProfileUpdateVM) Get() *UserProfileUpdateVM {
	return v.value
}

func (v *NullableUserProfileUpdateVM) Set(val *UserProfileUpdateVM) {
	v.value = val
	v.isSet = true
}

func (v NullableUserProfileUpdateVM) IsSet() bool {
	return v.isSet
}

func (v *NullableUserProfileUpdateVM) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserProfileUpdateVM(val *UserProfileUpdateVM) *NullableUserProfileUpdateVM {
	return &NullableUserProfileUpdateVM{value: val, isSet: true}
}

func (v NullableUserProfileUpdateVM) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserProfileUpdateVM) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


