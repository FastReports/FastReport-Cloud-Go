/*
 * FastReport Cloud
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gofrcloud

import (
	"encoding/json"
)

// UpdateUserVM struct for UpdateUserVM
type UpdateUserVM struct {
	Subscriptions *[]string `json:"subscriptions,omitempty"`
	Groups *[]string `json:"groups,omitempty"`
	AdminPermission *AdminPermission `json:"adminPermission,omitempty"`
	Name *string `json:"name,omitempty"`
	Username *string `json:"username,omitempty"`
	Email *string `json:"email,omitempty"`
	Password *string `json:"password,omitempty"`
	IsAdmin *bool `json:"isAdmin,omitempty"`
	Provider *string `json:"provider,omitempty"`
}

// NewUpdateUserVM instantiates a new UpdateUserVM object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateUserVM() *UpdateUserVM {
	this := UpdateUserVM{}
	return &this
}

// NewUpdateUserVMWithDefaults instantiates a new UpdateUserVM object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateUserVMWithDefaults() *UpdateUserVM {
	this := UpdateUserVM{}
	return &this
}

// GetSubscriptions returns the Subscriptions field value if set, zero value otherwise.
func (o *UpdateUserVM) GetSubscriptions() []string {
	if o == nil || o.Subscriptions == nil {
		var ret []string
		return ret
	}
	return *o.Subscriptions
}

// GetSubscriptionsOk returns a tuple with the Subscriptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateUserVM) GetSubscriptionsOk() (*[]string, bool) {
	if o == nil || o.Subscriptions == nil {
		return nil, false
	}
	return o.Subscriptions, true
}

// HasSubscriptions returns a boolean if a field has been set.
func (o *UpdateUserVM) HasSubscriptions() bool {
	if o != nil && o.Subscriptions != nil {
		return true
	}

	return false
}

// SetSubscriptions gets a reference to the given []string and assigns it to the Subscriptions field.
func (o *UpdateUserVM) SetSubscriptions(v []string) {
	o.Subscriptions = &v
}

// GetGroups returns the Groups field value if set, zero value otherwise.
func (o *UpdateUserVM) GetGroups() []string {
	if o == nil || o.Groups == nil {
		var ret []string
		return ret
	}
	return *o.Groups
}

// GetGroupsOk returns a tuple with the Groups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateUserVM) GetGroupsOk() (*[]string, bool) {
	if o == nil || o.Groups == nil {
		return nil, false
	}
	return o.Groups, true
}

// HasGroups returns a boolean if a field has been set.
func (o *UpdateUserVM) HasGroups() bool {
	if o != nil && o.Groups != nil {
		return true
	}

	return false
}

// SetGroups gets a reference to the given []string and assigns it to the Groups field.
func (o *UpdateUserVM) SetGroups(v []string) {
	o.Groups = &v
}

// GetAdminPermission returns the AdminPermission field value if set, zero value otherwise.
func (o *UpdateUserVM) GetAdminPermission() AdminPermission {
	if o == nil || o.AdminPermission == nil {
		var ret AdminPermission
		return ret
	}
	return *o.AdminPermission
}

// GetAdminPermissionOk returns a tuple with the AdminPermission field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateUserVM) GetAdminPermissionOk() (*AdminPermission, bool) {
	if o == nil || o.AdminPermission == nil {
		return nil, false
	}
	return o.AdminPermission, true
}

// HasAdminPermission returns a boolean if a field has been set.
func (o *UpdateUserVM) HasAdminPermission() bool {
	if o != nil && o.AdminPermission != nil {
		return true
	}

	return false
}

// SetAdminPermission gets a reference to the given AdminPermission and assigns it to the AdminPermission field.
func (o *UpdateUserVM) SetAdminPermission(v AdminPermission) {
	o.AdminPermission = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpdateUserVM) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateUserVM) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UpdateUserVM) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UpdateUserVM) SetName(v string) {
	o.Name = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *UpdateUserVM) GetUsername() string {
	if o == nil || o.Username == nil {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateUserVM) GetUsernameOk() (*string, bool) {
	if o == nil || o.Username == nil {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *UpdateUserVM) HasUsername() bool {
	if o != nil && o.Username != nil {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *UpdateUserVM) SetUsername(v string) {
	o.Username = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *UpdateUserVM) GetEmail() string {
	if o == nil || o.Email == nil {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateUserVM) GetEmailOk() (*string, bool) {
	if o == nil || o.Email == nil {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *UpdateUserVM) HasEmail() bool {
	if o != nil && o.Email != nil {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *UpdateUserVM) SetEmail(v string) {
	o.Email = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *UpdateUserVM) GetPassword() string {
	if o == nil || o.Password == nil {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateUserVM) GetPasswordOk() (*string, bool) {
	if o == nil || o.Password == nil {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *UpdateUserVM) HasPassword() bool {
	if o != nil && o.Password != nil {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *UpdateUserVM) SetPassword(v string) {
	o.Password = &v
}

// GetIsAdmin returns the IsAdmin field value if set, zero value otherwise.
func (o *UpdateUserVM) GetIsAdmin() bool {
	if o == nil || o.IsAdmin == nil {
		var ret bool
		return ret
	}
	return *o.IsAdmin
}

// GetIsAdminOk returns a tuple with the IsAdmin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateUserVM) GetIsAdminOk() (*bool, bool) {
	if o == nil || o.IsAdmin == nil {
		return nil, false
	}
	return o.IsAdmin, true
}

// HasIsAdmin returns a boolean if a field has been set.
func (o *UpdateUserVM) HasIsAdmin() bool {
	if o != nil && o.IsAdmin != nil {
		return true
	}

	return false
}

// SetIsAdmin gets a reference to the given bool and assigns it to the IsAdmin field.
func (o *UpdateUserVM) SetIsAdmin(v bool) {
	o.IsAdmin = &v
}

// GetProvider returns the Provider field value if set, zero value otherwise.
func (o *UpdateUserVM) GetProvider() string {
	if o == nil || o.Provider == nil {
		var ret string
		return ret
	}
	return *o.Provider
}

// GetProviderOk returns a tuple with the Provider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateUserVM) GetProviderOk() (*string, bool) {
	if o == nil || o.Provider == nil {
		return nil, false
	}
	return o.Provider, true
}

// HasProvider returns a boolean if a field has been set.
func (o *UpdateUserVM) HasProvider() bool {
	if o != nil && o.Provider != nil {
		return true
	}

	return false
}

// SetProvider gets a reference to the given string and assigns it to the Provider field.
func (o *UpdateUserVM) SetProvider(v string) {
	o.Provider = &v
}

func (o UpdateUserVM) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Subscriptions != nil {
		toSerialize["subscriptions"] = o.Subscriptions
	}
	if o.Groups != nil {
		toSerialize["groups"] = o.Groups
	}
	if o.AdminPermission != nil {
		toSerialize["adminPermission"] = o.AdminPermission
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Username != nil {
		toSerialize["username"] = o.Username
	}
	if o.Email != nil {
		toSerialize["email"] = o.Email
	}
	if o.Password != nil {
		toSerialize["password"] = o.Password
	}
	if o.IsAdmin != nil {
		toSerialize["isAdmin"] = o.IsAdmin
	}
	if o.Provider != nil {
		toSerialize["provider"] = o.Provider
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateUserVM struct {
	value *UpdateUserVM
	isSet bool
}

func (v NullableUpdateUserVM) Get() *UpdateUserVM {
	return v.value
}

func (v *NullableUpdateUserVM) Set(val *UpdateUserVM) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateUserVM) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateUserVM) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateUserVM(val *UpdateUserVM) *NullableUpdateUserVM {
	return &NullableUpdateUserVM{value: val, isSet: true}
}

func (v NullableUpdateUserVM) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateUserVM) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


