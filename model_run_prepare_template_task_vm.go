/*
 * FastReport Cloud
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gofrcloud

import (
	"encoding/json"
)

// RunPrepareTemplateTaskVM struct for RunPrepareTemplateTaskVM
type RunPrepareTemplateTaskVM struct {
	Exports []RunExportReportTaskVM `json:"exports,omitempty"`
	PagesCount NullableInt32 `json:"pagesCount,omitempty"`
	ReportParameters map[string]string `json:"reportParameters,omitempty"`
	SubscriptionId NullableString `json:"subscriptionId,omitempty"`
	Type *TaskType `json:"type,omitempty"`
}

// NewRunPrepareTemplateTaskVM instantiates a new RunPrepareTemplateTaskVM object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRunPrepareTemplateTaskVM() *RunPrepareTemplateTaskVM {
	this := RunPrepareTemplateTaskVM{}
	return &this
}

// NewRunPrepareTemplateTaskVMWithDefaults instantiates a new RunPrepareTemplateTaskVM object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRunPrepareTemplateTaskVMWithDefaults() *RunPrepareTemplateTaskVM {
	this := RunPrepareTemplateTaskVM{}
	return &this
}

// GetExports returns the Exports field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RunPrepareTemplateTaskVM) GetExports() []RunExportReportTaskVM {
	if o == nil  {
		var ret []RunExportReportTaskVM
		return ret
	}
	return o.Exports
}

// GetExportsOk returns a tuple with the Exports field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RunPrepareTemplateTaskVM) GetExportsOk() (*[]RunExportReportTaskVM, bool) {
	if o == nil || o.Exports == nil {
		return nil, false
	}
	return &o.Exports, true
}

// HasExports returns a boolean if a field has been set.
func (o *RunPrepareTemplateTaskVM) HasExports() bool {
	if o != nil && o.Exports != nil {
		return true
	}

	return false
}

// SetExports gets a reference to the given []RunExportReportTaskVM and assigns it to the Exports field.
func (o *RunPrepareTemplateTaskVM) SetExports(v []RunExportReportTaskVM) {
	o.Exports = v
}

// GetPagesCount returns the PagesCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RunPrepareTemplateTaskVM) GetPagesCount() int32 {
	if o == nil || o.PagesCount.Get() == nil {
		var ret int32
		return ret
	}
	return *o.PagesCount.Get()
}

// GetPagesCountOk returns a tuple with the PagesCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RunPrepareTemplateTaskVM) GetPagesCountOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PagesCount.Get(), o.PagesCount.IsSet()
}

// HasPagesCount returns a boolean if a field has been set.
func (o *RunPrepareTemplateTaskVM) HasPagesCount() bool {
	if o != nil && o.PagesCount.IsSet() {
		return true
	}

	return false
}

// SetPagesCount gets a reference to the given NullableInt32 and assigns it to the PagesCount field.
func (o *RunPrepareTemplateTaskVM) SetPagesCount(v int32) {
	o.PagesCount.Set(&v)
}
// SetPagesCountNil sets the value for PagesCount to be an explicit nil
func (o *RunPrepareTemplateTaskVM) SetPagesCountNil() {
	o.PagesCount.Set(nil)
}

// UnsetPagesCount ensures that no value is present for PagesCount, not even an explicit nil
func (o *RunPrepareTemplateTaskVM) UnsetPagesCount() {
	o.PagesCount.Unset()
}

// GetReportParameters returns the ReportParameters field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RunPrepareTemplateTaskVM) GetReportParameters() map[string]string {
	if o == nil  {
		var ret map[string]string
		return ret
	}
	return o.ReportParameters
}

// GetReportParametersOk returns a tuple with the ReportParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RunPrepareTemplateTaskVM) GetReportParametersOk() (*map[string]string, bool) {
	if o == nil || o.ReportParameters == nil {
		return nil, false
	}
	return &o.ReportParameters, true
}

// HasReportParameters returns a boolean if a field has been set.
func (o *RunPrepareTemplateTaskVM) HasReportParameters() bool {
	if o != nil && o.ReportParameters != nil {
		return true
	}

	return false
}

// SetReportParameters gets a reference to the given map[string]string and assigns it to the ReportParameters field.
func (o *RunPrepareTemplateTaskVM) SetReportParameters(v map[string]string) {
	o.ReportParameters = v
}

// GetSubscriptionId returns the SubscriptionId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RunPrepareTemplateTaskVM) GetSubscriptionId() string {
	if o == nil || o.SubscriptionId.Get() == nil {
		var ret string
		return ret
	}
	return *o.SubscriptionId.Get()
}

// GetSubscriptionIdOk returns a tuple with the SubscriptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RunPrepareTemplateTaskVM) GetSubscriptionIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SubscriptionId.Get(), o.SubscriptionId.IsSet()
}

// HasSubscriptionId returns a boolean if a field has been set.
func (o *RunPrepareTemplateTaskVM) HasSubscriptionId() bool {
	if o != nil && o.SubscriptionId.IsSet() {
		return true
	}

	return false
}

// SetSubscriptionId gets a reference to the given NullableString and assigns it to the SubscriptionId field.
func (o *RunPrepareTemplateTaskVM) SetSubscriptionId(v string) {
	o.SubscriptionId.Set(&v)
}
// SetSubscriptionIdNil sets the value for SubscriptionId to be an explicit nil
func (o *RunPrepareTemplateTaskVM) SetSubscriptionIdNil() {
	o.SubscriptionId.Set(nil)
}

// UnsetSubscriptionId ensures that no value is present for SubscriptionId, not even an explicit nil
func (o *RunPrepareTemplateTaskVM) UnsetSubscriptionId() {
	o.SubscriptionId.Unset()
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *RunPrepareTemplateTaskVM) GetType() TaskType {
	if o == nil || o.Type == nil {
		var ret TaskType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RunPrepareTemplateTaskVM) GetTypeOk() (*TaskType, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *RunPrepareTemplateTaskVM) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given TaskType and assigns it to the Type field.
func (o *RunPrepareTemplateTaskVM) SetType(v TaskType) {
	o.Type = &v
}

func (o RunPrepareTemplateTaskVM) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Exports != nil {
		toSerialize["exports"] = o.Exports
	}
	if o.PagesCount.IsSet() {
		toSerialize["pagesCount"] = o.PagesCount.Get()
	}
	if o.ReportParameters != nil {
		toSerialize["reportParameters"] = o.ReportParameters
	}
	if o.SubscriptionId.IsSet() {
		toSerialize["subscriptionId"] = o.SubscriptionId.Get()
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableRunPrepareTemplateTaskVM struct {
	value *RunPrepareTemplateTaskVM
	isSet bool
}

func (v NullableRunPrepareTemplateTaskVM) Get() *RunPrepareTemplateTaskVM {
	return v.value
}

func (v *NullableRunPrepareTemplateTaskVM) Set(val *RunPrepareTemplateTaskVM) {
	v.value = val
	v.isSet = true
}

func (v NullableRunPrepareTemplateTaskVM) IsSet() bool {
	return v.isSet
}

func (v *NullableRunPrepareTemplateTaskVM) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRunPrepareTemplateTaskVM(val *RunPrepareTemplateTaskVM) *NullableRunPrepareTemplateTaskVM {
	return &NullableRunPrepareTemplateTaskVM{value: val, isSet: true}
}

func (v NullableRunPrepareTemplateTaskVM) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRunPrepareTemplateTaskVM) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


