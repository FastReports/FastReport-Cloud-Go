/*
FastReport Cloud

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gofrcloud

import (
	"encoding/json"
)

// checks if the SelectedFilesForDeletingVM type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SelectedFilesForDeletingVM{}

// SelectedFilesForDeletingVM struct for SelectedFilesForDeletingVM
type SelectedFilesForDeletingVM struct {
	IsBin *bool `json:"isBin,omitempty"`
	FolderId NullableString `json:"folderId,omitempty"`
	SearchPattern NullableString `json:"searchPattern,omitempty"`
	UseRegex *bool `json:"useRegex,omitempty"`
}

// NewSelectedFilesForDeletingVM instantiates a new SelectedFilesForDeletingVM object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSelectedFilesForDeletingVM() *SelectedFilesForDeletingVM {
	this := SelectedFilesForDeletingVM{}
	return &this
}

// NewSelectedFilesForDeletingVMWithDefaults instantiates a new SelectedFilesForDeletingVM object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSelectedFilesForDeletingVMWithDefaults() *SelectedFilesForDeletingVM {
	this := SelectedFilesForDeletingVM{}
	return &this
}

// GetIsBin returns the IsBin field value if set, zero value otherwise.
func (o *SelectedFilesForDeletingVM) GetIsBin() bool {
	if o == nil || IsNil(o.IsBin) {
		var ret bool
		return ret
	}
	return *o.IsBin
}

// GetIsBinOk returns a tuple with the IsBin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SelectedFilesForDeletingVM) GetIsBinOk() (*bool, bool) {
	if o == nil || IsNil(o.IsBin) {
		return nil, false
	}
	return o.IsBin, true
}

// HasIsBin returns a boolean if a field has been set.
func (o *SelectedFilesForDeletingVM) HasIsBin() bool {
	if o != nil && !IsNil(o.IsBin) {
		return true
	}

	return false
}

// SetIsBin gets a reference to the given bool and assigns it to the IsBin field.
func (o *SelectedFilesForDeletingVM) SetIsBin(v bool) {
	o.IsBin = &v
}

// GetFolderId returns the FolderId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SelectedFilesForDeletingVM) GetFolderId() string {
	if o == nil || IsNil(o.FolderId.Get()) {
		var ret string
		return ret
	}
	return *o.FolderId.Get()
}

// GetFolderIdOk returns a tuple with the FolderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SelectedFilesForDeletingVM) GetFolderIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FolderId.Get(), o.FolderId.IsSet()
}

// HasFolderId returns a boolean if a field has been set.
func (o *SelectedFilesForDeletingVM) HasFolderId() bool {
	if o != nil && o.FolderId.IsSet() {
		return true
	}

	return false
}

// SetFolderId gets a reference to the given NullableString and assigns it to the FolderId field.
func (o *SelectedFilesForDeletingVM) SetFolderId(v string) {
	o.FolderId.Set(&v)
}
// SetFolderIdNil sets the value for FolderId to be an explicit nil
func (o *SelectedFilesForDeletingVM) SetFolderIdNil() {
	o.FolderId.Set(nil)
}

// UnsetFolderId ensures that no value is present for FolderId, not even an explicit nil
func (o *SelectedFilesForDeletingVM) UnsetFolderId() {
	o.FolderId.Unset()
}

// GetSearchPattern returns the SearchPattern field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SelectedFilesForDeletingVM) GetSearchPattern() string {
	if o == nil || IsNil(o.SearchPattern.Get()) {
		var ret string
		return ret
	}
	return *o.SearchPattern.Get()
}

// GetSearchPatternOk returns a tuple with the SearchPattern field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SelectedFilesForDeletingVM) GetSearchPatternOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SearchPattern.Get(), o.SearchPattern.IsSet()
}

// HasSearchPattern returns a boolean if a field has been set.
func (o *SelectedFilesForDeletingVM) HasSearchPattern() bool {
	if o != nil && o.SearchPattern.IsSet() {
		return true
	}

	return false
}

// SetSearchPattern gets a reference to the given NullableString and assigns it to the SearchPattern field.
func (o *SelectedFilesForDeletingVM) SetSearchPattern(v string) {
	o.SearchPattern.Set(&v)
}
// SetSearchPatternNil sets the value for SearchPattern to be an explicit nil
func (o *SelectedFilesForDeletingVM) SetSearchPatternNil() {
	o.SearchPattern.Set(nil)
}

// UnsetSearchPattern ensures that no value is present for SearchPattern, not even an explicit nil
func (o *SelectedFilesForDeletingVM) UnsetSearchPattern() {
	o.SearchPattern.Unset()
}

// GetUseRegex returns the UseRegex field value if set, zero value otherwise.
func (o *SelectedFilesForDeletingVM) GetUseRegex() bool {
	if o == nil || IsNil(o.UseRegex) {
		var ret bool
		return ret
	}
	return *o.UseRegex
}

// GetUseRegexOk returns a tuple with the UseRegex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SelectedFilesForDeletingVM) GetUseRegexOk() (*bool, bool) {
	if o == nil || IsNil(o.UseRegex) {
		return nil, false
	}
	return o.UseRegex, true
}

// HasUseRegex returns a boolean if a field has been set.
func (o *SelectedFilesForDeletingVM) HasUseRegex() bool {
	if o != nil && !IsNil(o.UseRegex) {
		return true
	}

	return false
}

// SetUseRegex gets a reference to the given bool and assigns it to the UseRegex field.
func (o *SelectedFilesForDeletingVM) SetUseRegex(v bool) {
	o.UseRegex = &v
}

func (o SelectedFilesForDeletingVM) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SelectedFilesForDeletingVM) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IsBin) {
		toSerialize["isBin"] = o.IsBin
	}
	if o.FolderId.IsSet() {
		toSerialize["folderId"] = o.FolderId.Get()
	}
	if o.SearchPattern.IsSet() {
		toSerialize["searchPattern"] = o.SearchPattern.Get()
	}
	if !IsNil(o.UseRegex) {
		toSerialize["useRegex"] = o.UseRegex
	}
	return toSerialize, nil
}

type NullableSelectedFilesForDeletingVM struct {
	value *SelectedFilesForDeletingVM
	isSet bool
}

func (v NullableSelectedFilesForDeletingVM) Get() *SelectedFilesForDeletingVM {
	return v.value
}

func (v *NullableSelectedFilesForDeletingVM) Set(val *SelectedFilesForDeletingVM) {
	v.value = val
	v.isSet = true
}

func (v NullableSelectedFilesForDeletingVM) IsSet() bool {
	return v.isSet
}

func (v *NullableSelectedFilesForDeletingVM) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSelectedFilesForDeletingVM(val *SelectedFilesForDeletingVM) *NullableSelectedFilesForDeletingVM {
	return &NullableSelectedFilesForDeletingVM{value: val, isSet: true}
}

func (v NullableSelectedFilesForDeletingVM) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSelectedFilesForDeletingVM) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


