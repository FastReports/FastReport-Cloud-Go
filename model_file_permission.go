/*
 * FastReport Cloud
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gofrcloud

import (
	"encoding/json"
)

// FilePermission struct for FilePermission
type FilePermission struct {
	Create *FileCreate `json:"create,omitempty"`
	Delete *FileDelete `json:"delete,omitempty"`
	Execute *FileExecute `json:"execute,omitempty"`
	Get *FileGet `json:"get,omitempty"`
	Update *FileUpdate `json:"update,omitempty"`
	Administrate *FileAdministrate `json:"administrate,omitempty"`
}

// NewFilePermission instantiates a new FilePermission object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFilePermission() *FilePermission {
	this := FilePermission{}
	return &this
}

// NewFilePermissionWithDefaults instantiates a new FilePermission object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFilePermissionWithDefaults() *FilePermission {
	this := FilePermission{}
	return &this
}

// GetCreate returns the Create field value if set, zero value otherwise.
func (o *FilePermission) GetCreate() FileCreate {
	if o == nil || o.Create == nil {
		var ret FileCreate
		return ret
	}
	return *o.Create
}

// GetCreateOk returns a tuple with the Create field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilePermission) GetCreateOk() (*FileCreate, bool) {
	if o == nil || o.Create == nil {
		return nil, false
	}
	return o.Create, true
}

// HasCreate returns a boolean if a field has been set.
func (o *FilePermission) HasCreate() bool {
	if o != nil && o.Create != nil {
		return true
	}

	return false
}

// SetCreate gets a reference to the given FileCreate and assigns it to the Create field.
func (o *FilePermission) SetCreate(v FileCreate) {
	o.Create = &v
}

// GetDelete returns the Delete field value if set, zero value otherwise.
func (o *FilePermission) GetDelete() FileDelete {
	if o == nil || o.Delete == nil {
		var ret FileDelete
		return ret
	}
	return *o.Delete
}

// GetDeleteOk returns a tuple with the Delete field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilePermission) GetDeleteOk() (*FileDelete, bool) {
	if o == nil || o.Delete == nil {
		return nil, false
	}
	return o.Delete, true
}

// HasDelete returns a boolean if a field has been set.
func (o *FilePermission) HasDelete() bool {
	if o != nil && o.Delete != nil {
		return true
	}

	return false
}

// SetDelete gets a reference to the given FileDelete and assigns it to the Delete field.
func (o *FilePermission) SetDelete(v FileDelete) {
	o.Delete = &v
}

// GetExecute returns the Execute field value if set, zero value otherwise.
func (o *FilePermission) GetExecute() FileExecute {
	if o == nil || o.Execute == nil {
		var ret FileExecute
		return ret
	}
	return *o.Execute
}

// GetExecuteOk returns a tuple with the Execute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilePermission) GetExecuteOk() (*FileExecute, bool) {
	if o == nil || o.Execute == nil {
		return nil, false
	}
	return o.Execute, true
}

// HasExecute returns a boolean if a field has been set.
func (o *FilePermission) HasExecute() bool {
	if o != nil && o.Execute != nil {
		return true
	}

	return false
}

// SetExecute gets a reference to the given FileExecute and assigns it to the Execute field.
func (o *FilePermission) SetExecute(v FileExecute) {
	o.Execute = &v
}

// GetGet returns the Get field value if set, zero value otherwise.
func (o *FilePermission) GetGet() FileGet {
	if o == nil || o.Get == nil {
		var ret FileGet
		return ret
	}
	return *o.Get
}

// GetGetOk returns a tuple with the Get field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilePermission) GetGetOk() (*FileGet, bool) {
	if o == nil || o.Get == nil {
		return nil, false
	}
	return o.Get, true
}

// HasGet returns a boolean if a field has been set.
func (o *FilePermission) HasGet() bool {
	if o != nil && o.Get != nil {
		return true
	}

	return false
}

// SetGet gets a reference to the given FileGet and assigns it to the Get field.
func (o *FilePermission) SetGet(v FileGet) {
	o.Get = &v
}

// GetUpdate returns the Update field value if set, zero value otherwise.
func (o *FilePermission) GetUpdate() FileUpdate {
	if o == nil || o.Update == nil {
		var ret FileUpdate
		return ret
	}
	return *o.Update
}

// GetUpdateOk returns a tuple with the Update field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilePermission) GetUpdateOk() (*FileUpdate, bool) {
	if o == nil || o.Update == nil {
		return nil, false
	}
	return o.Update, true
}

// HasUpdate returns a boolean if a field has been set.
func (o *FilePermission) HasUpdate() bool {
	if o != nil && o.Update != nil {
		return true
	}

	return false
}

// SetUpdate gets a reference to the given FileUpdate and assigns it to the Update field.
func (o *FilePermission) SetUpdate(v FileUpdate) {
	o.Update = &v
}

// GetAdministrate returns the Administrate field value if set, zero value otherwise.
func (o *FilePermission) GetAdministrate() FileAdministrate {
	if o == nil || o.Administrate == nil {
		var ret FileAdministrate
		return ret
	}
	return *o.Administrate
}

// GetAdministrateOk returns a tuple with the Administrate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilePermission) GetAdministrateOk() (*FileAdministrate, bool) {
	if o == nil || o.Administrate == nil {
		return nil, false
	}
	return o.Administrate, true
}

// HasAdministrate returns a boolean if a field has been set.
func (o *FilePermission) HasAdministrate() bool {
	if o != nil && o.Administrate != nil {
		return true
	}

	return false
}

// SetAdministrate gets a reference to the given FileAdministrate and assigns it to the Administrate field.
func (o *FilePermission) SetAdministrate(v FileAdministrate) {
	o.Administrate = &v
}

func (o FilePermission) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Create != nil {
		toSerialize["create"] = o.Create
	}
	if o.Delete != nil {
		toSerialize["delete"] = o.Delete
	}
	if o.Execute != nil {
		toSerialize["execute"] = o.Execute
	}
	if o.Get != nil {
		toSerialize["get"] = o.Get
	}
	if o.Update != nil {
		toSerialize["update"] = o.Update
	}
	if o.Administrate != nil {
		toSerialize["administrate"] = o.Administrate
	}
	return json.Marshal(toSerialize)
}

type NullableFilePermission struct {
	value *FilePermission
	isSet bool
}

func (v NullableFilePermission) Get() *FilePermission {
	return v.value
}

func (v *NullableFilePermission) Set(val *FilePermission) {
	v.value = val
	v.isSet = true
}

func (v NullableFilePermission) IsSet() bool {
	return v.isSet
}

func (v *NullableFilePermission) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFilePermission(val *FilePermission) *NullableFilePermission {
	return &NullableFilePermission{value: val, isSet: true}
}

func (v NullableFilePermission) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFilePermission) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


