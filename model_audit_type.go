/*
FastReport Cloud

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gofrcloud

import (
	"encoding/json"
	"fmt"
)

// AuditType the model 'AuditType'
type AuditType string

// List of AuditType
const (
	TASK_CREATED_EXPORT_TEMPLATE AuditType = "Task_Created_ExportTemplate"
	TASK_CREATED_EXPORT_REPORT AuditType = "Task_Created_ExportReport"
	TASK_CREATED_PREPARE_TEMPLATE AuditType = "Task_Created_PrepareTemplate"
	TASK_CREATED_FETCH AuditType = "Task_Created_Fetch"
	TASK_CREATED_EMAIL AuditType = "Task_Created_Email"
	TASK_CREATED_WEBHOOK AuditType = "Task_Created_Webhook"
	TASK_DELETED_EXPORT_TEMPLATE AuditType = "Task_Deleted_ExportTemplate"
	TASK_DELETED_EXPORT_REPORT AuditType = "Task_Deleted_ExportReport"
	TASK_DELETED_PREPARE_TEMPLATE AuditType = "Task_Deleted_PrepareTemplate"
	TASK_DELETED_FETCH AuditType = "Task_Deleted_Fetch"
	TASK_DELETED_EMAIL AuditType = "Task_Deleted_Email"
	TASK_DELETED_WEBHOOK AuditType = "Task_Deleted_Webhook"
	TASK_UPDATED_EXPORT_TEMPLATE AuditType = "Task_Updated_ExportTemplate"
	TASK_UPDATED_EXPORT_REPORT AuditType = "Task_Updated_ExportReport"
	TASK_UPDATED_PREPARE_TEMPLATE AuditType = "Task_Updated_PrepareTemplate"
	TASK_UPDATED_FETCH AuditType = "Task_Updated_Fetch"
	TASK_UPDATED_EMAIL AuditType = "Task_Updated_Email"
	TASK_UPDATED_WEBHOOK AuditType = "Task_Updated_Webhook"
	TASK_IN_QUEUE_EXPORT_TEMPLATE AuditType = "Task_InQueue_ExportTemplate"
	TASK_IN_QUEUE_EXPORT_REPORT AuditType = "Task_InQueue_ExportReport"
	TASK_IN_QUEUE_PREPARE_TEMPLATE AuditType = "Task_InQueue_PrepareTemplate"
	TASK_IN_QUEUE_FETCH AuditType = "Task_InQueue_Fetch"
	TASK_IN_QUEUE_EMAIL AuditType = "Task_InQueue_Email"
	TASK_IN_QUEUE_WEBHOOK AuditType = "Task_InQueue_Webhook"
	TASK_IN_PROCESS_EXPORT_TEMPLATE AuditType = "Task_InProcess_ExportTemplate"
	TASK_IN_PROCESS_EXPORT_REPORT AuditType = "Task_InProcess_ExportReport"
	TASK_IN_PROCESS_PREPARE_TEMPLATE AuditType = "Task_InProcess_PrepareTemplate"
	TASK_IN_PROCESS_FETCH AuditType = "Task_InProcess_Fetch"
	TASK_IN_PROCESS_EMAIL AuditType = "Task_InProcess_Email"
	TASK_IN_PROCESS_WEBHOOK AuditType = "Task_InProcess_Webhook"
	TASK_SUCCESS_EXPORT_TEMPLATE AuditType = "Task_Success_ExportTemplate"
	TASK_SUCCESS_EXPORT_REPORT AuditType = "Task_Success_ExportReport"
	TASK_SUCCESS_PREPARE_TEMPLATE AuditType = "Task_Success_PrepareTemplate"
	TASK_SUCCESS_FETCH AuditType = "Task_Success_Fetch"
	TASK_SUCCESS_EMAIL AuditType = "Task_Success_Email"
	TASK_SUCCESS_WEBHOOK AuditType = "Task_Success_Webhook"
	TASK_FAILED_EXPORT_TEMPLATE AuditType = "Task_Failed_ExportTemplate"
	TASK_FAILED_EXPORT_REPORT AuditType = "Task_Failed_ExportReport"
	TASK_FAILED_PREPARE_TEMPLATE AuditType = "Task_Failed_PrepareTemplate"
	TASK_FAILED_FETCH AuditType = "Task_Failed_Fetch"
	TASK_FAILED_EMAIL AuditType = "Task_Failed_Email"
	TASK_FAILED_WEBHOOK AuditType = "Task_Failed_Webhook"
	TASK_CREATED_THUMBNAIL_REPORT AuditType = "Task_Created_ThumbnailReport"
	TASK_DELETED_THUMBNAIL_REPORT AuditType = "Task_Deleted_ThumbnailReport"
	TASK_UPDATED_THUMBNAIL_REPORT AuditType = "Task_Updated_ThumbnailReport"
	TASK_IN_QUEUE_THUMBNAIL_REPORT AuditType = "Task_InQueue_ThumbnailReport"
	TASK_IN_PROCESS_THUMBNAIL_REPORT AuditType = "Task_InProcess_ThumbnailReport"
	TASK_SUCCESS_THUMBNAIL_REPORT AuditType = "Task_Success_ThumbnailReport"
	TASK_FAIL_THUMBNAIL_REPORT AuditType = "Task_Fail_ThumbnailReport"
	TASK_CREATED_THUMBNAIL_TEMPLATE AuditType = "Task_Created_ThumbnailTemplate"
	TASK_DELETED_THUMBNAIL_TEMPLATE AuditType = "Task_Deleted_ThumbnailTemplate"
	TASK_UPDATED_THUMBNAIL_TEMPLATE AuditType = "Task_Updated_ThumbnailTemplate"
	TASK_IN_QUEUE_THUMBNAIL_TEMPLATE AuditType = "Task_InQueue_ThumbnailTemplate"
	TASK_IN_PROCESS_THUMBNAIL_TEMPLATE AuditType = "Task_InProcess_ThumbnailTemplate"
	TASK_SUCCESS_THUMBNAIL_TEMPLATE AuditType = "Task_Success_ThumbnailTemplate"
	TASK_FAIL_THUMBNAIL_TEMPLATE AuditType = "Task_Fail_ThumbnailTemplate"
	SUBSCRIPTION_RENEWED AuditType = "Subscription_Renewed"
	SUBSCRIPTION_CREATED AuditType = "Subscription_Created"
	FILE_RENAMED AuditType = "File_Renamed"
	FILE_CONTENT_UPDATED AuditType = "File_Content_Updated"
	FILE_DELETED AuditType = "File_Deleted"
	FILE_MOVED AuditType = "File_Moved"
	FILE_COPIED AuditType = "File_Copied"
	FILE_TAGS_UPDATED AuditType = "File_Tags_Updated"
	FILE_PERMISSIONS_UPDATED AuditType = "File_Permissions_Updated"
	FILE_RESTORED AuditType = "File_Restored"
	FILE_MOVED_TO_BIN AuditType = "File_MovedToBin"
	FILE_UPDATED AuditType = "File_Updated"
	TASK_CREATED_FTP_UPLOAD AuditType = "Task_Created_FTPUpload"
	TASK_DELETED_FTP_UPLOAD AuditType = "Task_Deleted_FTPUpload"
	TASK_UPDATED_FTP_UPLOAD AuditType = "Task_Updated_FTPUpload"
	TASK_IN_QUEUE_FTP_UPLOAD AuditType = "Task_InQueue_FTPUpload"
	TASK_IN_PROCESS_FTP_UPLOAD AuditType = "Task_InProcess_FTPUpload"
	TASK_SUCCESS_FTP_UPLOAD AuditType = "Task_Success_FTPUpload"
	TASK_FAIL_FTP_UPLOAD AuditType = "Task_Fail_FTPUpload"
	FILE_CREATED AuditType = "File_Created"
)

// All allowed values of AuditType enum
var AllowedAuditTypeEnumValues = []AuditType{
	"Task_Created_ExportTemplate",
	"Task_Created_ExportReport",
	"Task_Created_PrepareTemplate",
	"Task_Created_Fetch",
	"Task_Created_Email",
	"Task_Created_Webhook",
	"Task_Deleted_ExportTemplate",
	"Task_Deleted_ExportReport",
	"Task_Deleted_PrepareTemplate",
	"Task_Deleted_Fetch",
	"Task_Deleted_Email",
	"Task_Deleted_Webhook",
	"Task_Updated_ExportTemplate",
	"Task_Updated_ExportReport",
	"Task_Updated_PrepareTemplate",
	"Task_Updated_Fetch",
	"Task_Updated_Email",
	"Task_Updated_Webhook",
	"Task_InQueue_ExportTemplate",
	"Task_InQueue_ExportReport",
	"Task_InQueue_PrepareTemplate",
	"Task_InQueue_Fetch",
	"Task_InQueue_Email",
	"Task_InQueue_Webhook",
	"Task_InProcess_ExportTemplate",
	"Task_InProcess_ExportReport",
	"Task_InProcess_PrepareTemplate",
	"Task_InProcess_Fetch",
	"Task_InProcess_Email",
	"Task_InProcess_Webhook",
	"Task_Success_ExportTemplate",
	"Task_Success_ExportReport",
	"Task_Success_PrepareTemplate",
	"Task_Success_Fetch",
	"Task_Success_Email",
	"Task_Success_Webhook",
	"Task_Failed_ExportTemplate",
	"Task_Failed_ExportReport",
	"Task_Failed_PrepareTemplate",
	"Task_Failed_Fetch",
	"Task_Failed_Email",
	"Task_Failed_Webhook",
	"Task_Created_ThumbnailReport",
	"Task_Deleted_ThumbnailReport",
	"Task_Updated_ThumbnailReport",
	"Task_InQueue_ThumbnailReport",
	"Task_InProcess_ThumbnailReport",
	"Task_Success_ThumbnailReport",
	"Task_Fail_ThumbnailReport",
	"Task_Created_ThumbnailTemplate",
	"Task_Deleted_ThumbnailTemplate",
	"Task_Updated_ThumbnailTemplate",
	"Task_InQueue_ThumbnailTemplate",
	"Task_InProcess_ThumbnailTemplate",
	"Task_Success_ThumbnailTemplate",
	"Task_Fail_ThumbnailTemplate",
	"Subscription_Renewed",
	"Subscription_Created",
	"File_Renamed",
	"File_Content_Updated",
	"File_Deleted",
	"File_Moved",
	"File_Copied",
	"File_Tags_Updated",
	"File_Permissions_Updated",
	"File_Restored",
	"File_MovedToBin",
	"File_Updated",
	"Task_Created_FTPUpload",
	"Task_Deleted_FTPUpload",
	"Task_Updated_FTPUpload",
	"Task_InQueue_FTPUpload",
	"Task_InProcess_FTPUpload",
	"Task_Success_FTPUpload",
	"Task_Fail_FTPUpload",
	"File_Created",
}

func (v *AuditType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := AuditType(value)
	for _, existing := range AllowedAuditTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid AuditType", value)
}

// NewAuditTypeFromValue returns a pointer to a valid AuditType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewAuditTypeFromValue(v string) (*AuditType, error) {
	ev := AuditType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for AuditType: valid values are %v", v, AllowedAuditTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v AuditType) IsValid() bool {
	for _, existing := range AllowedAuditTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to AuditType value
func (v AuditType) Ptr() *AuditType {
	return &v
}

type NullableAuditType struct {
	value *AuditType
	isSet bool
}

func (v NullableAuditType) Get() *AuditType {
	return v.value
}

func (v *NullableAuditType) Set(val *AuditType) {
	v.value = val
	v.isSet = true
}

func (v NullableAuditType) IsSet() bool {
	return v.isSet
}

func (v *NullableAuditType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuditType(val *AuditType) *NullableAuditType {
	return &NullableAuditType{value: val, isSet: true}
}

func (v NullableAuditType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuditType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

