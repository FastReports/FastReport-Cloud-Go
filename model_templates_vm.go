/*
FastReport Cloud

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gofrcloud

import (
	"encoding/json"
)

// checks if the TemplatesVM type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TemplatesVM{}

// TemplatesVM struct for TemplatesVM
type TemplatesVM struct {
}

// NewTemplatesVM instantiates a new TemplatesVM object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTemplatesVM() *TemplatesVM {
	this := TemplatesVM{}
	return &this
}

// NewTemplatesVMWithDefaults instantiates a new TemplatesVM object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTemplatesVMWithDefaults() *TemplatesVM {
	this := TemplatesVM{}
	return &this
}

func (o TemplatesVM) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TemplatesVM) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	return toSerialize, nil
}

type NullableTemplatesVM struct {
	value *TemplatesVM
	isSet bool
}

func (v NullableTemplatesVM) Get() *TemplatesVM {
	return v.value
}

func (v *NullableTemplatesVM) Set(val *TemplatesVM) {
	v.value = val
	v.isSet = true
}

func (v NullableTemplatesVM) IsSet() bool {
	return v.isSet
}

func (v *NullableTemplatesVM) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTemplatesVM(val *TemplatesVM) *NullableTemplatesVM {
	return &NullableTemplatesVM{value: val, isSet: true}
}

func (v NullableTemplatesVM) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTemplatesVM) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


