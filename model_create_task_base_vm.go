/*
FastReport Cloud

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gofrcloud

import (
	"encoding/json"
	"time"
)

// checks if the CreateTaskBaseVM type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateTaskBaseVM{}

// CreateTaskBaseVM struct for CreateTaskBaseVM
type CreateTaskBaseVM struct {
	CronExpression NullableString `json:"cronExpression,omitempty"`
	DelayedRunTime NullableTime `json:"delayedRunTime,omitempty"`
	Name NullableString `json:"name,omitempty"`
	SubscriptionId NullableString `json:"subscriptionId,omitempty"`
	T string `json:"$t"`
}

// NewCreateTaskBaseVM instantiates a new CreateTaskBaseVM object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateTaskBaseVM(t string) *CreateTaskBaseVM {
	this := CreateTaskBaseVM{}
	this.T = t
	return &this
}

// NewCreateTaskBaseVMWithDefaults instantiates a new CreateTaskBaseVM object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateTaskBaseVMWithDefaults() *CreateTaskBaseVM {
	this := CreateTaskBaseVM{}
	return &this
}

// GetCronExpression returns the CronExpression field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateTaskBaseVM) GetCronExpression() string {
	if o == nil || IsNil(o.CronExpression.Get()) {
		var ret string
		return ret
	}
	return *o.CronExpression.Get()
}

// GetCronExpressionOk returns a tuple with the CronExpression field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateTaskBaseVM) GetCronExpressionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CronExpression.Get(), o.CronExpression.IsSet()
}

// HasCronExpression returns a boolean if a field has been set.
func (o *CreateTaskBaseVM) HasCronExpression() bool {
	if o != nil && o.CronExpression.IsSet() {
		return true
	}

	return false
}

// SetCronExpression gets a reference to the given NullableString and assigns it to the CronExpression field.
func (o *CreateTaskBaseVM) SetCronExpression(v string) {
	o.CronExpression.Set(&v)
}
// SetCronExpressionNil sets the value for CronExpression to be an explicit nil
func (o *CreateTaskBaseVM) SetCronExpressionNil() {
	o.CronExpression.Set(nil)
}

// UnsetCronExpression ensures that no value is present for CronExpression, not even an explicit nil
func (o *CreateTaskBaseVM) UnsetCronExpression() {
	o.CronExpression.Unset()
}

// GetDelayedRunTime returns the DelayedRunTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateTaskBaseVM) GetDelayedRunTime() time.Time {
	if o == nil || IsNil(o.DelayedRunTime.Get()) {
		var ret time.Time
		return ret
	}
	return *o.DelayedRunTime.Get()
}

// GetDelayedRunTimeOk returns a tuple with the DelayedRunTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateTaskBaseVM) GetDelayedRunTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.DelayedRunTime.Get(), o.DelayedRunTime.IsSet()
}

// HasDelayedRunTime returns a boolean if a field has been set.
func (o *CreateTaskBaseVM) HasDelayedRunTime() bool {
	if o != nil && o.DelayedRunTime.IsSet() {
		return true
	}

	return false
}

// SetDelayedRunTime gets a reference to the given NullableTime and assigns it to the DelayedRunTime field.
func (o *CreateTaskBaseVM) SetDelayedRunTime(v time.Time) {
	o.DelayedRunTime.Set(&v)
}
// SetDelayedRunTimeNil sets the value for DelayedRunTime to be an explicit nil
func (o *CreateTaskBaseVM) SetDelayedRunTimeNil() {
	o.DelayedRunTime.Set(nil)
}

// UnsetDelayedRunTime ensures that no value is present for DelayedRunTime, not even an explicit nil
func (o *CreateTaskBaseVM) UnsetDelayedRunTime() {
	o.DelayedRunTime.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateTaskBaseVM) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateTaskBaseVM) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *CreateTaskBaseVM) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *CreateTaskBaseVM) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *CreateTaskBaseVM) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *CreateTaskBaseVM) UnsetName() {
	o.Name.Unset()
}

// GetSubscriptionId returns the SubscriptionId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateTaskBaseVM) GetSubscriptionId() string {
	if o == nil || IsNil(o.SubscriptionId.Get()) {
		var ret string
		return ret
	}
	return *o.SubscriptionId.Get()
}

// GetSubscriptionIdOk returns a tuple with the SubscriptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateTaskBaseVM) GetSubscriptionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SubscriptionId.Get(), o.SubscriptionId.IsSet()
}

// HasSubscriptionId returns a boolean if a field has been set.
func (o *CreateTaskBaseVM) HasSubscriptionId() bool {
	if o != nil && o.SubscriptionId.IsSet() {
		return true
	}

	return false
}

// SetSubscriptionId gets a reference to the given NullableString and assigns it to the SubscriptionId field.
func (o *CreateTaskBaseVM) SetSubscriptionId(v string) {
	o.SubscriptionId.Set(&v)
}
// SetSubscriptionIdNil sets the value for SubscriptionId to be an explicit nil
func (o *CreateTaskBaseVM) SetSubscriptionIdNil() {
	o.SubscriptionId.Set(nil)
}

// UnsetSubscriptionId ensures that no value is present for SubscriptionId, not even an explicit nil
func (o *CreateTaskBaseVM) UnsetSubscriptionId() {
	o.SubscriptionId.Unset()
}

// GetT returns the T field value
func (o *CreateTaskBaseVM) GetT() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.T
}

// GetTOk returns a tuple with the T field value
// and a boolean to check if the value has been set.
func (o *CreateTaskBaseVM) GetTOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.T, true
}

// SetT sets field value
func (o *CreateTaskBaseVM) SetT(v string) {
	o.T = v
}

func (o CreateTaskBaseVM) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateTaskBaseVM) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.CronExpression.IsSet() {
		toSerialize["cronExpression"] = o.CronExpression.Get()
	}
	if o.DelayedRunTime.IsSet() {
		toSerialize["delayedRunTime"] = o.DelayedRunTime.Get()
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.SubscriptionId.IsSet() {
		toSerialize["subscriptionId"] = o.SubscriptionId.Get()
	}
	toSerialize["$t"] = o.T
	return toSerialize, nil
}

type NullableCreateTaskBaseVM struct {
	value *CreateTaskBaseVM
	isSet bool
}

func (v NullableCreateTaskBaseVM) Get() *CreateTaskBaseVM {
	return v.value
}

func (v *NullableCreateTaskBaseVM) Set(val *CreateTaskBaseVM) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateTaskBaseVM) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateTaskBaseVM) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateTaskBaseVM(val *CreateTaskBaseVM) *NullableCreateTaskBaseVM {
	return &NullableCreateTaskBaseVM{value: val, isSet: true}
}

func (v NullableCreateTaskBaseVM) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateTaskBaseVM) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


