/*
 * FastReport Cloud
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gofrcloud

import (
	"encoding/json"
)

// CreateExportReportTaskVM struct for CreateExportReportTaskVM
type CreateExportReportTaskVM struct {
	ExportParameters map[string]string `json:"exportParameters,omitempty"`
	Format *ExportFormat `json:"format,omitempty"`
	PagesCount NullableInt32 `json:"pagesCount,omitempty"`
	Name NullableString `json:"name,omitempty"`
	SubscriptionId NullableString `json:"subscriptionId,omitempty"`
	Type *TaskType `json:"type,omitempty"`
}

// NewCreateExportReportTaskVM instantiates a new CreateExportReportTaskVM object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateExportReportTaskVM() *CreateExportReportTaskVM {
	this := CreateExportReportTaskVM{}
	return &this
}

// NewCreateExportReportTaskVMWithDefaults instantiates a new CreateExportReportTaskVM object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateExportReportTaskVMWithDefaults() *CreateExportReportTaskVM {
	this := CreateExportReportTaskVM{}
	return &this
}

// GetExportParameters returns the ExportParameters field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateExportReportTaskVM) GetExportParameters() map[string]string {
	if o == nil  {
		var ret map[string]string
		return ret
	}
	return o.ExportParameters
}

// GetExportParametersOk returns a tuple with the ExportParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateExportReportTaskVM) GetExportParametersOk() (*map[string]string, bool) {
	if o == nil || o.ExportParameters == nil {
		return nil, false
	}
	return &o.ExportParameters, true
}

// HasExportParameters returns a boolean if a field has been set.
func (o *CreateExportReportTaskVM) HasExportParameters() bool {
	if o != nil && o.ExportParameters != nil {
		return true
	}

	return false
}

// SetExportParameters gets a reference to the given map[string]string and assigns it to the ExportParameters field.
func (o *CreateExportReportTaskVM) SetExportParameters(v map[string]string) {
	o.ExportParameters = v
}

// GetFormat returns the Format field value if set, zero value otherwise.
func (o *CreateExportReportTaskVM) GetFormat() ExportFormat {
	if o == nil || o.Format == nil {
		var ret ExportFormat
		return ret
	}
	return *o.Format
}

// GetFormatOk returns a tuple with the Format field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateExportReportTaskVM) GetFormatOk() (*ExportFormat, bool) {
	if o == nil || o.Format == nil {
		return nil, false
	}
	return o.Format, true
}

// HasFormat returns a boolean if a field has been set.
func (o *CreateExportReportTaskVM) HasFormat() bool {
	if o != nil && o.Format != nil {
		return true
	}

	return false
}

// SetFormat gets a reference to the given ExportFormat and assigns it to the Format field.
func (o *CreateExportReportTaskVM) SetFormat(v ExportFormat) {
	o.Format = &v
}

// GetPagesCount returns the PagesCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateExportReportTaskVM) GetPagesCount() int32 {
	if o == nil || o.PagesCount.Get() == nil {
		var ret int32
		return ret
	}
	return *o.PagesCount.Get()
}

// GetPagesCountOk returns a tuple with the PagesCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateExportReportTaskVM) GetPagesCountOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return o.PagesCount.Get(), o.PagesCount.IsSet()
}

// HasPagesCount returns a boolean if a field has been set.
func (o *CreateExportReportTaskVM) HasPagesCount() bool {
	if o != nil && o.PagesCount.IsSet() {
		return true
	}

	return false
}

// SetPagesCount gets a reference to the given NullableInt32 and assigns it to the PagesCount field.
func (o *CreateExportReportTaskVM) SetPagesCount(v int32) {
	o.PagesCount.Set(&v)
}
// SetPagesCountNil sets the value for PagesCount to be an explicit nil
func (o *CreateExportReportTaskVM) SetPagesCountNil() {
	o.PagesCount.Set(nil)
}

// UnsetPagesCount ensures that no value is present for PagesCount, not even an explicit nil
func (o *CreateExportReportTaskVM) UnsetPagesCount() {
	o.PagesCount.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateExportReportTaskVM) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateExportReportTaskVM) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *CreateExportReportTaskVM) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *CreateExportReportTaskVM) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *CreateExportReportTaskVM) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *CreateExportReportTaskVM) UnsetName() {
	o.Name.Unset()
}

// GetSubscriptionId returns the SubscriptionId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateExportReportTaskVM) GetSubscriptionId() string {
	if o == nil || o.SubscriptionId.Get() == nil {
		var ret string
		return ret
	}
	return *o.SubscriptionId.Get()
}

// GetSubscriptionIdOk returns a tuple with the SubscriptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateExportReportTaskVM) GetSubscriptionIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SubscriptionId.Get(), o.SubscriptionId.IsSet()
}

// HasSubscriptionId returns a boolean if a field has been set.
func (o *CreateExportReportTaskVM) HasSubscriptionId() bool {
	if o != nil && o.SubscriptionId.IsSet() {
		return true
	}

	return false
}

// SetSubscriptionId gets a reference to the given NullableString and assigns it to the SubscriptionId field.
func (o *CreateExportReportTaskVM) SetSubscriptionId(v string) {
	o.SubscriptionId.Set(&v)
}
// SetSubscriptionIdNil sets the value for SubscriptionId to be an explicit nil
func (o *CreateExportReportTaskVM) SetSubscriptionIdNil() {
	o.SubscriptionId.Set(nil)
}

// UnsetSubscriptionId ensures that no value is present for SubscriptionId, not even an explicit nil
func (o *CreateExportReportTaskVM) UnsetSubscriptionId() {
	o.SubscriptionId.Unset()
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *CreateExportReportTaskVM) GetType() TaskType {
	if o == nil || o.Type == nil {
		var ret TaskType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateExportReportTaskVM) GetTypeOk() (*TaskType, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *CreateExportReportTaskVM) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given TaskType and assigns it to the Type field.
func (o *CreateExportReportTaskVM) SetType(v TaskType) {
	o.Type = &v
}

func (o CreateExportReportTaskVM) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ExportParameters != nil {
		toSerialize["exportParameters"] = o.ExportParameters
	}
	if o.Format != nil {
		toSerialize["format"] = o.Format
	}
	if o.PagesCount.IsSet() {
		toSerialize["pagesCount"] = o.PagesCount.Get()
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.SubscriptionId.IsSet() {
		toSerialize["subscriptionId"] = o.SubscriptionId.Get()
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableCreateExportReportTaskVM struct {
	value *CreateExportReportTaskVM
	isSet bool
}

func (v NullableCreateExportReportTaskVM) Get() *CreateExportReportTaskVM {
	return v.value
}

func (v *NullableCreateExportReportTaskVM) Set(val *CreateExportReportTaskVM) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateExportReportTaskVM) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateExportReportTaskVM) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateExportReportTaskVM(val *CreateExportReportTaskVM) *NullableCreateExportReportTaskVM {
	return &NullableCreateExportReportTaskVM{value: val, isSet: true}
}

func (v NullableCreateExportReportTaskVM) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateExportReportTaskVM) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


