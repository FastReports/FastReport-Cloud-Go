/*
FastReport Cloud

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gofrcloud

import (
	"encoding/json"
)

// checks if the SubscriptionPermission type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SubscriptionPermission{}

// SubscriptionPermission struct for SubscriptionPermission
type SubscriptionPermission struct {
}

// NewSubscriptionPermission instantiates a new SubscriptionPermission object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubscriptionPermission() *SubscriptionPermission {
	this := SubscriptionPermission{}
	return &this
}

// NewSubscriptionPermissionWithDefaults instantiates a new SubscriptionPermission object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubscriptionPermissionWithDefaults() *SubscriptionPermission {
	this := SubscriptionPermission{}
	return &this
}

func (o SubscriptionPermission) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SubscriptionPermission) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	return toSerialize, nil
}

type NullableSubscriptionPermission struct {
	value *SubscriptionPermission
	isSet bool
}

func (v NullableSubscriptionPermission) Get() *SubscriptionPermission {
	return v.value
}

func (v *NullableSubscriptionPermission) Set(val *SubscriptionPermission) {
	v.value = val
	v.isSet = true
}

func (v NullableSubscriptionPermission) IsSet() bool {
	return v.isSet
}

func (v *NullableSubscriptionPermission) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubscriptionPermission(val *SubscriptionPermission) *NullableSubscriptionPermission {
	return &NullableSubscriptionPermission{value: val, isSet: true}
}

func (v NullableSubscriptionPermission) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubscriptionPermission) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


