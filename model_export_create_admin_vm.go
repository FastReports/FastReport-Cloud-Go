/*
FastReport Cloud

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gofrcloud

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ExportCreateAdminVM type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExportCreateAdminVM{}

// ExportCreateAdminVM struct for ExportCreateAdminVM
type ExportCreateAdminVM struct {
	ExportCreateVM
	OwnerId string `json:"ownerId"`
	ParentId string `json:"parentId"`
	T string `json:"$t"`
}

type _ExportCreateAdminVM ExportCreateAdminVM

// NewExportCreateAdminVM instantiates a new ExportCreateAdminVM object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExportCreateAdminVM(ownerId string, parentId string, t string) *ExportCreateAdminVM {
	this := ExportCreateAdminVM{}
	this.T = t
	return &this
}

// NewExportCreateAdminVMWithDefaults instantiates a new ExportCreateAdminVM object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExportCreateAdminVMWithDefaults() *ExportCreateAdminVM {
	this := ExportCreateAdminVM{}
	return &this
}

// GetOwnerId returns the OwnerId field value
func (o *ExportCreateAdminVM) GetOwnerId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OwnerId
}

// GetOwnerIdOk returns a tuple with the OwnerId field value
// and a boolean to check if the value has been set.
func (o *ExportCreateAdminVM) GetOwnerIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OwnerId, true
}

// SetOwnerId sets field value
func (o *ExportCreateAdminVM) SetOwnerId(v string) {
	o.OwnerId = v
}

// GetParentId returns the ParentId field value
func (o *ExportCreateAdminVM) GetParentId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ParentId
}

// GetParentIdOk returns a tuple with the ParentId field value
// and a boolean to check if the value has been set.
func (o *ExportCreateAdminVM) GetParentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ParentId, true
}

// SetParentId sets field value
func (o *ExportCreateAdminVM) SetParentId(v string) {
	o.ParentId = v
}

// GetT returns the T field value
func (o *ExportCreateAdminVM) GetT() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.T
}

// GetTOk returns a tuple with the T field value
// and a boolean to check if the value has been set.
func (o *ExportCreateAdminVM) GetTOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.T, true
}

// SetT sets field value
func (o *ExportCreateAdminVM) SetT(v string) {
	o.T = v
}

func (o ExportCreateAdminVM) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExportCreateAdminVM) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	serializedExportCreateVM, errExportCreateVM := json.Marshal(o.ExportCreateVM)
	if errExportCreateVM != nil {
		return map[string]interface{}{}, errExportCreateVM
	}
	errExportCreateVM = json.Unmarshal([]byte(serializedExportCreateVM), &toSerialize)
	if errExportCreateVM != nil {
		return map[string]interface{}{}, errExportCreateVM
	}
	toSerialize["ownerId"] = o.OwnerId
	toSerialize["parentId"] = o.ParentId
	toSerialize["$t"] = o.T
	return toSerialize, nil
}

func (o *ExportCreateAdminVM) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"ownerId",
		"parentId",
		"$t",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varExportCreateAdminVM := _ExportCreateAdminVM{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varExportCreateAdminVM)

	if err != nil {
		return err
	}

	*o = ExportCreateAdminVM(varExportCreateAdminVM)

	return err
}

type NullableExportCreateAdminVM struct {
	value *ExportCreateAdminVM
	isSet bool
}

func (v NullableExportCreateAdminVM) Get() *ExportCreateAdminVM {
	return v.value
}

func (v *NullableExportCreateAdminVM) Set(val *ExportCreateAdminVM) {
	v.value = val
	v.isSet = true
}

func (v NullableExportCreateAdminVM) IsSet() bool {
	return v.isSet
}

func (v *NullableExportCreateAdminVM) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExportCreateAdminVM(val *ExportCreateAdminVM) *NullableExportCreateAdminVM {
	return &NullableExportCreateAdminVM{value: val, isSet: true}
}

func (v NullableExportCreateAdminVM) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExportCreateAdminVM) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


