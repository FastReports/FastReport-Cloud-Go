/*
FastReport Cloud

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gofrcloud

import (
	"encoding/json"
)

// checks if the AcceptAgreementsVM type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AcceptAgreementsVM{}

// AcceptAgreementsVM struct for AcceptAgreementsVM
type AcceptAgreementsVM struct {
	SlaAccepted *bool `json:"slaAccepted,omitempty"`
}

// NewAcceptAgreementsVM instantiates a new AcceptAgreementsVM object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAcceptAgreementsVM() *AcceptAgreementsVM {
	this := AcceptAgreementsVM{}
	return &this
}

// NewAcceptAgreementsVMWithDefaults instantiates a new AcceptAgreementsVM object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAcceptAgreementsVMWithDefaults() *AcceptAgreementsVM {
	this := AcceptAgreementsVM{}
	return &this
}

// GetSlaAccepted returns the SlaAccepted field value if set, zero value otherwise.
func (o *AcceptAgreementsVM) GetSlaAccepted() bool {
	if o == nil || IsNil(o.SlaAccepted) {
		var ret bool
		return ret
	}
	return *o.SlaAccepted
}

// GetSlaAcceptedOk returns a tuple with the SlaAccepted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AcceptAgreementsVM) GetSlaAcceptedOk() (*bool, bool) {
	if o == nil || IsNil(o.SlaAccepted) {
		return nil, false
	}
	return o.SlaAccepted, true
}

// HasSlaAccepted returns a boolean if a field has been set.
func (o *AcceptAgreementsVM) HasSlaAccepted() bool {
	if o != nil && !IsNil(o.SlaAccepted) {
		return true
	}

	return false
}

// SetSlaAccepted gets a reference to the given bool and assigns it to the SlaAccepted field.
func (o *AcceptAgreementsVM) SetSlaAccepted(v bool) {
	o.SlaAccepted = &v
}

func (o AcceptAgreementsVM) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AcceptAgreementsVM) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SlaAccepted) {
		toSerialize["slaAccepted"] = o.SlaAccepted
	}
	return toSerialize, nil
}

type NullableAcceptAgreementsVM struct {
	value *AcceptAgreementsVM
	isSet bool
}

func (v NullableAcceptAgreementsVM) Get() *AcceptAgreementsVM {
	return v.value
}

func (v *NullableAcceptAgreementsVM) Set(val *AcceptAgreementsVM) {
	v.value = val
	v.isSet = true
}

func (v NullableAcceptAgreementsVM) IsSet() bool {
	return v.isSet
}

func (v *NullableAcceptAgreementsVM) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAcceptAgreementsVM(val *AcceptAgreementsVM) *NullableAcceptAgreementsVM {
	return &NullableAcceptAgreementsVM{value: val, isSet: true}
}

func (v NullableAcceptAgreementsVM) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAcceptAgreementsVM) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


