/*
FastReport Cloud

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gofrcloud

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the DefaultPermissionsVM type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DefaultPermissionsVM{}

// DefaultPermissionsVM struct for DefaultPermissionsVM
type DefaultPermissionsVM struct {
	CloudBaseVM
	FilePermissions *FilePermissionsCRUDVM `json:"filePermissions,omitempty"`
	DataSourcePermissions *DataSourcePermissionsCRUDVM `json:"dataSourcePermissions,omitempty"`
	GroupPermissions *GroupPermissionsCRUDVM `json:"groupPermissions,omitempty"`
	TaskPermissions *TaskPermissionsCRUDVM `json:"taskPermissions,omitempty"`
	T string `json:"$t"`
}

type _DefaultPermissionsVM DefaultPermissionsVM

// NewDefaultPermissionsVM instantiates a new DefaultPermissionsVM object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDefaultPermissionsVM(t string) *DefaultPermissionsVM {
	this := DefaultPermissionsVM{}
	this.T = t
	return &this
}

// NewDefaultPermissionsVMWithDefaults instantiates a new DefaultPermissionsVM object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDefaultPermissionsVMWithDefaults() *DefaultPermissionsVM {
	this := DefaultPermissionsVM{}
	return &this
}

// GetFilePermissions returns the FilePermissions field value if set, zero value otherwise.
func (o *DefaultPermissionsVM) GetFilePermissions() FilePermissionsCRUDVM {
	if o == nil || IsNil(o.FilePermissions) {
		var ret FilePermissionsCRUDVM
		return ret
	}
	return *o.FilePermissions
}

// GetFilePermissionsOk returns a tuple with the FilePermissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DefaultPermissionsVM) GetFilePermissionsOk() (*FilePermissionsCRUDVM, bool) {
	if o == nil || IsNil(o.FilePermissions) {
		return nil, false
	}
	return o.FilePermissions, true
}

// HasFilePermissions returns a boolean if a field has been set.
func (o *DefaultPermissionsVM) HasFilePermissions() bool {
	if o != nil && !IsNil(o.FilePermissions) {
		return true
	}

	return false
}

// SetFilePermissions gets a reference to the given FilePermissionsCRUDVM and assigns it to the FilePermissions field.
func (o *DefaultPermissionsVM) SetFilePermissions(v FilePermissionsCRUDVM) {
	o.FilePermissions = &v
}

// GetDataSourcePermissions returns the DataSourcePermissions field value if set, zero value otherwise.
func (o *DefaultPermissionsVM) GetDataSourcePermissions() DataSourcePermissionsCRUDVM {
	if o == nil || IsNil(o.DataSourcePermissions) {
		var ret DataSourcePermissionsCRUDVM
		return ret
	}
	return *o.DataSourcePermissions
}

// GetDataSourcePermissionsOk returns a tuple with the DataSourcePermissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DefaultPermissionsVM) GetDataSourcePermissionsOk() (*DataSourcePermissionsCRUDVM, bool) {
	if o == nil || IsNil(o.DataSourcePermissions) {
		return nil, false
	}
	return o.DataSourcePermissions, true
}

// HasDataSourcePermissions returns a boolean if a field has been set.
func (o *DefaultPermissionsVM) HasDataSourcePermissions() bool {
	if o != nil && !IsNil(o.DataSourcePermissions) {
		return true
	}

	return false
}

// SetDataSourcePermissions gets a reference to the given DataSourcePermissionsCRUDVM and assigns it to the DataSourcePermissions field.
func (o *DefaultPermissionsVM) SetDataSourcePermissions(v DataSourcePermissionsCRUDVM) {
	o.DataSourcePermissions = &v
}

// GetGroupPermissions returns the GroupPermissions field value if set, zero value otherwise.
func (o *DefaultPermissionsVM) GetGroupPermissions() GroupPermissionsCRUDVM {
	if o == nil || IsNil(o.GroupPermissions) {
		var ret GroupPermissionsCRUDVM
		return ret
	}
	return *o.GroupPermissions
}

// GetGroupPermissionsOk returns a tuple with the GroupPermissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DefaultPermissionsVM) GetGroupPermissionsOk() (*GroupPermissionsCRUDVM, bool) {
	if o == nil || IsNil(o.GroupPermissions) {
		return nil, false
	}
	return o.GroupPermissions, true
}

// HasGroupPermissions returns a boolean if a field has been set.
func (o *DefaultPermissionsVM) HasGroupPermissions() bool {
	if o != nil && !IsNil(o.GroupPermissions) {
		return true
	}

	return false
}

// SetGroupPermissions gets a reference to the given GroupPermissionsCRUDVM and assigns it to the GroupPermissions field.
func (o *DefaultPermissionsVM) SetGroupPermissions(v GroupPermissionsCRUDVM) {
	o.GroupPermissions = &v
}

// GetTaskPermissions returns the TaskPermissions field value if set, zero value otherwise.
func (o *DefaultPermissionsVM) GetTaskPermissions() TaskPermissionsCRUDVM {
	if o == nil || IsNil(o.TaskPermissions) {
		var ret TaskPermissionsCRUDVM
		return ret
	}
	return *o.TaskPermissions
}

// GetTaskPermissionsOk returns a tuple with the TaskPermissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DefaultPermissionsVM) GetTaskPermissionsOk() (*TaskPermissionsCRUDVM, bool) {
	if o == nil || IsNil(o.TaskPermissions) {
		return nil, false
	}
	return o.TaskPermissions, true
}

// HasTaskPermissions returns a boolean if a field has been set.
func (o *DefaultPermissionsVM) HasTaskPermissions() bool {
	if o != nil && !IsNil(o.TaskPermissions) {
		return true
	}

	return false
}

// SetTaskPermissions gets a reference to the given TaskPermissionsCRUDVM and assigns it to the TaskPermissions field.
func (o *DefaultPermissionsVM) SetTaskPermissions(v TaskPermissionsCRUDVM) {
	o.TaskPermissions = &v
}

// GetT returns the T field value
func (o *DefaultPermissionsVM) GetT() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.T
}

// GetTOk returns a tuple with the T field value
// and a boolean to check if the value has been set.
func (o *DefaultPermissionsVM) GetTOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.T, true
}

// SetT sets field value
func (o *DefaultPermissionsVM) SetT(v string) {
	o.T = v
}

func (o DefaultPermissionsVM) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DefaultPermissionsVM) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	serializedCloudBaseVM, errCloudBaseVM := json.Marshal(o.CloudBaseVM)
	if errCloudBaseVM != nil {
		return map[string]interface{}{}, errCloudBaseVM
	}
	errCloudBaseVM = json.Unmarshal([]byte(serializedCloudBaseVM), &toSerialize)
	if errCloudBaseVM != nil {
		return map[string]interface{}{}, errCloudBaseVM
	}
	if !IsNil(o.FilePermissions) {
		toSerialize["filePermissions"] = o.FilePermissions
	}
	if !IsNil(o.DataSourcePermissions) {
		toSerialize["dataSourcePermissions"] = o.DataSourcePermissions
	}
	if !IsNil(o.GroupPermissions) {
		toSerialize["groupPermissions"] = o.GroupPermissions
	}
	if !IsNil(o.TaskPermissions) {
		toSerialize["taskPermissions"] = o.TaskPermissions
	}
	toSerialize["$t"] = o.T
	return toSerialize, nil
}

func (o *DefaultPermissionsVM) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"$t",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDefaultPermissionsVM := _DefaultPermissionsVM{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDefaultPermissionsVM)

	if err != nil {
		return err
	}

	*o = DefaultPermissionsVM(varDefaultPermissionsVM)

	return err
}

type NullableDefaultPermissionsVM struct {
	value *DefaultPermissionsVM
	isSet bool
}

func (v NullableDefaultPermissionsVM) Get() *DefaultPermissionsVM {
	return v.value
}

func (v *NullableDefaultPermissionsVM) Set(val *DefaultPermissionsVM) {
	v.value = val
	v.isSet = true
}

func (v NullableDefaultPermissionsVM) IsSet() bool {
	return v.isSet
}

func (v *NullableDefaultPermissionsVM) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDefaultPermissionsVM(val *DefaultPermissionsVM) *NullableDefaultPermissionsVM {
	return &NullableDefaultPermissionsVM{value: val, isSet: true}
}

func (v NullableDefaultPermissionsVM) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDefaultPermissionsVM) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


