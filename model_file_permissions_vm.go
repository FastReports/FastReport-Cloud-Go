/*
FastReport Cloud

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gofrcloud

import (
	"encoding/json"
)

// checks if the FilePermissionsVM type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FilePermissionsVM{}

// FilePermissionsVM struct for FilePermissionsVM
type FilePermissionsVM struct {
	Permissions *FilePermissions `json:"permissions,omitempty"`
}

// NewFilePermissionsVM instantiates a new FilePermissionsVM object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFilePermissionsVM() *FilePermissionsVM {
	this := FilePermissionsVM{}
	return &this
}

// NewFilePermissionsVMWithDefaults instantiates a new FilePermissionsVM object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFilePermissionsVMWithDefaults() *FilePermissionsVM {
	this := FilePermissionsVM{}
	return &this
}

// GetPermissions returns the Permissions field value if set, zero value otherwise.
func (o *FilePermissionsVM) GetPermissions() FilePermissions {
	if o == nil || IsNil(o.Permissions) {
		var ret FilePermissions
		return ret
	}
	return *o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FilePermissionsVM) GetPermissionsOk() (*FilePermissions, bool) {
	if o == nil || IsNil(o.Permissions) {
		return nil, false
	}
	return o.Permissions, true
}

// HasPermissions returns a boolean if a field has been set.
func (o *FilePermissionsVM) HasPermissions() bool {
	if o != nil && !IsNil(o.Permissions) {
		return true
	}

	return false
}

// SetPermissions gets a reference to the given FilePermissions and assigns it to the Permissions field.
func (o *FilePermissionsVM) SetPermissions(v FilePermissions) {
	o.Permissions = &v
}

func (o FilePermissionsVM) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FilePermissionsVM) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Permissions) {
		toSerialize["permissions"] = o.Permissions
	}
	return toSerialize, nil
}

type NullableFilePermissionsVM struct {
	value *FilePermissionsVM
	isSet bool
}

func (v NullableFilePermissionsVM) Get() *FilePermissionsVM {
	return v.value
}

func (v *NullableFilePermissionsVM) Set(val *FilePermissionsVM) {
	v.value = val
	v.isSet = true
}

func (v NullableFilePermissionsVM) IsSet() bool {
	return v.isSet
}

func (v *NullableFilePermissionsVM) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFilePermissionsVM(val *FilePermissionsVM) *NullableFilePermissionsVM {
	return &NullableFilePermissionsVM{value: val, isSet: true}
}

func (v NullableFilePermissionsVM) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFilePermissionsVM) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


