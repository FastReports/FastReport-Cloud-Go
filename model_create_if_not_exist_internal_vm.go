/*
FastReport Cloud

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gofrcloud

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateIfNotExistInternalVM type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateIfNotExistInternalVM{}

// CreateIfNotExistInternalVM struct for CreateIfNotExistInternalVM
type CreateIfNotExistInternalVM struct {
	CloudBaseVM
	Id NullableString `json:"id,omitempty"`
	IsAdmin *bool `json:"isAdmin,omitempty"`
	Provider NullableString `json:"provider,omitempty"`
	RefereshToken NullableString `json:"refereshToken,omitempty"`
	AccessToken NullableString `json:"accessToken,omitempty"`
	T string `json:"$t"`
}

type _CreateIfNotExistInternalVM CreateIfNotExistInternalVM

// NewCreateIfNotExistInternalVM instantiates a new CreateIfNotExistInternalVM object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateIfNotExistInternalVM(t string) *CreateIfNotExistInternalVM {
	this := CreateIfNotExistInternalVM{}
	this.T = t
	return &this
}

// NewCreateIfNotExistInternalVMWithDefaults instantiates a new CreateIfNotExistInternalVM object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateIfNotExistInternalVMWithDefaults() *CreateIfNotExistInternalVM {
	this := CreateIfNotExistInternalVM{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateIfNotExistInternalVM) GetId() string {
	if o == nil || IsNil(o.Id.Get()) {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateIfNotExistInternalVM) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *CreateIfNotExistInternalVM) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *CreateIfNotExistInternalVM) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *CreateIfNotExistInternalVM) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *CreateIfNotExistInternalVM) UnsetId() {
	o.Id.Unset()
}

// GetIsAdmin returns the IsAdmin field value if set, zero value otherwise.
func (o *CreateIfNotExistInternalVM) GetIsAdmin() bool {
	if o == nil || IsNil(o.IsAdmin) {
		var ret bool
		return ret
	}
	return *o.IsAdmin
}

// GetIsAdminOk returns a tuple with the IsAdmin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateIfNotExistInternalVM) GetIsAdminOk() (*bool, bool) {
	if o == nil || IsNil(o.IsAdmin) {
		return nil, false
	}
	return o.IsAdmin, true
}

// HasIsAdmin returns a boolean if a field has been set.
func (o *CreateIfNotExistInternalVM) HasIsAdmin() bool {
	if o != nil && !IsNil(o.IsAdmin) {
		return true
	}

	return false
}

// SetIsAdmin gets a reference to the given bool and assigns it to the IsAdmin field.
func (o *CreateIfNotExistInternalVM) SetIsAdmin(v bool) {
	o.IsAdmin = &v
}

// GetProvider returns the Provider field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateIfNotExistInternalVM) GetProvider() string {
	if o == nil || IsNil(o.Provider.Get()) {
		var ret string
		return ret
	}
	return *o.Provider.Get()
}

// GetProviderOk returns a tuple with the Provider field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateIfNotExistInternalVM) GetProviderOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Provider.Get(), o.Provider.IsSet()
}

// HasProvider returns a boolean if a field has been set.
func (o *CreateIfNotExistInternalVM) HasProvider() bool {
	if o != nil && o.Provider.IsSet() {
		return true
	}

	return false
}

// SetProvider gets a reference to the given NullableString and assigns it to the Provider field.
func (o *CreateIfNotExistInternalVM) SetProvider(v string) {
	o.Provider.Set(&v)
}
// SetProviderNil sets the value for Provider to be an explicit nil
func (o *CreateIfNotExistInternalVM) SetProviderNil() {
	o.Provider.Set(nil)
}

// UnsetProvider ensures that no value is present for Provider, not even an explicit nil
func (o *CreateIfNotExistInternalVM) UnsetProvider() {
	o.Provider.Unset()
}

// GetRefereshToken returns the RefereshToken field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateIfNotExistInternalVM) GetRefereshToken() string {
	if o == nil || IsNil(o.RefereshToken.Get()) {
		var ret string
		return ret
	}
	return *o.RefereshToken.Get()
}

// GetRefereshTokenOk returns a tuple with the RefereshToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateIfNotExistInternalVM) GetRefereshTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RefereshToken.Get(), o.RefereshToken.IsSet()
}

// HasRefereshToken returns a boolean if a field has been set.
func (o *CreateIfNotExistInternalVM) HasRefereshToken() bool {
	if o != nil && o.RefereshToken.IsSet() {
		return true
	}

	return false
}

// SetRefereshToken gets a reference to the given NullableString and assigns it to the RefereshToken field.
func (o *CreateIfNotExistInternalVM) SetRefereshToken(v string) {
	o.RefereshToken.Set(&v)
}
// SetRefereshTokenNil sets the value for RefereshToken to be an explicit nil
func (o *CreateIfNotExistInternalVM) SetRefereshTokenNil() {
	o.RefereshToken.Set(nil)
}

// UnsetRefereshToken ensures that no value is present for RefereshToken, not even an explicit nil
func (o *CreateIfNotExistInternalVM) UnsetRefereshToken() {
	o.RefereshToken.Unset()
}

// GetAccessToken returns the AccessToken field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateIfNotExistInternalVM) GetAccessToken() string {
	if o == nil || IsNil(o.AccessToken.Get()) {
		var ret string
		return ret
	}
	return *o.AccessToken.Get()
}

// GetAccessTokenOk returns a tuple with the AccessToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateIfNotExistInternalVM) GetAccessTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AccessToken.Get(), o.AccessToken.IsSet()
}

// HasAccessToken returns a boolean if a field has been set.
func (o *CreateIfNotExistInternalVM) HasAccessToken() bool {
	if o != nil && o.AccessToken.IsSet() {
		return true
	}

	return false
}

// SetAccessToken gets a reference to the given NullableString and assigns it to the AccessToken field.
func (o *CreateIfNotExistInternalVM) SetAccessToken(v string) {
	o.AccessToken.Set(&v)
}
// SetAccessTokenNil sets the value for AccessToken to be an explicit nil
func (o *CreateIfNotExistInternalVM) SetAccessTokenNil() {
	o.AccessToken.Set(nil)
}

// UnsetAccessToken ensures that no value is present for AccessToken, not even an explicit nil
func (o *CreateIfNotExistInternalVM) UnsetAccessToken() {
	o.AccessToken.Unset()
}

// GetT returns the T field value
func (o *CreateIfNotExistInternalVM) GetT() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.T
}

// GetTOk returns a tuple with the T field value
// and a boolean to check if the value has been set.
func (o *CreateIfNotExistInternalVM) GetTOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.T, true
}

// SetT sets field value
func (o *CreateIfNotExistInternalVM) SetT(v string) {
	o.T = v
}

func (o CreateIfNotExistInternalVM) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateIfNotExistInternalVM) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	serializedCloudBaseVM, errCloudBaseVM := json.Marshal(o.CloudBaseVM)
	if errCloudBaseVM != nil {
		return map[string]interface{}{}, errCloudBaseVM
	}
	errCloudBaseVM = json.Unmarshal([]byte(serializedCloudBaseVM), &toSerialize)
	if errCloudBaseVM != nil {
		return map[string]interface{}{}, errCloudBaseVM
	}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if !IsNil(o.IsAdmin) {
		toSerialize["isAdmin"] = o.IsAdmin
	}
	if o.Provider.IsSet() {
		toSerialize["provider"] = o.Provider.Get()
	}
	if o.RefereshToken.IsSet() {
		toSerialize["refereshToken"] = o.RefereshToken.Get()
	}
	if o.AccessToken.IsSet() {
		toSerialize["accessToken"] = o.AccessToken.Get()
	}
	toSerialize["$t"] = o.T
	return toSerialize, nil
}

func (o *CreateIfNotExistInternalVM) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"$t",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateIfNotExistInternalVM := _CreateIfNotExistInternalVM{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateIfNotExistInternalVM)

	if err != nil {
		return err
	}

	*o = CreateIfNotExistInternalVM(varCreateIfNotExistInternalVM)

	return err
}

type NullableCreateIfNotExistInternalVM struct {
	value *CreateIfNotExistInternalVM
	isSet bool
}

func (v NullableCreateIfNotExistInternalVM) Get() *CreateIfNotExistInternalVM {
	return v.value
}

func (v *NullableCreateIfNotExistInternalVM) Set(val *CreateIfNotExistInternalVM) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateIfNotExistInternalVM) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateIfNotExistInternalVM) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateIfNotExistInternalVM(val *CreateIfNotExistInternalVM) *NullableCreateIfNotExistInternalVM {
	return &NullableCreateIfNotExistInternalVM{value: val, isSet: true}
}

func (v NullableCreateIfNotExistInternalVM) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateIfNotExistInternalVM) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


