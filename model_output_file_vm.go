/*
 * FastReport Cloud
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gofrcloud

import (
	"encoding/json"
)

// OutputFileVM struct for OutputFileVM
type OutputFileVM struct {
	FileName NullableString `json:"fileName,omitempty"`
	FolderId NullableString `json:"folderId,omitempty"`
	Type *FileKind `json:"type,omitempty"`
}

// NewOutputFileVM instantiates a new OutputFileVM object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOutputFileVM() *OutputFileVM {
	this := OutputFileVM{}
	return &this
}

// NewOutputFileVMWithDefaults instantiates a new OutputFileVM object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOutputFileVMWithDefaults() *OutputFileVM {
	this := OutputFileVM{}
	return &this
}

// GetFileName returns the FileName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OutputFileVM) GetFileName() string {
	if o == nil || o.FileName.Get() == nil {
		var ret string
		return ret
	}
	return *o.FileName.Get()
}

// GetFileNameOk returns a tuple with the FileName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OutputFileVM) GetFileNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.FileName.Get(), o.FileName.IsSet()
}

// HasFileName returns a boolean if a field has been set.
func (o *OutputFileVM) HasFileName() bool {
	if o != nil && o.FileName.IsSet() {
		return true
	}

	return false
}

// SetFileName gets a reference to the given NullableString and assigns it to the FileName field.
func (o *OutputFileVM) SetFileName(v string) {
	o.FileName.Set(&v)
}
// SetFileNameNil sets the value for FileName to be an explicit nil
func (o *OutputFileVM) SetFileNameNil() {
	o.FileName.Set(nil)
}

// UnsetFileName ensures that no value is present for FileName, not even an explicit nil
func (o *OutputFileVM) UnsetFileName() {
	o.FileName.Unset()
}

// GetFolderId returns the FolderId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OutputFileVM) GetFolderId() string {
	if o == nil || o.FolderId.Get() == nil {
		var ret string
		return ret
	}
	return *o.FolderId.Get()
}

// GetFolderIdOk returns a tuple with the FolderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OutputFileVM) GetFolderIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.FolderId.Get(), o.FolderId.IsSet()
}

// HasFolderId returns a boolean if a field has been set.
func (o *OutputFileVM) HasFolderId() bool {
	if o != nil && o.FolderId.IsSet() {
		return true
	}

	return false
}

// SetFolderId gets a reference to the given NullableString and assigns it to the FolderId field.
func (o *OutputFileVM) SetFolderId(v string) {
	o.FolderId.Set(&v)
}
// SetFolderIdNil sets the value for FolderId to be an explicit nil
func (o *OutputFileVM) SetFolderIdNil() {
	o.FolderId.Set(nil)
}

// UnsetFolderId ensures that no value is present for FolderId, not even an explicit nil
func (o *OutputFileVM) UnsetFolderId() {
	o.FolderId.Unset()
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *OutputFileVM) GetType() FileKind {
	if o == nil || o.Type == nil {
		var ret FileKind
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OutputFileVM) GetTypeOk() (*FileKind, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *OutputFileVM) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given FileKind and assigns it to the Type field.
func (o *OutputFileVM) SetType(v FileKind) {
	o.Type = &v
}

func (o OutputFileVM) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.FileName.IsSet() {
		toSerialize["fileName"] = o.FileName.Get()
	}
	if o.FolderId.IsSet() {
		toSerialize["folderId"] = o.FolderId.Get()
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableOutputFileVM struct {
	value *OutputFileVM
	isSet bool
}

func (v NullableOutputFileVM) Get() *OutputFileVM {
	return v.value
}

func (v *NullableOutputFileVM) Set(val *OutputFileVM) {
	v.value = val
	v.isSet = true
}

func (v NullableOutputFileVM) IsSet() bool {
	return v.isSet
}

func (v *NullableOutputFileVM) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOutputFileVM(val *OutputFileVM) *NullableOutputFileVM {
	return &NullableOutputFileVM{value: val, isSet: true}
}

func (v NullableOutputFileVM) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOutputFileVM) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


