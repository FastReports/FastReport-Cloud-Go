/*
 * FastReport Cloud
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package FastReport.Cloud.SDK

import (
	"encoding/json"
)

// FileIconVM struct for FileIconVM
type FileIconVM struct {
	Icon *string `json:"icon,omitempty"`
}

// NewFileIconVM instantiates a new FileIconVM object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFileIconVM() *FileIconVM {
	this := FileIconVM{}
	return &this
}

// NewFileIconVMWithDefaults instantiates a new FileIconVM object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFileIconVMWithDefaults() *FileIconVM {
	this := FileIconVM{}
	return &this
}

// GetIcon returns the Icon field value if set, zero value otherwise.
func (o *FileIconVM) GetIcon() string {
	if o == nil || o.Icon == nil {
		var ret string
		return ret
	}
	return *o.Icon
}

// GetIconOk returns a tuple with the Icon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileIconVM) GetIconOk() (*string, bool) {
	if o == nil || o.Icon == nil {
		return nil, false
	}
	return o.Icon, true
}

// HasIcon returns a boolean if a field has been set.
func (o *FileIconVM) HasIcon() bool {
	if o != nil && o.Icon != nil {
		return true
	}

	return false
}

// SetIcon gets a reference to the given string and assigns it to the Icon field.
func (o *FileIconVM) SetIcon(v string) {
	o.Icon = &v
}

func (o FileIconVM) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Icon != nil {
		toSerialize["icon"] = o.Icon
	}
	return json.Marshal(toSerialize)
}

type NullableFileIconVM struct {
	value *FileIconVM
	isSet bool
}

func (v NullableFileIconVM) Get() *FileIconVM {
	return v.value
}

func (v *NullableFileIconVM) Set(val *FileIconVM) {
	v.value = val
	v.isSet = true
}

func (v NullableFileIconVM) IsSet() bool {
	return v.isSet
}

func (v *NullableFileIconVM) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFileIconVM(val *FileIconVM) *NullableFileIconVM {
	return &NullableFileIconVM{value: val, isSet: true}
}

func (v NullableFileIconVM) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFileIconVM) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


