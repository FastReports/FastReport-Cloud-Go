/*
FastReport Cloud

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gofrcloud

import (
	"encoding/json"
)

// checks if the FileSharingKeysVM type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FileSharingKeysVM{}

// FileSharingKeysVM struct for FileSharingKeysVM
type FileSharingKeysVM struct {
	Keys []FileShareVM `json:"keys,omitempty"`
}

// NewFileSharingKeysVM instantiates a new FileSharingKeysVM object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFileSharingKeysVM() *FileSharingKeysVM {
	this := FileSharingKeysVM{}
	return &this
}

// NewFileSharingKeysVMWithDefaults instantiates a new FileSharingKeysVM object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFileSharingKeysVMWithDefaults() *FileSharingKeysVM {
	this := FileSharingKeysVM{}
	return &this
}

// GetKeys returns the Keys field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FileSharingKeysVM) GetKeys() []FileShareVM {
	if o == nil {
		var ret []FileShareVM
		return ret
	}
	return o.Keys
}

// GetKeysOk returns a tuple with the Keys field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FileSharingKeysVM) GetKeysOk() ([]FileShareVM, bool) {
	if o == nil || IsNil(o.Keys) {
		return nil, false
	}
	return o.Keys, true
}

// HasKeys returns a boolean if a field has been set.
func (o *FileSharingKeysVM) HasKeys() bool {
	if o != nil && IsNil(o.Keys) {
		return true
	}

	return false
}

// SetKeys gets a reference to the given []FileShareVM and assigns it to the Keys field.
func (o *FileSharingKeysVM) SetKeys(v []FileShareVM) {
	o.Keys = v
}

func (o FileSharingKeysVM) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FileSharingKeysVM) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Keys != nil {
		toSerialize["keys"] = o.Keys
	}
	return toSerialize, nil
}

type NullableFileSharingKeysVM struct {
	value *FileSharingKeysVM
	isSet bool
}

func (v NullableFileSharingKeysVM) Get() *FileSharingKeysVM {
	return v.value
}

func (v *NullableFileSharingKeysVM) Set(val *FileSharingKeysVM) {
	v.value = val
	v.isSet = true
}

func (v NullableFileSharingKeysVM) IsSet() bool {
	return v.isSet
}

func (v *NullableFileSharingKeysVM) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFileSharingKeysVM(val *FileSharingKeysVM) *NullableFileSharingKeysVM {
	return &NullableFileSharingKeysVM{value: val, isSet: true}
}

func (v NullableFileSharingKeysVM) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFileSharingKeysVM) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


