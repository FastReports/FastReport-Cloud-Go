/*
 * FastReport Cloud
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gofrcloud

import (
	"encoding/json"
)

// CreateSubscriptionPeriodVM struct for CreateSubscriptionPeriodVM
type CreateSubscriptionPeriodVM struct {
	PlanId *string `json:"planId,omitempty"`
}

// NewCreateSubscriptionPeriodVM instantiates a new CreateSubscriptionPeriodVM object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateSubscriptionPeriodVM() *CreateSubscriptionPeriodVM {
	this := CreateSubscriptionPeriodVM{}
	return &this
}

// NewCreateSubscriptionPeriodVMWithDefaults instantiates a new CreateSubscriptionPeriodVM object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateSubscriptionPeriodVMWithDefaults() *CreateSubscriptionPeriodVM {
	this := CreateSubscriptionPeriodVM{}
	return &this
}

// GetPlanId returns the PlanId field value if set, zero value otherwise.
func (o *CreateSubscriptionPeriodVM) GetPlanId() string {
	if o == nil || o.PlanId == nil {
		var ret string
		return ret
	}
	return *o.PlanId
}

// GetPlanIdOk returns a tuple with the PlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSubscriptionPeriodVM) GetPlanIdOk() (*string, bool) {
	if o == nil || o.PlanId == nil {
		return nil, false
	}
	return o.PlanId, true
}

// HasPlanId returns a boolean if a field has been set.
func (o *CreateSubscriptionPeriodVM) HasPlanId() bool {
	if o != nil && o.PlanId != nil {
		return true
	}

	return false
}

// SetPlanId gets a reference to the given string and assigns it to the PlanId field.
func (o *CreateSubscriptionPeriodVM) SetPlanId(v string) {
	o.PlanId = &v
}

func (o CreateSubscriptionPeriodVM) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PlanId != nil {
		toSerialize["planId"] = o.PlanId
	}
	return json.Marshal(toSerialize)
}

type NullableCreateSubscriptionPeriodVM struct {
	value *CreateSubscriptionPeriodVM
	isSet bool
}

func (v NullableCreateSubscriptionPeriodVM) Get() *CreateSubscriptionPeriodVM {
	return v.value
}

func (v *NullableCreateSubscriptionPeriodVM) Set(val *CreateSubscriptionPeriodVM) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateSubscriptionPeriodVM) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateSubscriptionPeriodVM) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateSubscriptionPeriodVM(val *CreateSubscriptionPeriodVM) *NullableCreateSubscriptionPeriodVM {
	return &NullableCreateSubscriptionPeriodVM{value: val, isSet: true}
}

func (v NullableCreateSubscriptionPeriodVM) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateSubscriptionPeriodVM) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


