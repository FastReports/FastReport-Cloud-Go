/*
 * FastReport Cloud
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gofrcloud

import (
	"encoding/json"
)

// RunTransformTaskBaseVM struct for RunTransformTaskBaseVM
type RunTransformTaskBaseVM struct {
	Locale NullableString `json:"locale,omitempty"`
	InputFile *RunInputFileVM `json:"inputFile,omitempty"`
	OutputFile *OutputFileVM `json:"outputFile,omitempty"`
	Transports []RunTransportTaskBaseVM `json:"transports,omitempty"`
	SubscriptionId NullableString `json:"subscriptionId,omitempty"`
	Type *TaskType `json:"type,omitempty"`
}

// NewRunTransformTaskBaseVM instantiates a new RunTransformTaskBaseVM object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRunTransformTaskBaseVM() *RunTransformTaskBaseVM {
	this := RunTransformTaskBaseVM{}
	return &this
}

// NewRunTransformTaskBaseVMWithDefaults instantiates a new RunTransformTaskBaseVM object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRunTransformTaskBaseVMWithDefaults() *RunTransformTaskBaseVM {
	this := RunTransformTaskBaseVM{}
	return &this
}

// GetLocale returns the Locale field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RunTransformTaskBaseVM) GetLocale() string {
	if o == nil || o.Locale.Get() == nil {
		var ret string
		return ret
	}
	return *o.Locale.Get()
}

// GetLocaleOk returns a tuple with the Locale field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RunTransformTaskBaseVM) GetLocaleOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.Locale.Get(), o.Locale.IsSet()
}

// HasLocale returns a boolean if a field has been set.
func (o *RunTransformTaskBaseVM) HasLocale() bool {
	if o != nil && o.Locale.IsSet() {
		return true
	}

	return false
}

// SetLocale gets a reference to the given NullableString and assigns it to the Locale field.
func (o *RunTransformTaskBaseVM) SetLocale(v string) {
	o.Locale.Set(&v)
}
// SetLocaleNil sets the value for Locale to be an explicit nil
func (o *RunTransformTaskBaseVM) SetLocaleNil() {
	o.Locale.Set(nil)
}

// UnsetLocale ensures that no value is present for Locale, not even an explicit nil
func (o *RunTransformTaskBaseVM) UnsetLocale() {
	o.Locale.Unset()
}

// GetInputFile returns the InputFile field value if set, zero value otherwise.
func (o *RunTransformTaskBaseVM) GetInputFile() RunInputFileVM {
	if o == nil || o.InputFile == nil {
		var ret RunInputFileVM
		return ret
	}
	return *o.InputFile
}

// GetInputFileOk returns a tuple with the InputFile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RunTransformTaskBaseVM) GetInputFileOk() (*RunInputFileVM, bool) {
	if o == nil || o.InputFile == nil {
		return nil, false
	}
	return o.InputFile, true
}

// HasInputFile returns a boolean if a field has been set.
func (o *RunTransformTaskBaseVM) HasInputFile() bool {
	if o != nil && o.InputFile != nil {
		return true
	}

	return false
}

// SetInputFile gets a reference to the given RunInputFileVM and assigns it to the InputFile field.
func (o *RunTransformTaskBaseVM) SetInputFile(v RunInputFileVM) {
	o.InputFile = &v
}

// GetOutputFile returns the OutputFile field value if set, zero value otherwise.
func (o *RunTransformTaskBaseVM) GetOutputFile() OutputFileVM {
	if o == nil || o.OutputFile == nil {
		var ret OutputFileVM
		return ret
	}
	return *o.OutputFile
}

// GetOutputFileOk returns a tuple with the OutputFile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RunTransformTaskBaseVM) GetOutputFileOk() (*OutputFileVM, bool) {
	if o == nil || o.OutputFile == nil {
		return nil, false
	}
	return o.OutputFile, true
}

// HasOutputFile returns a boolean if a field has been set.
func (o *RunTransformTaskBaseVM) HasOutputFile() bool {
	if o != nil && o.OutputFile != nil {
		return true
	}

	return false
}

// SetOutputFile gets a reference to the given OutputFileVM and assigns it to the OutputFile field.
func (o *RunTransformTaskBaseVM) SetOutputFile(v OutputFileVM) {
	o.OutputFile = &v
}

// GetTransports returns the Transports field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RunTransformTaskBaseVM) GetTransports() []RunTransportTaskBaseVM {
	if o == nil  {
		var ret []RunTransportTaskBaseVM
		return ret
	}
	return o.Transports
}

// GetTransportsOk returns a tuple with the Transports field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RunTransformTaskBaseVM) GetTransportsOk() (*[]RunTransportTaskBaseVM, bool) {
	if o == nil || o.Transports == nil {
		return nil, false
	}
	return &o.Transports, true
}

// HasTransports returns a boolean if a field has been set.
func (o *RunTransformTaskBaseVM) HasTransports() bool {
	if o != nil && o.Transports != nil {
		return true
	}

	return false
}

// SetTransports gets a reference to the given []RunTransportTaskBaseVM and assigns it to the Transports field.
func (o *RunTransformTaskBaseVM) SetTransports(v []RunTransportTaskBaseVM) {
	o.Transports = v
}

// GetSubscriptionId returns the SubscriptionId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RunTransformTaskBaseVM) GetSubscriptionId() string {
	if o == nil || o.SubscriptionId.Get() == nil {
		var ret string
		return ret
	}
	return *o.SubscriptionId.Get()
}

// GetSubscriptionIdOk returns a tuple with the SubscriptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RunTransformTaskBaseVM) GetSubscriptionIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return o.SubscriptionId.Get(), o.SubscriptionId.IsSet()
}

// HasSubscriptionId returns a boolean if a field has been set.
func (o *RunTransformTaskBaseVM) HasSubscriptionId() bool {
	if o != nil && o.SubscriptionId.IsSet() {
		return true
	}

	return false
}

// SetSubscriptionId gets a reference to the given NullableString and assigns it to the SubscriptionId field.
func (o *RunTransformTaskBaseVM) SetSubscriptionId(v string) {
	o.SubscriptionId.Set(&v)
}
// SetSubscriptionIdNil sets the value for SubscriptionId to be an explicit nil
func (o *RunTransformTaskBaseVM) SetSubscriptionIdNil() {
	o.SubscriptionId.Set(nil)
}

// UnsetSubscriptionId ensures that no value is present for SubscriptionId, not even an explicit nil
func (o *RunTransformTaskBaseVM) UnsetSubscriptionId() {
	o.SubscriptionId.Unset()
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *RunTransformTaskBaseVM) GetType() TaskType {
	if o == nil || o.Type == nil {
		var ret TaskType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RunTransformTaskBaseVM) GetTypeOk() (*TaskType, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *RunTransformTaskBaseVM) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given TaskType and assigns it to the Type field.
func (o *RunTransformTaskBaseVM) SetType(v TaskType) {
	o.Type = &v
}

func (o RunTransformTaskBaseVM) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Locale.IsSet() {
		toSerialize["locale"] = o.Locale.Get()
	}
	if o.InputFile != nil {
		toSerialize["inputFile"] = o.InputFile
	}
	if o.OutputFile != nil {
		toSerialize["outputFile"] = o.OutputFile
	}
	if o.Transports != nil {
		toSerialize["transports"] = o.Transports
	}
	if o.SubscriptionId.IsSet() {
		toSerialize["subscriptionId"] = o.SubscriptionId.Get()
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableRunTransformTaskBaseVM struct {
	value *RunTransformTaskBaseVM
	isSet bool
}

func (v NullableRunTransformTaskBaseVM) Get() *RunTransformTaskBaseVM {
	return v.value
}

func (v *NullableRunTransformTaskBaseVM) Set(val *RunTransformTaskBaseVM) {
	v.value = val
	v.isSet = true
}

func (v NullableRunTransformTaskBaseVM) IsSet() bool {
	return v.isSet
}

func (v *NullableRunTransformTaskBaseVM) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRunTransformTaskBaseVM(val *RunTransformTaskBaseVM) *NullableRunTransformTaskBaseVM {
	return &NullableRunTransformTaskBaseVM{value: val, isSet: true}
}

func (v NullableRunTransformTaskBaseVM) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRunTransformTaskBaseVM) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


