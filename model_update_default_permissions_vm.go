/*
FastReport Cloud

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gofrcloud

import (
	"encoding/json"
)

// checks if the UpdateDefaultPermissionsVM type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateDefaultPermissionsVM{}

// UpdateDefaultPermissionsVM struct for UpdateDefaultPermissionsVM
type UpdateDefaultPermissionsVM struct {
	FilePermissions *UpdateFilePermissionsVM `json:"filePermissions,omitempty"`
	GroupPermissions *UpdateGroupPermissionsVM `json:"groupPermissions,omitempty"`
	DataSourcePermissions *UpdateDataSourcePermissionsVM `json:"dataSourcePermissions,omitempty"`
	TaskPermissions *UpdateTaskPermissionsVM `json:"taskPermissions,omitempty"`
}

// NewUpdateDefaultPermissionsVM instantiates a new UpdateDefaultPermissionsVM object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateDefaultPermissionsVM() *UpdateDefaultPermissionsVM {
	this := UpdateDefaultPermissionsVM{}
	return &this
}

// NewUpdateDefaultPermissionsVMWithDefaults instantiates a new UpdateDefaultPermissionsVM object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateDefaultPermissionsVMWithDefaults() *UpdateDefaultPermissionsVM {
	this := UpdateDefaultPermissionsVM{}
	return &this
}

// GetFilePermissions returns the FilePermissions field value if set, zero value otherwise.
func (o *UpdateDefaultPermissionsVM) GetFilePermissions() UpdateFilePermissionsVM {
	if o == nil || IsNil(o.FilePermissions) {
		var ret UpdateFilePermissionsVM
		return ret
	}
	return *o.FilePermissions
}

// GetFilePermissionsOk returns a tuple with the FilePermissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateDefaultPermissionsVM) GetFilePermissionsOk() (*UpdateFilePermissionsVM, bool) {
	if o == nil || IsNil(o.FilePermissions) {
		return nil, false
	}
	return o.FilePermissions, true
}

// HasFilePermissions returns a boolean if a field has been set.
func (o *UpdateDefaultPermissionsVM) HasFilePermissions() bool {
	if o != nil && !IsNil(o.FilePermissions) {
		return true
	}

	return false
}

// SetFilePermissions gets a reference to the given UpdateFilePermissionsVM and assigns it to the FilePermissions field.
func (o *UpdateDefaultPermissionsVM) SetFilePermissions(v UpdateFilePermissionsVM) {
	o.FilePermissions = &v
}

// GetGroupPermissions returns the GroupPermissions field value if set, zero value otherwise.
func (o *UpdateDefaultPermissionsVM) GetGroupPermissions() UpdateGroupPermissionsVM {
	if o == nil || IsNil(o.GroupPermissions) {
		var ret UpdateGroupPermissionsVM
		return ret
	}
	return *o.GroupPermissions
}

// GetGroupPermissionsOk returns a tuple with the GroupPermissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateDefaultPermissionsVM) GetGroupPermissionsOk() (*UpdateGroupPermissionsVM, bool) {
	if o == nil || IsNil(o.GroupPermissions) {
		return nil, false
	}
	return o.GroupPermissions, true
}

// HasGroupPermissions returns a boolean if a field has been set.
func (o *UpdateDefaultPermissionsVM) HasGroupPermissions() bool {
	if o != nil && !IsNil(o.GroupPermissions) {
		return true
	}

	return false
}

// SetGroupPermissions gets a reference to the given UpdateGroupPermissionsVM and assigns it to the GroupPermissions field.
func (o *UpdateDefaultPermissionsVM) SetGroupPermissions(v UpdateGroupPermissionsVM) {
	o.GroupPermissions = &v
}

// GetDataSourcePermissions returns the DataSourcePermissions field value if set, zero value otherwise.
func (o *UpdateDefaultPermissionsVM) GetDataSourcePermissions() UpdateDataSourcePermissionsVM {
	if o == nil || IsNil(o.DataSourcePermissions) {
		var ret UpdateDataSourcePermissionsVM
		return ret
	}
	return *o.DataSourcePermissions
}

// GetDataSourcePermissionsOk returns a tuple with the DataSourcePermissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateDefaultPermissionsVM) GetDataSourcePermissionsOk() (*UpdateDataSourcePermissionsVM, bool) {
	if o == nil || IsNil(o.DataSourcePermissions) {
		return nil, false
	}
	return o.DataSourcePermissions, true
}

// HasDataSourcePermissions returns a boolean if a field has been set.
func (o *UpdateDefaultPermissionsVM) HasDataSourcePermissions() bool {
	if o != nil && !IsNil(o.DataSourcePermissions) {
		return true
	}

	return false
}

// SetDataSourcePermissions gets a reference to the given UpdateDataSourcePermissionsVM and assigns it to the DataSourcePermissions field.
func (o *UpdateDefaultPermissionsVM) SetDataSourcePermissions(v UpdateDataSourcePermissionsVM) {
	o.DataSourcePermissions = &v
}

// GetTaskPermissions returns the TaskPermissions field value if set, zero value otherwise.
func (o *UpdateDefaultPermissionsVM) GetTaskPermissions() UpdateTaskPermissionsVM {
	if o == nil || IsNil(o.TaskPermissions) {
		var ret UpdateTaskPermissionsVM
		return ret
	}
	return *o.TaskPermissions
}

// GetTaskPermissionsOk returns a tuple with the TaskPermissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateDefaultPermissionsVM) GetTaskPermissionsOk() (*UpdateTaskPermissionsVM, bool) {
	if o == nil || IsNil(o.TaskPermissions) {
		return nil, false
	}
	return o.TaskPermissions, true
}

// HasTaskPermissions returns a boolean if a field has been set.
func (o *UpdateDefaultPermissionsVM) HasTaskPermissions() bool {
	if o != nil && !IsNil(o.TaskPermissions) {
		return true
	}

	return false
}

// SetTaskPermissions gets a reference to the given UpdateTaskPermissionsVM and assigns it to the TaskPermissions field.
func (o *UpdateDefaultPermissionsVM) SetTaskPermissions(v UpdateTaskPermissionsVM) {
	o.TaskPermissions = &v
}

func (o UpdateDefaultPermissionsVM) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateDefaultPermissionsVM) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FilePermissions) {
		toSerialize["filePermissions"] = o.FilePermissions
	}
	if !IsNil(o.GroupPermissions) {
		toSerialize["groupPermissions"] = o.GroupPermissions
	}
	if !IsNil(o.DataSourcePermissions) {
		toSerialize["dataSourcePermissions"] = o.DataSourcePermissions
	}
	if !IsNil(o.TaskPermissions) {
		toSerialize["taskPermissions"] = o.TaskPermissions
	}
	return toSerialize, nil
}

type NullableUpdateDefaultPermissionsVM struct {
	value *UpdateDefaultPermissionsVM
	isSet bool
}

func (v NullableUpdateDefaultPermissionsVM) Get() *UpdateDefaultPermissionsVM {
	return v.value
}

func (v *NullableUpdateDefaultPermissionsVM) Set(val *UpdateDefaultPermissionsVM) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateDefaultPermissionsVM) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateDefaultPermissionsVM) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateDefaultPermissionsVM(val *UpdateDefaultPermissionsVM) *NullableUpdateDefaultPermissionsVM {
	return &NullableUpdateDefaultPermissionsVM{value: val, isSet: true}
}

func (v NullableUpdateDefaultPermissionsVM) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateDefaultPermissionsVM) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


