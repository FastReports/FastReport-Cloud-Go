/*
 * FastReport Cloud
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gofrcloud

import (
	"encoding/json"
)

// CreateDataSourceAdminVM struct for CreateDataSourceAdminVM
type CreateDataSourceAdminVM struct {
	OwnerId *string `json:"ownerId,omitempty"`
	Name *string `json:"name,omitempty"`
	ConnectionString *string `json:"connectionString,omitempty"`
	SubscriptionId *string `json:"subscriptionId,omitempty"`
	ConnectionType *string `json:"connectionType,omitempty"`
}

// NewCreateDataSourceAdminVM instantiates a new CreateDataSourceAdminVM object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateDataSourceAdminVM() *CreateDataSourceAdminVM {
	this := CreateDataSourceAdminVM{}
	return &this
}

// NewCreateDataSourceAdminVMWithDefaults instantiates a new CreateDataSourceAdminVM object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateDataSourceAdminVMWithDefaults() *CreateDataSourceAdminVM {
	this := CreateDataSourceAdminVM{}
	return &this
}

// GetOwnerId returns the OwnerId field value if set, zero value otherwise.
func (o *CreateDataSourceAdminVM) GetOwnerId() string {
	if o == nil || o.OwnerId == nil {
		var ret string
		return ret
	}
	return *o.OwnerId
}

// GetOwnerIdOk returns a tuple with the OwnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDataSourceAdminVM) GetOwnerIdOk() (*string, bool) {
	if o == nil || o.OwnerId == nil {
		return nil, false
	}
	return o.OwnerId, true
}

// HasOwnerId returns a boolean if a field has been set.
func (o *CreateDataSourceAdminVM) HasOwnerId() bool {
	if o != nil && o.OwnerId != nil {
		return true
	}

	return false
}

// SetOwnerId gets a reference to the given string and assigns it to the OwnerId field.
func (o *CreateDataSourceAdminVM) SetOwnerId(v string) {
	o.OwnerId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CreateDataSourceAdminVM) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDataSourceAdminVM) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CreateDataSourceAdminVM) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CreateDataSourceAdminVM) SetName(v string) {
	o.Name = &v
}

// GetConnectionString returns the ConnectionString field value if set, zero value otherwise.
func (o *CreateDataSourceAdminVM) GetConnectionString() string {
	if o == nil || o.ConnectionString == nil {
		var ret string
		return ret
	}
	return *o.ConnectionString
}

// GetConnectionStringOk returns a tuple with the ConnectionString field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDataSourceAdminVM) GetConnectionStringOk() (*string, bool) {
	if o == nil || o.ConnectionString == nil {
		return nil, false
	}
	return o.ConnectionString, true
}

// HasConnectionString returns a boolean if a field has been set.
func (o *CreateDataSourceAdminVM) HasConnectionString() bool {
	if o != nil && o.ConnectionString != nil {
		return true
	}

	return false
}

// SetConnectionString gets a reference to the given string and assigns it to the ConnectionString field.
func (o *CreateDataSourceAdminVM) SetConnectionString(v string) {
	o.ConnectionString = &v
}

// GetSubscriptionId returns the SubscriptionId field value if set, zero value otherwise.
func (o *CreateDataSourceAdminVM) GetSubscriptionId() string {
	if o == nil || o.SubscriptionId == nil {
		var ret string
		return ret
	}
	return *o.SubscriptionId
}

// GetSubscriptionIdOk returns a tuple with the SubscriptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDataSourceAdminVM) GetSubscriptionIdOk() (*string, bool) {
	if o == nil || o.SubscriptionId == nil {
		return nil, false
	}
	return o.SubscriptionId, true
}

// HasSubscriptionId returns a boolean if a field has been set.
func (o *CreateDataSourceAdminVM) HasSubscriptionId() bool {
	if o != nil && o.SubscriptionId != nil {
		return true
	}

	return false
}

// SetSubscriptionId gets a reference to the given string and assigns it to the SubscriptionId field.
func (o *CreateDataSourceAdminVM) SetSubscriptionId(v string) {
	o.SubscriptionId = &v
}

// GetConnectionType returns the ConnectionType field value if set, zero value otherwise.
func (o *CreateDataSourceAdminVM) GetConnectionType() string {
	if o == nil || o.ConnectionType == nil {
		var ret string
		return ret
	}
	return *o.ConnectionType
}

// GetConnectionTypeOk returns a tuple with the ConnectionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDataSourceAdminVM) GetConnectionTypeOk() (*string, bool) {
	if o == nil || o.ConnectionType == nil {
		return nil, false
	}
	return o.ConnectionType, true
}

// HasConnectionType returns a boolean if a field has been set.
func (o *CreateDataSourceAdminVM) HasConnectionType() bool {
	if o != nil && o.ConnectionType != nil {
		return true
	}

	return false
}

// SetConnectionType gets a reference to the given string and assigns it to the ConnectionType field.
func (o *CreateDataSourceAdminVM) SetConnectionType(v string) {
	o.ConnectionType = &v
}

func (o CreateDataSourceAdminVM) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.OwnerId != nil {
		toSerialize["ownerId"] = o.OwnerId
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.ConnectionString != nil {
		toSerialize["connectionString"] = o.ConnectionString
	}
	if o.SubscriptionId != nil {
		toSerialize["subscriptionId"] = o.SubscriptionId
	}
	if o.ConnectionType != nil {
		toSerialize["connectionType"] = o.ConnectionType
	}
	return json.Marshal(toSerialize)
}

type NullableCreateDataSourceAdminVM struct {
	value *CreateDataSourceAdminVM
	isSet bool
}

func (v NullableCreateDataSourceAdminVM) Get() *CreateDataSourceAdminVM {
	return v.value
}

func (v *NullableCreateDataSourceAdminVM) Set(val *CreateDataSourceAdminVM) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateDataSourceAdminVM) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateDataSourceAdminVM) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateDataSourceAdminVM(val *CreateDataSourceAdminVM) *NullableCreateDataSourceAdminVM {
	return &NullableCreateDataSourceAdminVM{value: val, isSet: true}
}

func (v NullableCreateDataSourceAdminVM) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateDataSourceAdminVM) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


