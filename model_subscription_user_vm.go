/*
 * FastReport Cloud
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package FastReport.Cloud.SDK

import (
	"encoding/json"
)

// SubscriptionUserVM struct for SubscriptionUserVM
type SubscriptionUserVM struct {
	UserId *string `json:"userId,omitempty"`
	Groups *[]GroupVM `json:"groups,omitempty"`
}

// NewSubscriptionUserVM instantiates a new SubscriptionUserVM object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubscriptionUserVM() *SubscriptionUserVM {
	this := SubscriptionUserVM{}
	return &this
}

// NewSubscriptionUserVMWithDefaults instantiates a new SubscriptionUserVM object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubscriptionUserVMWithDefaults() *SubscriptionUserVM {
	this := SubscriptionUserVM{}
	return &this
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *SubscriptionUserVM) GetUserId() string {
	if o == nil || o.UserId == nil {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionUserVM) GetUserIdOk() (*string, bool) {
	if o == nil || o.UserId == nil {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *SubscriptionUserVM) HasUserId() bool {
	if o != nil && o.UserId != nil {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *SubscriptionUserVM) SetUserId(v string) {
	o.UserId = &v
}

// GetGroups returns the Groups field value if set, zero value otherwise.
func (o *SubscriptionUserVM) GetGroups() []GroupVM {
	if o == nil || o.Groups == nil {
		var ret []GroupVM
		return ret
	}
	return *o.Groups
}

// GetGroupsOk returns a tuple with the Groups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionUserVM) GetGroupsOk() (*[]GroupVM, bool) {
	if o == nil || o.Groups == nil {
		return nil, false
	}
	return o.Groups, true
}

// HasGroups returns a boolean if a field has been set.
func (o *SubscriptionUserVM) HasGroups() bool {
	if o != nil && o.Groups != nil {
		return true
	}

	return false
}

// SetGroups gets a reference to the given []GroupVM and assigns it to the Groups field.
func (o *SubscriptionUserVM) SetGroups(v []GroupVM) {
	o.Groups = &v
}

func (o SubscriptionUserVM) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.UserId != nil {
		toSerialize["userId"] = o.UserId
	}
	if o.Groups != nil {
		toSerialize["groups"] = o.Groups
	}
	return json.Marshal(toSerialize)
}

type NullableSubscriptionUserVM struct {
	value *SubscriptionUserVM
	isSet bool
}

func (v NullableSubscriptionUserVM) Get() *SubscriptionUserVM {
	return v.value
}

func (v *NullableSubscriptionUserVM) Set(val *SubscriptionUserVM) {
	v.value = val
	v.isSet = true
}

func (v NullableSubscriptionUserVM) IsSet() bool {
	return v.isSet
}

func (v *NullableSubscriptionUserVM) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubscriptionUserVM(val *SubscriptionUserVM) *NullableSubscriptionUserVM {
	return &NullableSubscriptionUserVM{value: val, isSet: true}
}

func (v NullableSubscriptionUserVM) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubscriptionUserVM) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


