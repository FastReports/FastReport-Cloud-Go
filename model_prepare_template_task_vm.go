/*
 * FastReport Cloud
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gofrcloud

import (
	"encoding/json"
)

// PrepareTemplateTaskVM struct for PrepareTemplateTaskVM
type PrepareTemplateTaskVM struct {
	Name *string `json:"name,omitempty"`
	Locale *string `json:"locale,omitempty"`
	ParentFolderId *string `json:"parentFolderId,omitempty"`
	PagesCount *int32 `json:"pagesCount,omitempty"`
	ReportParameters *map[string]string `json:"reportParameters,omitempty"`
}

// NewPrepareTemplateTaskVM instantiates a new PrepareTemplateTaskVM object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPrepareTemplateTaskVM() *PrepareTemplateTaskVM {
	this := PrepareTemplateTaskVM{}
	return &this
}

// NewPrepareTemplateTaskVMWithDefaults instantiates a new PrepareTemplateTaskVM object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPrepareTemplateTaskVMWithDefaults() *PrepareTemplateTaskVM {
	this := PrepareTemplateTaskVM{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PrepareTemplateTaskVM) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrepareTemplateTaskVM) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PrepareTemplateTaskVM) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PrepareTemplateTaskVM) SetName(v string) {
	o.Name = &v
}

// GetLocale returns the Locale field value if set, zero value otherwise.
func (o *PrepareTemplateTaskVM) GetLocale() string {
	if o == nil || o.Locale == nil {
		var ret string
		return ret
	}
	return *o.Locale
}

// GetLocaleOk returns a tuple with the Locale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrepareTemplateTaskVM) GetLocaleOk() (*string, bool) {
	if o == nil || o.Locale == nil {
		return nil, false
	}
	return o.Locale, true
}

// HasLocale returns a boolean if a field has been set.
func (o *PrepareTemplateTaskVM) HasLocale() bool {
	if o != nil && o.Locale != nil {
		return true
	}

	return false
}

// SetLocale gets a reference to the given string and assigns it to the Locale field.
func (o *PrepareTemplateTaskVM) SetLocale(v string) {
	o.Locale = &v
}

// GetParentFolderId returns the ParentFolderId field value if set, zero value otherwise.
func (o *PrepareTemplateTaskVM) GetParentFolderId() string {
	if o == nil || o.ParentFolderId == nil {
		var ret string
		return ret
	}
	return *o.ParentFolderId
}

// GetParentFolderIdOk returns a tuple with the ParentFolderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrepareTemplateTaskVM) GetParentFolderIdOk() (*string, bool) {
	if o == nil || o.ParentFolderId == nil {
		return nil, false
	}
	return o.ParentFolderId, true
}

// HasParentFolderId returns a boolean if a field has been set.
func (o *PrepareTemplateTaskVM) HasParentFolderId() bool {
	if o != nil && o.ParentFolderId != nil {
		return true
	}

	return false
}

// SetParentFolderId gets a reference to the given string and assigns it to the ParentFolderId field.
func (o *PrepareTemplateTaskVM) SetParentFolderId(v string) {
	o.ParentFolderId = &v
}

// GetPagesCount returns the PagesCount field value if set, zero value otherwise.
func (o *PrepareTemplateTaskVM) GetPagesCount() int32 {
	if o == nil || o.PagesCount == nil {
		var ret int32
		return ret
	}
	return *o.PagesCount
}

// GetPagesCountOk returns a tuple with the PagesCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrepareTemplateTaskVM) GetPagesCountOk() (*int32, bool) {
	if o == nil || o.PagesCount == nil {
		return nil, false
	}
	return o.PagesCount, true
}

// HasPagesCount returns a boolean if a field has been set.
func (o *PrepareTemplateTaskVM) HasPagesCount() bool {
	if o != nil && o.PagesCount != nil {
		return true
	}

	return false
}

// SetPagesCount gets a reference to the given int32 and assigns it to the PagesCount field.
func (o *PrepareTemplateTaskVM) SetPagesCount(v int32) {
	o.PagesCount = &v
}

// GetReportParameters returns the ReportParameters field value if set, zero value otherwise.
func (o *PrepareTemplateTaskVM) GetReportParameters() map[string]string {
	if o == nil || o.ReportParameters == nil {
		var ret map[string]string
		return ret
	}
	return *o.ReportParameters
}

// GetReportParametersOk returns a tuple with the ReportParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrepareTemplateTaskVM) GetReportParametersOk() (*map[string]string, bool) {
	if o == nil || o.ReportParameters == nil {
		return nil, false
	}
	return o.ReportParameters, true
}

// HasReportParameters returns a boolean if a field has been set.
func (o *PrepareTemplateTaskVM) HasReportParameters() bool {
	if o != nil && o.ReportParameters != nil {
		return true
	}

	return false
}

// SetReportParameters gets a reference to the given map[string]string and assigns it to the ReportParameters field.
func (o *PrepareTemplateTaskVM) SetReportParameters(v map[string]string) {
	o.ReportParameters = &v
}

func (o PrepareTemplateTaskVM) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Locale != nil {
		toSerialize["locale"] = o.Locale
	}
	if o.ParentFolderId != nil {
		toSerialize["parentFolderId"] = o.ParentFolderId
	}
	if o.PagesCount != nil {
		toSerialize["pagesCount"] = o.PagesCount
	}
	if o.ReportParameters != nil {
		toSerialize["reportParameters"] = o.ReportParameters
	}
	return json.Marshal(toSerialize)
}

type NullablePrepareTemplateTaskVM struct {
	value *PrepareTemplateTaskVM
	isSet bool
}

func (v NullablePrepareTemplateTaskVM) Get() *PrepareTemplateTaskVM {
	return v.value
}

func (v *NullablePrepareTemplateTaskVM) Set(val *PrepareTemplateTaskVM) {
	v.value = val
	v.isSet = true
}

func (v NullablePrepareTemplateTaskVM) IsSet() bool {
	return v.isSet
}

func (v *NullablePrepareTemplateTaskVM) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePrepareTemplateTaskVM(val *PrepareTemplateTaskVM) *NullablePrepareTemplateTaskVM {
	return &NullablePrepareTemplateTaskVM{value: val, isSet: true}
}

func (v NullablePrepareTemplateTaskVM) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePrepareTemplateTaskVM) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


