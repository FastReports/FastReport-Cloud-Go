/*
 * FastReport Cloud
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gofrcloud

import (
	"encoding/json"
)

// ApiKeysVM struct for ApiKeysVM
type ApiKeysVM struct {
	ApiKeys []ApiKeyVM `json:"apiKeys,omitempty"`
	Count *int64 `json:"count,omitempty"`
}

// NewApiKeysVM instantiates a new ApiKeysVM object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiKeysVM() *ApiKeysVM {
	this := ApiKeysVM{}
	return &this
}

// NewApiKeysVMWithDefaults instantiates a new ApiKeysVM object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiKeysVMWithDefaults() *ApiKeysVM {
	this := ApiKeysVM{}
	return &this
}

// GetApiKeys returns the ApiKeys field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiKeysVM) GetApiKeys() []ApiKeyVM {
	if o == nil  {
		var ret []ApiKeyVM
		return ret
	}
	return o.ApiKeys
}

// GetApiKeysOk returns a tuple with the ApiKeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiKeysVM) GetApiKeysOk() (*[]ApiKeyVM, bool) {
	if o == nil || o.ApiKeys == nil {
		return nil, false
	}
	return &o.ApiKeys, true
}

// HasApiKeys returns a boolean if a field has been set.
func (o *ApiKeysVM) HasApiKeys() bool {
	if o != nil && o.ApiKeys != nil {
		return true
	}

	return false
}

// SetApiKeys gets a reference to the given []ApiKeyVM and assigns it to the ApiKeys field.
func (o *ApiKeysVM) SetApiKeys(v []ApiKeyVM) {
	o.ApiKeys = v
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *ApiKeysVM) GetCount() int64 {
	if o == nil || o.Count == nil {
		var ret int64
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiKeysVM) GetCountOk() (*int64, bool) {
	if o == nil || o.Count == nil {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *ApiKeysVM) HasCount() bool {
	if o != nil && o.Count != nil {
		return true
	}

	return false
}

// SetCount gets a reference to the given int64 and assigns it to the Count field.
func (o *ApiKeysVM) SetCount(v int64) {
	o.Count = &v
}

func (o ApiKeysVM) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ApiKeys != nil {
		toSerialize["apiKeys"] = o.ApiKeys
	}
	if o.Count != nil {
		toSerialize["count"] = o.Count
	}
	return json.Marshal(toSerialize)
}

type NullableApiKeysVM struct {
	value *ApiKeysVM
	isSet bool
}

func (v NullableApiKeysVM) Get() *ApiKeysVM {
	return v.value
}

func (v *NullableApiKeysVM) Set(val *ApiKeysVM) {
	v.value = val
	v.isSet = true
}

func (v NullableApiKeysVM) IsSet() bool {
	return v.isSet
}

func (v *NullableApiKeysVM) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiKeysVM(val *ApiKeysVM) *NullableApiKeysVM {
	return &NullableApiKeysVM{value: val, isSet: true}
}

func (v NullableApiKeysVM) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiKeysVM) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


