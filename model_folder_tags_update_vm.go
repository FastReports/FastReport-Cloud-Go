/*
FastReport Cloud

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gofrcloud

import (
	"encoding/json"
)

// checks if the FolderTagsUpdateVM type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FolderTagsUpdateVM{}

// FolderTagsUpdateVM struct for FolderTagsUpdateVM
type FolderTagsUpdateVM struct {
	Tags []string `json:"tags,omitempty"`
}

// NewFolderTagsUpdateVM instantiates a new FolderTagsUpdateVM object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFolderTagsUpdateVM() *FolderTagsUpdateVM {
	this := FolderTagsUpdateVM{}
	return &this
}

// NewFolderTagsUpdateVMWithDefaults instantiates a new FolderTagsUpdateVM object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFolderTagsUpdateVMWithDefaults() *FolderTagsUpdateVM {
	this := FolderTagsUpdateVM{}
	return &this
}

// GetTags returns the Tags field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FolderTagsUpdateVM) GetTags() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FolderTagsUpdateVM) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *FolderTagsUpdateVM) HasTags() bool {
	if o != nil && IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *FolderTagsUpdateVM) SetTags(v []string) {
	o.Tags = v
}

func (o FolderTagsUpdateVM) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FolderTagsUpdateVM) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	return toSerialize, nil
}

type NullableFolderTagsUpdateVM struct {
	value *FolderTagsUpdateVM
	isSet bool
}

func (v NullableFolderTagsUpdateVM) Get() *FolderTagsUpdateVM {
	return v.value
}

func (v *NullableFolderTagsUpdateVM) Set(val *FolderTagsUpdateVM) {
	v.value = val
	v.isSet = true
}

func (v NullableFolderTagsUpdateVM) IsSet() bool {
	return v.isSet
}

func (v *NullableFolderTagsUpdateVM) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFolderTagsUpdateVM(val *FolderTagsUpdateVM) *NullableFolderTagsUpdateVM {
	return &NullableFolderTagsUpdateVM{value: val, isSet: true}
}

func (v NullableFolderTagsUpdateVM) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFolderTagsUpdateVM) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


