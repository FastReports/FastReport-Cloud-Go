/*
 * FastReport Cloud
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package FastReport.Cloud.SDK

import (
	"encoding/json"
)

// ExportTemplateTaskVM struct for ExportTemplateTaskVM
type ExportTemplateTaskVM struct {
	FileName *string `json:"fileName,omitempty"`
	FolderId *string `json:"folderId,omitempty"`
	Locale *string `json:"locale,omitempty"`
	PagesCount *int32 `json:"pagesCount,omitempty"`
	Format *string `json:"format,omitempty"`
	ExportParameters *map[string]map[string]interface{} `json:"exportParameters,omitempty"`
	ReportParameters *map[string]map[string]interface{} `json:"reportParameters,omitempty"`
}

// NewExportTemplateTaskVM instantiates a new ExportTemplateTaskVM object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExportTemplateTaskVM() *ExportTemplateTaskVM {
	this := ExportTemplateTaskVM{}
	return &this
}

// NewExportTemplateTaskVMWithDefaults instantiates a new ExportTemplateTaskVM object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExportTemplateTaskVMWithDefaults() *ExportTemplateTaskVM {
	this := ExportTemplateTaskVM{}
	return &this
}

// GetFileName returns the FileName field value if set, zero value otherwise.
func (o *ExportTemplateTaskVM) GetFileName() string {
	if o == nil || o.FileName == nil {
		var ret string
		return ret
	}
	return *o.FileName
}

// GetFileNameOk returns a tuple with the FileName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportTemplateTaskVM) GetFileNameOk() (*string, bool) {
	if o == nil || o.FileName == nil {
		return nil, false
	}
	return o.FileName, true
}

// HasFileName returns a boolean if a field has been set.
func (o *ExportTemplateTaskVM) HasFileName() bool {
	if o != nil && o.FileName != nil {
		return true
	}

	return false
}

// SetFileName gets a reference to the given string and assigns it to the FileName field.
func (o *ExportTemplateTaskVM) SetFileName(v string) {
	o.FileName = &v
}

// GetFolderId returns the FolderId field value if set, zero value otherwise.
func (o *ExportTemplateTaskVM) GetFolderId() string {
	if o == nil || o.FolderId == nil {
		var ret string
		return ret
	}
	return *o.FolderId
}

// GetFolderIdOk returns a tuple with the FolderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportTemplateTaskVM) GetFolderIdOk() (*string, bool) {
	if o == nil || o.FolderId == nil {
		return nil, false
	}
	return o.FolderId, true
}

// HasFolderId returns a boolean if a field has been set.
func (o *ExportTemplateTaskVM) HasFolderId() bool {
	if o != nil && o.FolderId != nil {
		return true
	}

	return false
}

// SetFolderId gets a reference to the given string and assigns it to the FolderId field.
func (o *ExportTemplateTaskVM) SetFolderId(v string) {
	o.FolderId = &v
}

// GetLocale returns the Locale field value if set, zero value otherwise.
func (o *ExportTemplateTaskVM) GetLocale() string {
	if o == nil || o.Locale == nil {
		var ret string
		return ret
	}
	return *o.Locale
}

// GetLocaleOk returns a tuple with the Locale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportTemplateTaskVM) GetLocaleOk() (*string, bool) {
	if o == nil || o.Locale == nil {
		return nil, false
	}
	return o.Locale, true
}

// HasLocale returns a boolean if a field has been set.
func (o *ExportTemplateTaskVM) HasLocale() bool {
	if o != nil && o.Locale != nil {
		return true
	}

	return false
}

// SetLocale gets a reference to the given string and assigns it to the Locale field.
func (o *ExportTemplateTaskVM) SetLocale(v string) {
	o.Locale = &v
}

// GetPagesCount returns the PagesCount field value if set, zero value otherwise.
func (o *ExportTemplateTaskVM) GetPagesCount() int32 {
	if o == nil || o.PagesCount == nil {
		var ret int32
		return ret
	}
	return *o.PagesCount
}

// GetPagesCountOk returns a tuple with the PagesCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportTemplateTaskVM) GetPagesCountOk() (*int32, bool) {
	if o == nil || o.PagesCount == nil {
		return nil, false
	}
	return o.PagesCount, true
}

// HasPagesCount returns a boolean if a field has been set.
func (o *ExportTemplateTaskVM) HasPagesCount() bool {
	if o != nil && o.PagesCount != nil {
		return true
	}

	return false
}

// SetPagesCount gets a reference to the given int32 and assigns it to the PagesCount field.
func (o *ExportTemplateTaskVM) SetPagesCount(v int32) {
	o.PagesCount = &v
}

// GetFormat returns the Format field value if set, zero value otherwise.
func (o *ExportTemplateTaskVM) GetFormat() string {
	if o == nil || o.Format == nil {
		var ret string
		return ret
	}
	return *o.Format
}

// GetFormatOk returns a tuple with the Format field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportTemplateTaskVM) GetFormatOk() (*string, bool) {
	if o == nil || o.Format == nil {
		return nil, false
	}
	return o.Format, true
}

// HasFormat returns a boolean if a field has been set.
func (o *ExportTemplateTaskVM) HasFormat() bool {
	if o != nil && o.Format != nil {
		return true
	}

	return false
}

// SetFormat gets a reference to the given string and assigns it to the Format field.
func (o *ExportTemplateTaskVM) SetFormat(v string) {
	o.Format = &v
}

// GetExportParameters returns the ExportParameters field value if set, zero value otherwise.
func (o *ExportTemplateTaskVM) GetExportParameters() map[string]map[string]interface{} {
	if o == nil || o.ExportParameters == nil {
		var ret map[string]map[string]interface{}
		return ret
	}
	return *o.ExportParameters
}

// GetExportParametersOk returns a tuple with the ExportParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportTemplateTaskVM) GetExportParametersOk() (*map[string]map[string]interface{}, bool) {
	if o == nil || o.ExportParameters == nil {
		return nil, false
	}
	return o.ExportParameters, true
}

// HasExportParameters returns a boolean if a field has been set.
func (o *ExportTemplateTaskVM) HasExportParameters() bool {
	if o != nil && o.ExportParameters != nil {
		return true
	}

	return false
}

// SetExportParameters gets a reference to the given map[string]map[string]interface{} and assigns it to the ExportParameters field.
func (o *ExportTemplateTaskVM) SetExportParameters(v map[string]map[string]interface{}) {
	o.ExportParameters = &v
}

// GetReportParameters returns the ReportParameters field value if set, zero value otherwise.
func (o *ExportTemplateTaskVM) GetReportParameters() map[string]map[string]interface{} {
	if o == nil || o.ReportParameters == nil {
		var ret map[string]map[string]interface{}
		return ret
	}
	return *o.ReportParameters
}

// GetReportParametersOk returns a tuple with the ReportParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportTemplateTaskVM) GetReportParametersOk() (*map[string]map[string]interface{}, bool) {
	if o == nil || o.ReportParameters == nil {
		return nil, false
	}
	return o.ReportParameters, true
}

// HasReportParameters returns a boolean if a field has been set.
func (o *ExportTemplateTaskVM) HasReportParameters() bool {
	if o != nil && o.ReportParameters != nil {
		return true
	}

	return false
}

// SetReportParameters gets a reference to the given map[string]map[string]interface{} and assigns it to the ReportParameters field.
func (o *ExportTemplateTaskVM) SetReportParameters(v map[string]map[string]interface{}) {
	o.ReportParameters = &v
}

func (o ExportTemplateTaskVM) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.FileName != nil {
		toSerialize["fileName"] = o.FileName
	}
	if o.FolderId != nil {
		toSerialize["folderId"] = o.FolderId
	}
	if o.Locale != nil {
		toSerialize["locale"] = o.Locale
	}
	if o.PagesCount != nil {
		toSerialize["pagesCount"] = o.PagesCount
	}
	if o.Format != nil {
		toSerialize["format"] = o.Format
	}
	if o.ExportParameters != nil {
		toSerialize["exportParameters"] = o.ExportParameters
	}
	if o.ReportParameters != nil {
		toSerialize["reportParameters"] = o.ReportParameters
	}
	return json.Marshal(toSerialize)
}

type NullableExportTemplateTaskVM struct {
	value *ExportTemplateTaskVM
	isSet bool
}

func (v NullableExportTemplateTaskVM) Get() *ExportTemplateTaskVM {
	return v.value
}

func (v *NullableExportTemplateTaskVM) Set(val *ExportTemplateTaskVM) {
	v.value = val
	v.isSet = true
}

func (v NullableExportTemplateTaskVM) IsSet() bool {
	return v.isSet
}

func (v *NullableExportTemplateTaskVM) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExportTemplateTaskVM(val *ExportTemplateTaskVM) *NullableExportTemplateTaskVM {
	return &NullableExportTemplateTaskVM{value: val, isSet: true}
}

func (v NullableExportTemplateTaskVM) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExportTemplateTaskVM) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


