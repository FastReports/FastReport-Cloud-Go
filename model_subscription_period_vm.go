/*
 * FastReport Cloud
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gofrcloud

import (
	"encoding/json"
	"time"
)

// SubscriptionPeriodVM struct for SubscriptionPeriodVM
type SubscriptionPeriodVM struct {
	StartTime *time.Time `json:"startTime,omitempty"`
	EndTime *time.Time `json:"endTime,omitempty"`
	Plan *SubscriptionPlanVM `json:"plan,omitempty"`
}

// NewSubscriptionPeriodVM instantiates a new SubscriptionPeriodVM object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubscriptionPeriodVM() *SubscriptionPeriodVM {
	this := SubscriptionPeriodVM{}
	return &this
}

// NewSubscriptionPeriodVMWithDefaults instantiates a new SubscriptionPeriodVM object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubscriptionPeriodVMWithDefaults() *SubscriptionPeriodVM {
	this := SubscriptionPeriodVM{}
	return &this
}

// GetStartTime returns the StartTime field value if set, zero value otherwise.
func (o *SubscriptionPeriodVM) GetStartTime() time.Time {
	if o == nil || o.StartTime == nil {
		var ret time.Time
		return ret
	}
	return *o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionPeriodVM) GetStartTimeOk() (*time.Time, bool) {
	if o == nil || o.StartTime == nil {
		return nil, false
	}
	return o.StartTime, true
}

// HasStartTime returns a boolean if a field has been set.
func (o *SubscriptionPeriodVM) HasStartTime() bool {
	if o != nil && o.StartTime != nil {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given time.Time and assigns it to the StartTime field.
func (o *SubscriptionPeriodVM) SetStartTime(v time.Time) {
	o.StartTime = &v
}

// GetEndTime returns the EndTime field value if set, zero value otherwise.
func (o *SubscriptionPeriodVM) GetEndTime() time.Time {
	if o == nil || o.EndTime == nil {
		var ret time.Time
		return ret
	}
	return *o.EndTime
}

// GetEndTimeOk returns a tuple with the EndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionPeriodVM) GetEndTimeOk() (*time.Time, bool) {
	if o == nil || o.EndTime == nil {
		return nil, false
	}
	return o.EndTime, true
}

// HasEndTime returns a boolean if a field has been set.
func (o *SubscriptionPeriodVM) HasEndTime() bool {
	if o != nil && o.EndTime != nil {
		return true
	}

	return false
}

// SetEndTime gets a reference to the given time.Time and assigns it to the EndTime field.
func (o *SubscriptionPeriodVM) SetEndTime(v time.Time) {
	o.EndTime = &v
}

// GetPlan returns the Plan field value if set, zero value otherwise.
func (o *SubscriptionPeriodVM) GetPlan() SubscriptionPlanVM {
	if o == nil || o.Plan == nil {
		var ret SubscriptionPlanVM
		return ret
	}
	return *o.Plan
}

// GetPlanOk returns a tuple with the Plan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionPeriodVM) GetPlanOk() (*SubscriptionPlanVM, bool) {
	if o == nil || o.Plan == nil {
		return nil, false
	}
	return o.Plan, true
}

// HasPlan returns a boolean if a field has been set.
func (o *SubscriptionPeriodVM) HasPlan() bool {
	if o != nil && o.Plan != nil {
		return true
	}

	return false
}

// SetPlan gets a reference to the given SubscriptionPlanVM and assigns it to the Plan field.
func (o *SubscriptionPeriodVM) SetPlan(v SubscriptionPlanVM) {
	o.Plan = &v
}

func (o SubscriptionPeriodVM) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.StartTime != nil {
		toSerialize["startTime"] = o.StartTime
	}
	if o.EndTime != nil {
		toSerialize["endTime"] = o.EndTime
	}
	if o.Plan != nil {
		toSerialize["plan"] = o.Plan
	}
	return json.Marshal(toSerialize)
}

type NullableSubscriptionPeriodVM struct {
	value *SubscriptionPeriodVM
	isSet bool
}

func (v NullableSubscriptionPeriodVM) Get() *SubscriptionPeriodVM {
	return v.value
}

func (v *NullableSubscriptionPeriodVM) Set(val *SubscriptionPeriodVM) {
	v.value = val
	v.isSet = true
}

func (v NullableSubscriptionPeriodVM) IsSet() bool {
	return v.isSet
}

func (v *NullableSubscriptionPeriodVM) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubscriptionPeriodVM(val *SubscriptionPeriodVM) *NullableSubscriptionPeriodVM {
	return &NullableSubscriptionPeriodVM{value: val, isSet: true}
}

func (v NullableSubscriptionPeriodVM) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubscriptionPeriodVM) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


