/*
FastReport Cloud

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gofrcloud

import (
	"encoding/json"
)

// checks if the UpdateTransformTaskBaseVM type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateTransformTaskBaseVM{}

// UpdateTransformTaskBaseVM struct for UpdateTransformTaskBaseVM
type UpdateTransformTaskBaseVM struct {
	InputFile *InputFileVM `json:"inputFile,omitempty"`
	Locale NullableString `json:"locale,omitempty"`
	OutputFile *OutputFileVM `json:"outputFile,omitempty"`
	TransportIds []string `json:"transportIds,omitempty"`
	T string `json:"$t"`
}

// NewUpdateTransformTaskBaseVM instantiates a new UpdateTransformTaskBaseVM object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateTransformTaskBaseVM(t string) *UpdateTransformTaskBaseVM {
	this := UpdateTransformTaskBaseVM{}
	this.T = t
	return &this
}

// NewUpdateTransformTaskBaseVMWithDefaults instantiates a new UpdateTransformTaskBaseVM object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateTransformTaskBaseVMWithDefaults() *UpdateTransformTaskBaseVM {
	this := UpdateTransformTaskBaseVM{}
	return &this
}

// GetInputFile returns the InputFile field value if set, zero value otherwise.
func (o *UpdateTransformTaskBaseVM) GetInputFile() InputFileVM {
	if o == nil || IsNil(o.InputFile) {
		var ret InputFileVM
		return ret
	}
	return *o.InputFile
}

// GetInputFileOk returns a tuple with the InputFile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTransformTaskBaseVM) GetInputFileOk() (*InputFileVM, bool) {
	if o == nil || IsNil(o.InputFile) {
		return nil, false
	}
	return o.InputFile, true
}

// HasInputFile returns a boolean if a field has been set.
func (o *UpdateTransformTaskBaseVM) HasInputFile() bool {
	if o != nil && !IsNil(o.InputFile) {
		return true
	}

	return false
}

// SetInputFile gets a reference to the given InputFileVM and assigns it to the InputFile field.
func (o *UpdateTransformTaskBaseVM) SetInputFile(v InputFileVM) {
	o.InputFile = &v
}

// GetLocale returns the Locale field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateTransformTaskBaseVM) GetLocale() string {
	if o == nil || IsNil(o.Locale.Get()) {
		var ret string
		return ret
	}
	return *o.Locale.Get()
}

// GetLocaleOk returns a tuple with the Locale field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateTransformTaskBaseVM) GetLocaleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Locale.Get(), o.Locale.IsSet()
}

// HasLocale returns a boolean if a field has been set.
func (o *UpdateTransformTaskBaseVM) HasLocale() bool {
	if o != nil && o.Locale.IsSet() {
		return true
	}

	return false
}

// SetLocale gets a reference to the given NullableString and assigns it to the Locale field.
func (o *UpdateTransformTaskBaseVM) SetLocale(v string) {
	o.Locale.Set(&v)
}
// SetLocaleNil sets the value for Locale to be an explicit nil
func (o *UpdateTransformTaskBaseVM) SetLocaleNil() {
	o.Locale.Set(nil)
}

// UnsetLocale ensures that no value is present for Locale, not even an explicit nil
func (o *UpdateTransformTaskBaseVM) UnsetLocale() {
	o.Locale.Unset()
}

// GetOutputFile returns the OutputFile field value if set, zero value otherwise.
func (o *UpdateTransformTaskBaseVM) GetOutputFile() OutputFileVM {
	if o == nil || IsNil(o.OutputFile) {
		var ret OutputFileVM
		return ret
	}
	return *o.OutputFile
}

// GetOutputFileOk returns a tuple with the OutputFile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateTransformTaskBaseVM) GetOutputFileOk() (*OutputFileVM, bool) {
	if o == nil || IsNil(o.OutputFile) {
		return nil, false
	}
	return o.OutputFile, true
}

// HasOutputFile returns a boolean if a field has been set.
func (o *UpdateTransformTaskBaseVM) HasOutputFile() bool {
	if o != nil && !IsNil(o.OutputFile) {
		return true
	}

	return false
}

// SetOutputFile gets a reference to the given OutputFileVM and assigns it to the OutputFile field.
func (o *UpdateTransformTaskBaseVM) SetOutputFile(v OutputFileVM) {
	o.OutputFile = &v
}

// GetTransportIds returns the TransportIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateTransformTaskBaseVM) GetTransportIds() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.TransportIds
}

// GetTransportIdsOk returns a tuple with the TransportIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateTransformTaskBaseVM) GetTransportIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.TransportIds) {
		return nil, false
	}
	return o.TransportIds, true
}

// HasTransportIds returns a boolean if a field has been set.
func (o *UpdateTransformTaskBaseVM) HasTransportIds() bool {
	if o != nil && IsNil(o.TransportIds) {
		return true
	}

	return false
}

// SetTransportIds gets a reference to the given []string and assigns it to the TransportIds field.
func (o *UpdateTransformTaskBaseVM) SetTransportIds(v []string) {
	o.TransportIds = v
}

// GetT returns the T field value
func (o *UpdateTransformTaskBaseVM) GetT() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.T
}

// GetTOk returns a tuple with the T field value
// and a boolean to check if the value has been set.
func (o *UpdateTransformTaskBaseVM) GetTOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.T, true
}

// SetT sets field value
func (o *UpdateTransformTaskBaseVM) SetT(v string) {
	o.T = v
}

func (o UpdateTransformTaskBaseVM) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateTransformTaskBaseVM) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.InputFile) {
		toSerialize["inputFile"] = o.InputFile
	}
	if o.Locale.IsSet() {
		toSerialize["locale"] = o.Locale.Get()
	}
	if !IsNil(o.OutputFile) {
		toSerialize["outputFile"] = o.OutputFile
	}
	if o.TransportIds != nil {
		toSerialize["transportIds"] = o.TransportIds
	}
	toSerialize["$t"] = o.T
	return toSerialize, nil
}

type NullableUpdateTransformTaskBaseVM struct {
	value *UpdateTransformTaskBaseVM
	isSet bool
}

func (v NullableUpdateTransformTaskBaseVM) Get() *UpdateTransformTaskBaseVM {
	return v.value
}

func (v *NullableUpdateTransformTaskBaseVM) Set(val *UpdateTransformTaskBaseVM) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateTransformTaskBaseVM) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateTransformTaskBaseVM) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateTransformTaskBaseVM(val *UpdateTransformTaskBaseVM) *NullableUpdateTransformTaskBaseVM {
	return &NullableUpdateTransformTaskBaseVM{value: val, isSet: true}
}

func (v NullableUpdateTransformTaskBaseVM) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateTransformTaskBaseVM) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


