/*
FastReport Cloud

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gofrcloud

import (
	"encoding/json"
)

// checks if the TemplateVM type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TemplateVM{}

// TemplateVM struct for TemplateVM
type TemplateVM struct {
	ReportInfo *ReportInfo `json:"reportInfo,omitempty"`
}

// NewTemplateVM instantiates a new TemplateVM object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTemplateVM() *TemplateVM {
	this := TemplateVM{}
	return &this
}

// NewTemplateVMWithDefaults instantiates a new TemplateVM object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTemplateVMWithDefaults() *TemplateVM {
	this := TemplateVM{}
	return &this
}

// GetReportInfo returns the ReportInfo field value if set, zero value otherwise.
func (o *TemplateVM) GetReportInfo() ReportInfo {
	if o == nil || IsNil(o.ReportInfo) {
		var ret ReportInfo
		return ret
	}
	return *o.ReportInfo
}

// GetReportInfoOk returns a tuple with the ReportInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TemplateVM) GetReportInfoOk() (*ReportInfo, bool) {
	if o == nil || IsNil(o.ReportInfo) {
		return nil, false
	}
	return o.ReportInfo, true
}

// HasReportInfo returns a boolean if a field has been set.
func (o *TemplateVM) HasReportInfo() bool {
	if o != nil && !IsNil(o.ReportInfo) {
		return true
	}

	return false
}

// SetReportInfo gets a reference to the given ReportInfo and assigns it to the ReportInfo field.
func (o *TemplateVM) SetReportInfo(v ReportInfo) {
	o.ReportInfo = &v
}

func (o TemplateVM) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TemplateVM) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ReportInfo) {
		toSerialize["reportInfo"] = o.ReportInfo
	}
	return toSerialize, nil
}

type NullableTemplateVM struct {
	value *TemplateVM
	isSet bool
}

func (v NullableTemplateVM) Get() *TemplateVM {
	return v.value
}

func (v *NullableTemplateVM) Set(val *TemplateVM) {
	v.value = val
	v.isSet = true
}

func (v NullableTemplateVM) IsSet() bool {
	return v.isSet
}

func (v *NullableTemplateVM) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTemplateVM(val *TemplateVM) *NullableTemplateVM {
	return &NullableTemplateVM{value: val, isSet: true}
}

func (v NullableTemplateVM) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTemplateVM) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


