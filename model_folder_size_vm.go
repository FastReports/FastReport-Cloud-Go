/*
FastReport Cloud

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gofrcloud

import (
	"encoding/json"
)

// checks if the FolderSizeVM type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FolderSizeVM{}

// FolderSizeVM struct for FolderSizeVM
type FolderSizeVM struct {
	Size *int64 `json:"size,omitempty"`
	RealSize *int64 `json:"realSize,omitempty"`
	DocumentsCount *int64 `json:"documentsCount,omitempty"`
}

// NewFolderSizeVM instantiates a new FolderSizeVM object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFolderSizeVM() *FolderSizeVM {
	this := FolderSizeVM{}
	return &this
}

// NewFolderSizeVMWithDefaults instantiates a new FolderSizeVM object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFolderSizeVMWithDefaults() *FolderSizeVM {
	this := FolderSizeVM{}
	return &this
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *FolderSizeVM) GetSize() int64 {
	if o == nil || IsNil(o.Size) {
		var ret int64
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolderSizeVM) GetSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.Size) {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *FolderSizeVM) HasSize() bool {
	if o != nil && !IsNil(o.Size) {
		return true
	}

	return false
}

// SetSize gets a reference to the given int64 and assigns it to the Size field.
func (o *FolderSizeVM) SetSize(v int64) {
	o.Size = &v
}

// GetRealSize returns the RealSize field value if set, zero value otherwise.
func (o *FolderSizeVM) GetRealSize() int64 {
	if o == nil || IsNil(o.RealSize) {
		var ret int64
		return ret
	}
	return *o.RealSize
}

// GetRealSizeOk returns a tuple with the RealSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolderSizeVM) GetRealSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.RealSize) {
		return nil, false
	}
	return o.RealSize, true
}

// HasRealSize returns a boolean if a field has been set.
func (o *FolderSizeVM) HasRealSize() bool {
	if o != nil && !IsNil(o.RealSize) {
		return true
	}

	return false
}

// SetRealSize gets a reference to the given int64 and assigns it to the RealSize field.
func (o *FolderSizeVM) SetRealSize(v int64) {
	o.RealSize = &v
}

// GetDocumentsCount returns the DocumentsCount field value if set, zero value otherwise.
func (o *FolderSizeVM) GetDocumentsCount() int64 {
	if o == nil || IsNil(o.DocumentsCount) {
		var ret int64
		return ret
	}
	return *o.DocumentsCount
}

// GetDocumentsCountOk returns a tuple with the DocumentsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FolderSizeVM) GetDocumentsCountOk() (*int64, bool) {
	if o == nil || IsNil(o.DocumentsCount) {
		return nil, false
	}
	return o.DocumentsCount, true
}

// HasDocumentsCount returns a boolean if a field has been set.
func (o *FolderSizeVM) HasDocumentsCount() bool {
	if o != nil && !IsNil(o.DocumentsCount) {
		return true
	}

	return false
}

// SetDocumentsCount gets a reference to the given int64 and assigns it to the DocumentsCount field.
func (o *FolderSizeVM) SetDocumentsCount(v int64) {
	o.DocumentsCount = &v
}

func (o FolderSizeVM) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FolderSizeVM) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Size) {
		toSerialize["size"] = o.Size
	}
	if !IsNil(o.RealSize) {
		toSerialize["realSize"] = o.RealSize
	}
	if !IsNil(o.DocumentsCount) {
		toSerialize["documentsCount"] = o.DocumentsCount
	}
	return toSerialize, nil
}

type NullableFolderSizeVM struct {
	value *FolderSizeVM
	isSet bool
}

func (v NullableFolderSizeVM) Get() *FolderSizeVM {
	return v.value
}

func (v *NullableFolderSizeVM) Set(val *FolderSizeVM) {
	v.value = val
	v.isSet = true
}

func (v NullableFolderSizeVM) IsSet() bool {
	return v.isSet
}

func (v *NullableFolderSizeVM) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFolderSizeVM(val *FolderSizeVM) *NullableFolderSizeVM {
	return &NullableFolderSizeVM{value: val, isSet: true}
}

func (v NullableFolderSizeVM) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFolderSizeVM) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


