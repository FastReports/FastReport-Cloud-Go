/*
FastReport Cloud

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gofrcloud

import (
	"encoding/json"
	"os"
	"bytes"
	"fmt"
)

// checks if the FileCreateFormVM type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FileCreateFormVM{}

// FileCreateFormVM struct for FileCreateFormVM
type FileCreateFormVM struct {
	CloudBaseVM
	Tags []string `json:"tags,omitempty"`
	Icon Nullable*os.File `json:"icon,omitempty"`
	FileContent *os.File `json:"fileContent"`
	T string `json:"$t"`
}

type _FileCreateFormVM FileCreateFormVM

// NewFileCreateFormVM instantiates a new FileCreateFormVM object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFileCreateFormVM(fileContent *os.File, t string) *FileCreateFormVM {
	this := FileCreateFormVM{}
	this.T = t
	return &this
}

// NewFileCreateFormVMWithDefaults instantiates a new FileCreateFormVM object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFileCreateFormVMWithDefaults() *FileCreateFormVM {
	this := FileCreateFormVM{}
	return &this
}

// GetTags returns the Tags field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FileCreateFormVM) GetTags() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FileCreateFormVM) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *FileCreateFormVM) HasTags() bool {
	if o != nil && IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *FileCreateFormVM) SetTags(v []string) {
	o.Tags = v
}

// GetIcon returns the Icon field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FileCreateFormVM) GetIcon() *os.File {
	if o == nil || IsNil(o.Icon.Get()) {
		var ret *os.File
		return ret
	}
	return *o.Icon.Get()
}

// GetIconOk returns a tuple with the Icon field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FileCreateFormVM) GetIconOk() (**os.File, bool) {
	if o == nil {
		return nil, false
	}
	return o.Icon.Get(), o.Icon.IsSet()
}

// HasIcon returns a boolean if a field has been set.
func (o *FileCreateFormVM) HasIcon() bool {
	if o != nil && o.Icon.IsSet() {
		return true
	}

	return false
}

// SetIcon gets a reference to the given Nullable*os.File and assigns it to the Icon field.
func (o *FileCreateFormVM) SetIcon(v *os.File) {
	o.Icon.Set(&v)
}
// SetIconNil sets the value for Icon to be an explicit nil
func (o *FileCreateFormVM) SetIconNil() {
	o.Icon.Set(nil)
}

// UnsetIcon ensures that no value is present for Icon, not even an explicit nil
func (o *FileCreateFormVM) UnsetIcon() {
	o.Icon.Unset()
}

// GetFileContent returns the FileContent field value
func (o *FileCreateFormVM) GetFileContent() *os.File {
	if o == nil {
		var ret *os.File
		return ret
	}

	return o.FileContent
}

// GetFileContentOk returns a tuple with the FileContent field value
// and a boolean to check if the value has been set.
func (o *FileCreateFormVM) GetFileContentOk() (**os.File, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FileContent, true
}

// SetFileContent sets field value
func (o *FileCreateFormVM) SetFileContent(v *os.File) {
	o.FileContent = v
}

// GetT returns the T field value
func (o *FileCreateFormVM) GetT() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.T
}

// GetTOk returns a tuple with the T field value
// and a boolean to check if the value has been set.
func (o *FileCreateFormVM) GetTOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.T, true
}

// SetT sets field value
func (o *FileCreateFormVM) SetT(v string) {
	o.T = v
}

func (o FileCreateFormVM) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FileCreateFormVM) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	serializedCloudBaseVM, errCloudBaseVM := json.Marshal(o.CloudBaseVM)
	if errCloudBaseVM != nil {
		return map[string]interface{}{}, errCloudBaseVM
	}
	errCloudBaseVM = json.Unmarshal([]byte(serializedCloudBaseVM), &toSerialize)
	if errCloudBaseVM != nil {
		return map[string]interface{}{}, errCloudBaseVM
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if o.Icon.IsSet() {
		toSerialize["icon"] = o.Icon.Get()
	}
	toSerialize["fileContent"] = o.FileContent
	toSerialize["$t"] = o.T
	return toSerialize, nil
}

func (o *FileCreateFormVM) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"fileContent",
		"$t",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varFileCreateFormVM := _FileCreateFormVM{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varFileCreateFormVM)

	if err != nil {
		return err
	}

	*o = FileCreateFormVM(varFileCreateFormVM)

	return err
}

type NullableFileCreateFormVM struct {
	value *FileCreateFormVM
	isSet bool
}

func (v NullableFileCreateFormVM) Get() *FileCreateFormVM {
	return v.value
}

func (v *NullableFileCreateFormVM) Set(val *FileCreateFormVM) {
	v.value = val
	v.isSet = true
}

func (v NullableFileCreateFormVM) IsSet() bool {
	return v.isSet
}

func (v *NullableFileCreateFormVM) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFileCreateFormVM(val *FileCreateFormVM) *NullableFileCreateFormVM {
	return &NullableFileCreateFormVM{value: val, isSet: true}
}

func (v NullableFileCreateFormVM) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFileCreateFormVM) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


