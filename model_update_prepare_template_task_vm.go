/*
FastReport Cloud

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gofrcloud

import (
	"encoding/json"
)

// checks if the UpdatePrepareTemplateTaskVM type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdatePrepareTemplateTaskVM{}

// UpdatePrepareTemplateTaskVM struct for UpdatePrepareTemplateTaskVM
type UpdatePrepareTemplateTaskVM struct {
	ExportIds []string `json:"exportIds,omitempty"`
	PagesCount NullableInt32 `json:"pagesCount,omitempty"`
	ReportParameters map[string]string `json:"reportParameters,omitempty"`
}

// NewUpdatePrepareTemplateTaskVM instantiates a new UpdatePrepareTemplateTaskVM object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdatePrepareTemplateTaskVM(t string) *UpdatePrepareTemplateTaskVM {
	this := UpdatePrepareTemplateTaskVM{}
	this.T = t
	return &this
}

// NewUpdatePrepareTemplateTaskVMWithDefaults instantiates a new UpdatePrepareTemplateTaskVM object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdatePrepareTemplateTaskVMWithDefaults() *UpdatePrepareTemplateTaskVM {
	this := UpdatePrepareTemplateTaskVM{}
	return &this
}

// GetExportIds returns the ExportIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdatePrepareTemplateTaskVM) GetExportIds() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.ExportIds
}

// GetExportIdsOk returns a tuple with the ExportIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdatePrepareTemplateTaskVM) GetExportIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.ExportIds) {
		return nil, false
	}
	return o.ExportIds, true
}

// HasExportIds returns a boolean if a field has been set.
func (o *UpdatePrepareTemplateTaskVM) HasExportIds() bool {
	if o != nil && IsNil(o.ExportIds) {
		return true
	}

	return false
}

// SetExportIds gets a reference to the given []string and assigns it to the ExportIds field.
func (o *UpdatePrepareTemplateTaskVM) SetExportIds(v []string) {
	o.ExportIds = v
}

// GetPagesCount returns the PagesCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdatePrepareTemplateTaskVM) GetPagesCount() int32 {
	if o == nil || IsNil(o.PagesCount.Get()) {
		var ret int32
		return ret
	}
	return *o.PagesCount.Get()
}

// GetPagesCountOk returns a tuple with the PagesCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdatePrepareTemplateTaskVM) GetPagesCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.PagesCount.Get(), o.PagesCount.IsSet()
}

// HasPagesCount returns a boolean if a field has been set.
func (o *UpdatePrepareTemplateTaskVM) HasPagesCount() bool {
	if o != nil && o.PagesCount.IsSet() {
		return true
	}

	return false
}

// SetPagesCount gets a reference to the given NullableInt32 and assigns it to the PagesCount field.
func (o *UpdatePrepareTemplateTaskVM) SetPagesCount(v int32) {
	o.PagesCount.Set(&v)
}
// SetPagesCountNil sets the value for PagesCount to be an explicit nil
func (o *UpdatePrepareTemplateTaskVM) SetPagesCountNil() {
	o.PagesCount.Set(nil)
}

// UnsetPagesCount ensures that no value is present for PagesCount, not even an explicit nil
func (o *UpdatePrepareTemplateTaskVM) UnsetPagesCount() {
	o.PagesCount.Unset()
}

// GetReportParameters returns the ReportParameters field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdatePrepareTemplateTaskVM) GetReportParameters() map[string]string {
	if o == nil {
		var ret map[string]string
		return ret
	}
	return o.ReportParameters
}

// GetReportParametersOk returns a tuple with the ReportParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdatePrepareTemplateTaskVM) GetReportParametersOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.ReportParameters) {
		return nil, false
	}
	return &o.ReportParameters, true
}

// HasReportParameters returns a boolean if a field has been set.
func (o *UpdatePrepareTemplateTaskVM) HasReportParameters() bool {
	if o != nil && IsNil(o.ReportParameters) {
		return true
	}

	return false
}

// SetReportParameters gets a reference to the given map[string]string and assigns it to the ReportParameters field.
func (o *UpdatePrepareTemplateTaskVM) SetReportParameters(v map[string]string) {
	o.ReportParameters = v
}

func (o UpdatePrepareTemplateTaskVM) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdatePrepareTemplateTaskVM) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ExportIds != nil {
		toSerialize["exportIds"] = o.ExportIds
	}
	if o.PagesCount.IsSet() {
		toSerialize["pagesCount"] = o.PagesCount.Get()
	}
	if o.ReportParameters != nil {
		toSerialize["reportParameters"] = o.ReportParameters
	}
	return toSerialize, nil
}

type NullableUpdatePrepareTemplateTaskVM struct {
	value *UpdatePrepareTemplateTaskVM
	isSet bool
}

func (v NullableUpdatePrepareTemplateTaskVM) Get() *UpdatePrepareTemplateTaskVM {
	return v.value
}

func (v *NullableUpdatePrepareTemplateTaskVM) Set(val *UpdatePrepareTemplateTaskVM) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdatePrepareTemplateTaskVM) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdatePrepareTemplateTaskVM) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdatePrepareTemplateTaskVM(val *UpdatePrepareTemplateTaskVM) *NullableUpdatePrepareTemplateTaskVM {
	return &NullableUpdatePrepareTemplateTaskVM{value: val, isSet: true}
}

func (v NullableUpdatePrepareTemplateTaskVM) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdatePrepareTemplateTaskVM) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


