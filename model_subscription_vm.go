/*
FastReport Cloud

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gofrcloud

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SubscriptionVM type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SubscriptionVM{}

// SubscriptionVM struct for SubscriptionVM
type SubscriptionVM struct {
	CloudBaseVM
	Id NullableString `json:"id,omitempty"`
	Name NullableString `json:"name,omitempty"`
	Locale NullableString `json:"locale,omitempty"`
	Current *SubscriptionPeriodVM `json:"current,omitempty"`
	Old []SubscriptionPeriodVM `json:"old,omitempty"`
	TemplatesFolder *SubscriptionFolder `json:"templatesFolder,omitempty"`
	ReportsFolder *SubscriptionFolder `json:"reportsFolder,omitempty"`
	ExportsFolder *SubscriptionFolder `json:"exportsFolder,omitempty"`
	Tags []string `json:"tags,omitempty"`
	T string `json:"$t"`
}

type _SubscriptionVM SubscriptionVM

// NewSubscriptionVM instantiates a new SubscriptionVM object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubscriptionVM(t string) *SubscriptionVM {
	this := SubscriptionVM{}
	this.T = t
	return &this
}

// NewSubscriptionVMWithDefaults instantiates a new SubscriptionVM object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubscriptionVMWithDefaults() *SubscriptionVM {
	this := SubscriptionVM{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SubscriptionVM) GetId() string {
	if o == nil || IsNil(o.Id.Get()) {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SubscriptionVM) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *SubscriptionVM) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *SubscriptionVM) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *SubscriptionVM) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *SubscriptionVM) UnsetId() {
	o.Id.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SubscriptionVM) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SubscriptionVM) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *SubscriptionVM) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *SubscriptionVM) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *SubscriptionVM) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *SubscriptionVM) UnsetName() {
	o.Name.Unset()
}

// GetLocale returns the Locale field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SubscriptionVM) GetLocale() string {
	if o == nil || IsNil(o.Locale.Get()) {
		var ret string
		return ret
	}
	return *o.Locale.Get()
}

// GetLocaleOk returns a tuple with the Locale field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SubscriptionVM) GetLocaleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Locale.Get(), o.Locale.IsSet()
}

// HasLocale returns a boolean if a field has been set.
func (o *SubscriptionVM) HasLocale() bool {
	if o != nil && o.Locale.IsSet() {
		return true
	}

	return false
}

// SetLocale gets a reference to the given NullableString and assigns it to the Locale field.
func (o *SubscriptionVM) SetLocale(v string) {
	o.Locale.Set(&v)
}
// SetLocaleNil sets the value for Locale to be an explicit nil
func (o *SubscriptionVM) SetLocaleNil() {
	o.Locale.Set(nil)
}

// UnsetLocale ensures that no value is present for Locale, not even an explicit nil
func (o *SubscriptionVM) UnsetLocale() {
	o.Locale.Unset()
}

// GetCurrent returns the Current field value if set, zero value otherwise.
func (o *SubscriptionVM) GetCurrent() SubscriptionPeriodVM {
	if o == nil || IsNil(o.Current) {
		var ret SubscriptionPeriodVM
		return ret
	}
	return *o.Current
}

// GetCurrentOk returns a tuple with the Current field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionVM) GetCurrentOk() (*SubscriptionPeriodVM, bool) {
	if o == nil || IsNil(o.Current) {
		return nil, false
	}
	return o.Current, true
}

// HasCurrent returns a boolean if a field has been set.
func (o *SubscriptionVM) HasCurrent() bool {
	if o != nil && !IsNil(o.Current) {
		return true
	}

	return false
}

// SetCurrent gets a reference to the given SubscriptionPeriodVM and assigns it to the Current field.
func (o *SubscriptionVM) SetCurrent(v SubscriptionPeriodVM) {
	o.Current = &v
}

// GetOld returns the Old field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SubscriptionVM) GetOld() []SubscriptionPeriodVM {
	if o == nil {
		var ret []SubscriptionPeriodVM
		return ret
	}
	return o.Old
}

// GetOldOk returns a tuple with the Old field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SubscriptionVM) GetOldOk() ([]SubscriptionPeriodVM, bool) {
	if o == nil || IsNil(o.Old) {
		return nil, false
	}
	return o.Old, true
}

// HasOld returns a boolean if a field has been set.
func (o *SubscriptionVM) HasOld() bool {
	if o != nil && IsNil(o.Old) {
		return true
	}

	return false
}

// SetOld gets a reference to the given []SubscriptionPeriodVM and assigns it to the Old field.
func (o *SubscriptionVM) SetOld(v []SubscriptionPeriodVM) {
	o.Old = v
}

// GetTemplatesFolder returns the TemplatesFolder field value if set, zero value otherwise.
func (o *SubscriptionVM) GetTemplatesFolder() SubscriptionFolder {
	if o == nil || IsNil(o.TemplatesFolder) {
		var ret SubscriptionFolder
		return ret
	}
	return *o.TemplatesFolder
}

// GetTemplatesFolderOk returns a tuple with the TemplatesFolder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionVM) GetTemplatesFolderOk() (*SubscriptionFolder, bool) {
	if o == nil || IsNil(o.TemplatesFolder) {
		return nil, false
	}
	return o.TemplatesFolder, true
}

// HasTemplatesFolder returns a boolean if a field has been set.
func (o *SubscriptionVM) HasTemplatesFolder() bool {
	if o != nil && !IsNil(o.TemplatesFolder) {
		return true
	}

	return false
}

// SetTemplatesFolder gets a reference to the given SubscriptionFolder and assigns it to the TemplatesFolder field.
func (o *SubscriptionVM) SetTemplatesFolder(v SubscriptionFolder) {
	o.TemplatesFolder = &v
}

// GetReportsFolder returns the ReportsFolder field value if set, zero value otherwise.
func (o *SubscriptionVM) GetReportsFolder() SubscriptionFolder {
	if o == nil || IsNil(o.ReportsFolder) {
		var ret SubscriptionFolder
		return ret
	}
	return *o.ReportsFolder
}

// GetReportsFolderOk returns a tuple with the ReportsFolder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionVM) GetReportsFolderOk() (*SubscriptionFolder, bool) {
	if o == nil || IsNil(o.ReportsFolder) {
		return nil, false
	}
	return o.ReportsFolder, true
}

// HasReportsFolder returns a boolean if a field has been set.
func (o *SubscriptionVM) HasReportsFolder() bool {
	if o != nil && !IsNil(o.ReportsFolder) {
		return true
	}

	return false
}

// SetReportsFolder gets a reference to the given SubscriptionFolder and assigns it to the ReportsFolder field.
func (o *SubscriptionVM) SetReportsFolder(v SubscriptionFolder) {
	o.ReportsFolder = &v
}

// GetExportsFolder returns the ExportsFolder field value if set, zero value otherwise.
func (o *SubscriptionVM) GetExportsFolder() SubscriptionFolder {
	if o == nil || IsNil(o.ExportsFolder) {
		var ret SubscriptionFolder
		return ret
	}
	return *o.ExportsFolder
}

// GetExportsFolderOk returns a tuple with the ExportsFolder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscriptionVM) GetExportsFolderOk() (*SubscriptionFolder, bool) {
	if o == nil || IsNil(o.ExportsFolder) {
		return nil, false
	}
	return o.ExportsFolder, true
}

// HasExportsFolder returns a boolean if a field has been set.
func (o *SubscriptionVM) HasExportsFolder() bool {
	if o != nil && !IsNil(o.ExportsFolder) {
		return true
	}

	return false
}

// SetExportsFolder gets a reference to the given SubscriptionFolder and assigns it to the ExportsFolder field.
func (o *SubscriptionVM) SetExportsFolder(v SubscriptionFolder) {
	o.ExportsFolder = &v
}

// GetTags returns the Tags field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SubscriptionVM) GetTags() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SubscriptionVM) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *SubscriptionVM) HasTags() bool {
	if o != nil && IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *SubscriptionVM) SetTags(v []string) {
	o.Tags = v
}

// GetT returns the T field value
func (o *SubscriptionVM) GetT() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.T
}

// GetTOk returns a tuple with the T field value
// and a boolean to check if the value has been set.
func (o *SubscriptionVM) GetTOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.T, true
}

// SetT sets field value
func (o *SubscriptionVM) SetT(v string) {
	o.T = v
}

func (o SubscriptionVM) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SubscriptionVM) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	serializedCloudBaseVM, errCloudBaseVM := json.Marshal(o.CloudBaseVM)
	if errCloudBaseVM != nil {
		return map[string]interface{}{}, errCloudBaseVM
	}
	errCloudBaseVM = json.Unmarshal([]byte(serializedCloudBaseVM), &toSerialize)
	if errCloudBaseVM != nil {
		return map[string]interface{}{}, errCloudBaseVM
	}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.Locale.IsSet() {
		toSerialize["locale"] = o.Locale.Get()
	}
	if !IsNil(o.Current) {
		toSerialize["current"] = o.Current
	}
	if o.Old != nil {
		toSerialize["old"] = o.Old
	}
	if !IsNil(o.TemplatesFolder) {
		toSerialize["templatesFolder"] = o.TemplatesFolder
	}
	if !IsNil(o.ReportsFolder) {
		toSerialize["reportsFolder"] = o.ReportsFolder
	}
	if !IsNil(o.ExportsFolder) {
		toSerialize["exportsFolder"] = o.ExportsFolder
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	toSerialize["$t"] = o.T
	return toSerialize, nil
}

func (o *SubscriptionVM) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"$t",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSubscriptionVM := _SubscriptionVM{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSubscriptionVM)

	if err != nil {
		return err
	}

	*o = SubscriptionVM(varSubscriptionVM)

	return err
}

type NullableSubscriptionVM struct {
	value *SubscriptionVM
	isSet bool
}

func (v NullableSubscriptionVM) Get() *SubscriptionVM {
	return v.value
}

func (v *NullableSubscriptionVM) Set(val *SubscriptionVM) {
	v.value = val
	v.isSet = true
}

func (v NullableSubscriptionVM) IsSet() bool {
	return v.isSet
}

func (v *NullableSubscriptionVM) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubscriptionVM(val *SubscriptionVM) *NullableSubscriptionVM {
	return &NullableSubscriptionVM{value: val, isSet: true}
}

func (v NullableSubscriptionVM) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubscriptionVM) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


