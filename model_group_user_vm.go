/*
 * FastReport Cloud
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gofrcloud

import (
	"encoding/json"
)

// GroupUserVM struct for GroupUserVM
type GroupUserVM struct {
	UserId *string `json:"userId,omitempty"`
}

// NewGroupUserVM instantiates a new GroupUserVM object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGroupUserVM() *GroupUserVM {
	this := GroupUserVM{}
	return &this
}

// NewGroupUserVMWithDefaults instantiates a new GroupUserVM object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGroupUserVMWithDefaults() *GroupUserVM {
	this := GroupUserVM{}
	return &this
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *GroupUserVM) GetUserId() string {
	if o == nil || o.UserId == nil {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GroupUserVM) GetUserIdOk() (*string, bool) {
	if o == nil || o.UserId == nil {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *GroupUserVM) HasUserId() bool {
	if o != nil && o.UserId != nil {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *GroupUserVM) SetUserId(v string) {
	o.UserId = &v
}

func (o GroupUserVM) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.UserId != nil {
		toSerialize["userId"] = o.UserId
	}
	return json.Marshal(toSerialize)
}

type NullableGroupUserVM struct {
	value *GroupUserVM
	isSet bool
}

func (v NullableGroupUserVM) Get() *GroupUserVM {
	return v.value
}

func (v *NullableGroupUserVM) Set(val *GroupUserVM) {
	v.value = val
	v.isSet = true
}

func (v NullableGroupUserVM) IsSet() bool {
	return v.isSet
}

func (v *NullableGroupUserVM) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGroupUserVM(val *GroupUserVM) *NullableGroupUserVM {
	return &NullableGroupUserVM{value: val, isSet: true}
}

func (v NullableGroupUserVM) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGroupUserVM) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


