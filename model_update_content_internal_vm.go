/*
FastReport Cloud

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gofrcloud

import (
	"encoding/json"
	"os"
	"bytes"
	"fmt"
)

// checks if the UpdateContentInternalVM type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateContentInternalVM{}

// UpdateContentInternalVM struct for UpdateContentInternalVM
type UpdateContentInternalVM struct {
	CloudBaseVM
	EditorId NullableString `json:"editorId,omitempty"`
	FileContent Nullable*os.File `json:"fileContent,omitempty"`
	Thumbnail Nullable*os.File `json:"thumbnail,omitempty"`
	T string `json:"$t"`
}

type _UpdateContentInternalVM UpdateContentInternalVM

// NewUpdateContentInternalVM instantiates a new UpdateContentInternalVM object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateContentInternalVM(t string) *UpdateContentInternalVM {
	this := UpdateContentInternalVM{}
	this.T = t
	return &this
}

// NewUpdateContentInternalVMWithDefaults instantiates a new UpdateContentInternalVM object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateContentInternalVMWithDefaults() *UpdateContentInternalVM {
	this := UpdateContentInternalVM{}
	return &this
}

// GetEditorId returns the EditorId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateContentInternalVM) GetEditorId() string {
	if o == nil || IsNil(o.EditorId.Get()) {
		var ret string
		return ret
	}
	return *o.EditorId.Get()
}

// GetEditorIdOk returns a tuple with the EditorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateContentInternalVM) GetEditorIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EditorId.Get(), o.EditorId.IsSet()
}

// HasEditorId returns a boolean if a field has been set.
func (o *UpdateContentInternalVM) HasEditorId() bool {
	if o != nil && o.EditorId.IsSet() {
		return true
	}

	return false
}

// SetEditorId gets a reference to the given NullableString and assigns it to the EditorId field.
func (o *UpdateContentInternalVM) SetEditorId(v string) {
	o.EditorId.Set(&v)
}
// SetEditorIdNil sets the value for EditorId to be an explicit nil
func (o *UpdateContentInternalVM) SetEditorIdNil() {
	o.EditorId.Set(nil)
}

// UnsetEditorId ensures that no value is present for EditorId, not even an explicit nil
func (o *UpdateContentInternalVM) UnsetEditorId() {
	o.EditorId.Unset()
}

// GetFileContent returns the FileContent field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateContentInternalVM) GetFileContent() *os.File {
	if o == nil || IsNil(o.FileContent.Get()) {
		var ret *os.File
		return ret
	}
	return *o.FileContent.Get()
}

// GetFileContentOk returns a tuple with the FileContent field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateContentInternalVM) GetFileContentOk() (**os.File, bool) {
	if o == nil {
		return nil, false
	}
	return o.FileContent.Get(), o.FileContent.IsSet()
}

// HasFileContent returns a boolean if a field has been set.
func (o *UpdateContentInternalVM) HasFileContent() bool {
	if o != nil && o.FileContent.IsSet() {
		return true
	}

	return false
}

// SetFileContent gets a reference to the given Nullable*os.File and assigns it to the FileContent field.
func (o *UpdateContentInternalVM) SetFileContent(v *os.File) {
	o.FileContent.Set(&v)
}
// SetFileContentNil sets the value for FileContent to be an explicit nil
func (o *UpdateContentInternalVM) SetFileContentNil() {
	o.FileContent.Set(nil)
}

// UnsetFileContent ensures that no value is present for FileContent, not even an explicit nil
func (o *UpdateContentInternalVM) UnsetFileContent() {
	o.FileContent.Unset()
}

// GetThumbnail returns the Thumbnail field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateContentInternalVM) GetThumbnail() *os.File {
	if o == nil || IsNil(o.Thumbnail.Get()) {
		var ret *os.File
		return ret
	}
	return *o.Thumbnail.Get()
}

// GetThumbnailOk returns a tuple with the Thumbnail field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateContentInternalVM) GetThumbnailOk() (**os.File, bool) {
	if o == nil {
		return nil, false
	}
	return o.Thumbnail.Get(), o.Thumbnail.IsSet()
}

// HasThumbnail returns a boolean if a field has been set.
func (o *UpdateContentInternalVM) HasThumbnail() bool {
	if o != nil && o.Thumbnail.IsSet() {
		return true
	}

	return false
}

// SetThumbnail gets a reference to the given Nullable*os.File and assigns it to the Thumbnail field.
func (o *UpdateContentInternalVM) SetThumbnail(v *os.File) {
	o.Thumbnail.Set(&v)
}
// SetThumbnailNil sets the value for Thumbnail to be an explicit nil
func (o *UpdateContentInternalVM) SetThumbnailNil() {
	o.Thumbnail.Set(nil)
}

// UnsetThumbnail ensures that no value is present for Thumbnail, not even an explicit nil
func (o *UpdateContentInternalVM) UnsetThumbnail() {
	o.Thumbnail.Unset()
}

// GetT returns the T field value
func (o *UpdateContentInternalVM) GetT() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.T
}

// GetTOk returns a tuple with the T field value
// and a boolean to check if the value has been set.
func (o *UpdateContentInternalVM) GetTOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.T, true
}

// SetT sets field value
func (o *UpdateContentInternalVM) SetT(v string) {
	o.T = v
}

func (o UpdateContentInternalVM) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateContentInternalVM) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	serializedCloudBaseVM, errCloudBaseVM := json.Marshal(o.CloudBaseVM)
	if errCloudBaseVM != nil {
		return map[string]interface{}{}, errCloudBaseVM
	}
	errCloudBaseVM = json.Unmarshal([]byte(serializedCloudBaseVM), &toSerialize)
	if errCloudBaseVM != nil {
		return map[string]interface{}{}, errCloudBaseVM
	}
	if o.EditorId.IsSet() {
		toSerialize["editorId"] = o.EditorId.Get()
	}
	if o.FileContent.IsSet() {
		toSerialize["fileContent"] = o.FileContent.Get()
	}
	if o.Thumbnail.IsSet() {
		toSerialize["thumbnail"] = o.Thumbnail.Get()
	}
	toSerialize["$t"] = o.T
	return toSerialize, nil
}

func (o *UpdateContentInternalVM) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"$t",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUpdateContentInternalVM := _UpdateContentInternalVM{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUpdateContentInternalVM)

	if err != nil {
		return err
	}

	*o = UpdateContentInternalVM(varUpdateContentInternalVM)

	return err
}

type NullableUpdateContentInternalVM struct {
	value *UpdateContentInternalVM
	isSet bool
}

func (v NullableUpdateContentInternalVM) Get() *UpdateContentInternalVM {
	return v.value
}

func (v *NullableUpdateContentInternalVM) Set(val *UpdateContentInternalVM) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateContentInternalVM) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateContentInternalVM) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateContentInternalVM(val *UpdateContentInternalVM) *NullableUpdateContentInternalVM {
	return &NullableUpdateContentInternalVM{value: val, isSet: true}
}

func (v NullableUpdateContentInternalVM) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateContentInternalVM) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


