/*
FastReport Cloud

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gofrcloud

import (
	"encoding/json"
)

// checks if the PreviewReportVM type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PreviewReportVM{}

// PreviewReportVM struct for PreviewReportVM
type PreviewReportVM struct {
	Locale NullableString `json:"locale,omitempty"`
	CacheTolerance *float64 `json:"cacheTolerance,omitempty"`
}

// NewPreviewReportVM instantiates a new PreviewReportVM object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPreviewReportVM() *PreviewReportVM {
	this := PreviewReportVM{}
	var cacheTolerance float64 = 300
	this.CacheTolerance = &cacheTolerance
	return &this
}

// NewPreviewReportVMWithDefaults instantiates a new PreviewReportVM object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPreviewReportVMWithDefaults() *PreviewReportVM {
	this := PreviewReportVM{}
	var cacheTolerance float64 = 300
	this.CacheTolerance = &cacheTolerance
	return &this
}

// GetLocale returns the Locale field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PreviewReportVM) GetLocale() string {
	if o == nil || IsNil(o.Locale.Get()) {
		var ret string
		return ret
	}
	return *o.Locale.Get()
}

// GetLocaleOk returns a tuple with the Locale field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PreviewReportVM) GetLocaleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Locale.Get(), o.Locale.IsSet()
}

// HasLocale returns a boolean if a field has been set.
func (o *PreviewReportVM) HasLocale() bool {
	if o != nil && o.Locale.IsSet() {
		return true
	}

	return false
}

// SetLocale gets a reference to the given NullableString and assigns it to the Locale field.
func (o *PreviewReportVM) SetLocale(v string) {
	o.Locale.Set(&v)
}
// SetLocaleNil sets the value for Locale to be an explicit nil
func (o *PreviewReportVM) SetLocaleNil() {
	o.Locale.Set(nil)
}

// UnsetLocale ensures that no value is present for Locale, not even an explicit nil
func (o *PreviewReportVM) UnsetLocale() {
	o.Locale.Unset()
}

// GetCacheTolerance returns the CacheTolerance field value if set, zero value otherwise.
func (o *PreviewReportVM) GetCacheTolerance() float64 {
	if o == nil || IsNil(o.CacheTolerance) {
		var ret float64
		return ret
	}
	return *o.CacheTolerance
}

// GetCacheToleranceOk returns a tuple with the CacheTolerance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PreviewReportVM) GetCacheToleranceOk() (*float64, bool) {
	if o == nil || IsNil(o.CacheTolerance) {
		return nil, false
	}
	return o.CacheTolerance, true
}

// HasCacheTolerance returns a boolean if a field has been set.
func (o *PreviewReportVM) HasCacheTolerance() bool {
	if o != nil && !IsNil(o.CacheTolerance) {
		return true
	}

	return false
}

// SetCacheTolerance gets a reference to the given float64 and assigns it to the CacheTolerance field.
func (o *PreviewReportVM) SetCacheTolerance(v float64) {
	o.CacheTolerance = &v
}

func (o PreviewReportVM) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PreviewReportVM) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Locale.IsSet() {
		toSerialize["locale"] = o.Locale.Get()
	}
	if !IsNil(o.CacheTolerance) {
		toSerialize["cacheTolerance"] = o.CacheTolerance
	}
	return toSerialize, nil
}

type NullablePreviewReportVM struct {
	value *PreviewReportVM
	isSet bool
}

func (v NullablePreviewReportVM) Get() *PreviewReportVM {
	return v.value
}

func (v *NullablePreviewReportVM) Set(val *PreviewReportVM) {
	v.value = val
	v.isSet = true
}

func (v NullablePreviewReportVM) IsSet() bool {
	return v.isSet
}

func (v *NullablePreviewReportVM) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePreviewReportVM(val *PreviewReportVM) *NullablePreviewReportVM {
	return &NullablePreviewReportVM{value: val, isSet: true}
}

func (v NullablePreviewReportVM) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePreviewReportVM) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


