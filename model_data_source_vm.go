/*
FastReport Cloud

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gofrcloud

import (
	"encoding/json"
	"time"
)

// checks if the DataSourceVM type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DataSourceVM{}

// DataSourceVM struct for DataSourceVM
type DataSourceVM struct {
	Id NullableString `json:"id,omitempty"`
	Name NullableString `json:"name,omitempty"`
	ConnectionType *DataSourceConnectionType `json:"connectionType,omitempty"`
	ConnectionString NullableString `json:"connectionString,omitempty"`
	DataStructure NullableString `json:"dataStructure,omitempty"`
	SubscriptionId NullableString `json:"subscriptionId,omitempty"`
	EditedTime *time.Time `json:"editedTime,omitempty"`
	EditorUserId NullableString `json:"editorUserId,omitempty"`
	CreatedTime *time.Time `json:"createdTime,omitempty"`
	CreatorUserId NullableString `json:"creatorUserId,omitempty"`
	Status *DataSourceStatus `json:"status,omitempty"`
	ErrorMessage NullableString `json:"errorMessage,omitempty"`
}

// NewDataSourceVM instantiates a new DataSourceVM object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDataSourceVM() *DataSourceVM {
	this := DataSourceVM{}
	return &this
}

// NewDataSourceVMWithDefaults instantiates a new DataSourceVM object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDataSourceVMWithDefaults() *DataSourceVM {
	this := DataSourceVM{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DataSourceVM) GetId() string {
	if o == nil || IsNil(o.Id.Get()) {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DataSourceVM) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *DataSourceVM) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *DataSourceVM) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *DataSourceVM) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *DataSourceVM) UnsetId() {
	o.Id.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DataSourceVM) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DataSourceVM) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *DataSourceVM) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *DataSourceVM) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *DataSourceVM) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *DataSourceVM) UnsetName() {
	o.Name.Unset()
}

// GetConnectionType returns the ConnectionType field value if set, zero value otherwise.
func (o *DataSourceVM) GetConnectionType() DataSourceConnectionType {
	if o == nil || IsNil(o.ConnectionType) {
		var ret DataSourceConnectionType
		return ret
	}
	return *o.ConnectionType
}

// GetConnectionTypeOk returns a tuple with the ConnectionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataSourceVM) GetConnectionTypeOk() (*DataSourceConnectionType, bool) {
	if o == nil || IsNil(o.ConnectionType) {
		return nil, false
	}
	return o.ConnectionType, true
}

// HasConnectionType returns a boolean if a field has been set.
func (o *DataSourceVM) HasConnectionType() bool {
	if o != nil && !IsNil(o.ConnectionType) {
		return true
	}

	return false
}

// SetConnectionType gets a reference to the given DataSourceConnectionType and assigns it to the ConnectionType field.
func (o *DataSourceVM) SetConnectionType(v DataSourceConnectionType) {
	o.ConnectionType = &v
}

// GetConnectionString returns the ConnectionString field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DataSourceVM) GetConnectionString() string {
	if o == nil || IsNil(o.ConnectionString.Get()) {
		var ret string
		return ret
	}
	return *o.ConnectionString.Get()
}

// GetConnectionStringOk returns a tuple with the ConnectionString field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DataSourceVM) GetConnectionStringOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ConnectionString.Get(), o.ConnectionString.IsSet()
}

// HasConnectionString returns a boolean if a field has been set.
func (o *DataSourceVM) HasConnectionString() bool {
	if o != nil && o.ConnectionString.IsSet() {
		return true
	}

	return false
}

// SetConnectionString gets a reference to the given NullableString and assigns it to the ConnectionString field.
func (o *DataSourceVM) SetConnectionString(v string) {
	o.ConnectionString.Set(&v)
}
// SetConnectionStringNil sets the value for ConnectionString to be an explicit nil
func (o *DataSourceVM) SetConnectionStringNil() {
	o.ConnectionString.Set(nil)
}

// UnsetConnectionString ensures that no value is present for ConnectionString, not even an explicit nil
func (o *DataSourceVM) UnsetConnectionString() {
	o.ConnectionString.Unset()
}

// GetDataStructure returns the DataStructure field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DataSourceVM) GetDataStructure() string {
	if o == nil || IsNil(o.DataStructure.Get()) {
		var ret string
		return ret
	}
	return *o.DataStructure.Get()
}

// GetDataStructureOk returns a tuple with the DataStructure field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DataSourceVM) GetDataStructureOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DataStructure.Get(), o.DataStructure.IsSet()
}

// HasDataStructure returns a boolean if a field has been set.
func (o *DataSourceVM) HasDataStructure() bool {
	if o != nil && o.DataStructure.IsSet() {
		return true
	}

	return false
}

// SetDataStructure gets a reference to the given NullableString and assigns it to the DataStructure field.
func (o *DataSourceVM) SetDataStructure(v string) {
	o.DataStructure.Set(&v)
}
// SetDataStructureNil sets the value for DataStructure to be an explicit nil
func (o *DataSourceVM) SetDataStructureNil() {
	o.DataStructure.Set(nil)
}

// UnsetDataStructure ensures that no value is present for DataStructure, not even an explicit nil
func (o *DataSourceVM) UnsetDataStructure() {
	o.DataStructure.Unset()
}

// GetSubscriptionId returns the SubscriptionId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DataSourceVM) GetSubscriptionId() string {
	if o == nil || IsNil(o.SubscriptionId.Get()) {
		var ret string
		return ret
	}
	return *o.SubscriptionId.Get()
}

// GetSubscriptionIdOk returns a tuple with the SubscriptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DataSourceVM) GetSubscriptionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SubscriptionId.Get(), o.SubscriptionId.IsSet()
}

// HasSubscriptionId returns a boolean if a field has been set.
func (o *DataSourceVM) HasSubscriptionId() bool {
	if o != nil && o.SubscriptionId.IsSet() {
		return true
	}

	return false
}

// SetSubscriptionId gets a reference to the given NullableString and assigns it to the SubscriptionId field.
func (o *DataSourceVM) SetSubscriptionId(v string) {
	o.SubscriptionId.Set(&v)
}
// SetSubscriptionIdNil sets the value for SubscriptionId to be an explicit nil
func (o *DataSourceVM) SetSubscriptionIdNil() {
	o.SubscriptionId.Set(nil)
}

// UnsetSubscriptionId ensures that no value is present for SubscriptionId, not even an explicit nil
func (o *DataSourceVM) UnsetSubscriptionId() {
	o.SubscriptionId.Unset()
}

// GetEditedTime returns the EditedTime field value if set, zero value otherwise.
func (o *DataSourceVM) GetEditedTime() time.Time {
	if o == nil || IsNil(o.EditedTime) {
		var ret time.Time
		return ret
	}
	return *o.EditedTime
}

// GetEditedTimeOk returns a tuple with the EditedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataSourceVM) GetEditedTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EditedTime) {
		return nil, false
	}
	return o.EditedTime, true
}

// HasEditedTime returns a boolean if a field has been set.
func (o *DataSourceVM) HasEditedTime() bool {
	if o != nil && !IsNil(o.EditedTime) {
		return true
	}

	return false
}

// SetEditedTime gets a reference to the given time.Time and assigns it to the EditedTime field.
func (o *DataSourceVM) SetEditedTime(v time.Time) {
	o.EditedTime = &v
}

// GetEditorUserId returns the EditorUserId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DataSourceVM) GetEditorUserId() string {
	if o == nil || IsNil(o.EditorUserId.Get()) {
		var ret string
		return ret
	}
	return *o.EditorUserId.Get()
}

// GetEditorUserIdOk returns a tuple with the EditorUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DataSourceVM) GetEditorUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EditorUserId.Get(), o.EditorUserId.IsSet()
}

// HasEditorUserId returns a boolean if a field has been set.
func (o *DataSourceVM) HasEditorUserId() bool {
	if o != nil && o.EditorUserId.IsSet() {
		return true
	}

	return false
}

// SetEditorUserId gets a reference to the given NullableString and assigns it to the EditorUserId field.
func (o *DataSourceVM) SetEditorUserId(v string) {
	o.EditorUserId.Set(&v)
}
// SetEditorUserIdNil sets the value for EditorUserId to be an explicit nil
func (o *DataSourceVM) SetEditorUserIdNil() {
	o.EditorUserId.Set(nil)
}

// UnsetEditorUserId ensures that no value is present for EditorUserId, not even an explicit nil
func (o *DataSourceVM) UnsetEditorUserId() {
	o.EditorUserId.Unset()
}

// GetCreatedTime returns the CreatedTime field value if set, zero value otherwise.
func (o *DataSourceVM) GetCreatedTime() time.Time {
	if o == nil || IsNil(o.CreatedTime) {
		var ret time.Time
		return ret
	}
	return *o.CreatedTime
}

// GetCreatedTimeOk returns a tuple with the CreatedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataSourceVM) GetCreatedTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedTime) {
		return nil, false
	}
	return o.CreatedTime, true
}

// HasCreatedTime returns a boolean if a field has been set.
func (o *DataSourceVM) HasCreatedTime() bool {
	if o != nil && !IsNil(o.CreatedTime) {
		return true
	}

	return false
}

// SetCreatedTime gets a reference to the given time.Time and assigns it to the CreatedTime field.
func (o *DataSourceVM) SetCreatedTime(v time.Time) {
	o.CreatedTime = &v
}

// GetCreatorUserId returns the CreatorUserId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DataSourceVM) GetCreatorUserId() string {
	if o == nil || IsNil(o.CreatorUserId.Get()) {
		var ret string
		return ret
	}
	return *o.CreatorUserId.Get()
}

// GetCreatorUserIdOk returns a tuple with the CreatorUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DataSourceVM) GetCreatorUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatorUserId.Get(), o.CreatorUserId.IsSet()
}

// HasCreatorUserId returns a boolean if a field has been set.
func (o *DataSourceVM) HasCreatorUserId() bool {
	if o != nil && o.CreatorUserId.IsSet() {
		return true
	}

	return false
}

// SetCreatorUserId gets a reference to the given NullableString and assigns it to the CreatorUserId field.
func (o *DataSourceVM) SetCreatorUserId(v string) {
	o.CreatorUserId.Set(&v)
}
// SetCreatorUserIdNil sets the value for CreatorUserId to be an explicit nil
func (o *DataSourceVM) SetCreatorUserIdNil() {
	o.CreatorUserId.Set(nil)
}

// UnsetCreatorUserId ensures that no value is present for CreatorUserId, not even an explicit nil
func (o *DataSourceVM) UnsetCreatorUserId() {
	o.CreatorUserId.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *DataSourceVM) GetStatus() DataSourceStatus {
	if o == nil || IsNil(o.Status) {
		var ret DataSourceStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataSourceVM) GetStatusOk() (*DataSourceStatus, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *DataSourceVM) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given DataSourceStatus and assigns it to the Status field.
func (o *DataSourceVM) SetStatus(v DataSourceStatus) {
	o.Status = &v
}

// GetErrorMessage returns the ErrorMessage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DataSourceVM) GetErrorMessage() string {
	if o == nil || IsNil(o.ErrorMessage.Get()) {
		var ret string
		return ret
	}
	return *o.ErrorMessage.Get()
}

// GetErrorMessageOk returns a tuple with the ErrorMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DataSourceVM) GetErrorMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ErrorMessage.Get(), o.ErrorMessage.IsSet()
}

// HasErrorMessage returns a boolean if a field has been set.
func (o *DataSourceVM) HasErrorMessage() bool {
	if o != nil && o.ErrorMessage.IsSet() {
		return true
	}

	return false
}

// SetErrorMessage gets a reference to the given NullableString and assigns it to the ErrorMessage field.
func (o *DataSourceVM) SetErrorMessage(v string) {
	o.ErrorMessage.Set(&v)
}
// SetErrorMessageNil sets the value for ErrorMessage to be an explicit nil
func (o *DataSourceVM) SetErrorMessageNil() {
	o.ErrorMessage.Set(nil)
}

// UnsetErrorMessage ensures that no value is present for ErrorMessage, not even an explicit nil
func (o *DataSourceVM) UnsetErrorMessage() {
	o.ErrorMessage.Unset()
}

func (o DataSourceVM) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DataSourceVM) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if !IsNil(o.ConnectionType) {
		toSerialize["connectionType"] = o.ConnectionType
	}
	if o.ConnectionString.IsSet() {
		toSerialize["connectionString"] = o.ConnectionString.Get()
	}
	if o.DataStructure.IsSet() {
		toSerialize["dataStructure"] = o.DataStructure.Get()
	}
	if o.SubscriptionId.IsSet() {
		toSerialize["subscriptionId"] = o.SubscriptionId.Get()
	}
	if !IsNil(o.EditedTime) {
		toSerialize["editedTime"] = o.EditedTime
	}
	if o.EditorUserId.IsSet() {
		toSerialize["editorUserId"] = o.EditorUserId.Get()
	}
	if !IsNil(o.CreatedTime) {
		toSerialize["createdTime"] = o.CreatedTime
	}
	if o.CreatorUserId.IsSet() {
		toSerialize["creatorUserId"] = o.CreatorUserId.Get()
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if o.ErrorMessage.IsSet() {
		toSerialize["errorMessage"] = o.ErrorMessage.Get()
	}
	return toSerialize, nil
}

type NullableDataSourceVM struct {
	value *DataSourceVM
	isSet bool
}

func (v NullableDataSourceVM) Get() *DataSourceVM {
	return v.value
}

func (v *NullableDataSourceVM) Set(val *DataSourceVM) {
	v.value = val
	v.isSet = true
}

func (v NullableDataSourceVM) IsSet() bool {
	return v.isSet
}

func (v *NullableDataSourceVM) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDataSourceVM(val *DataSourceVM) *NullableDataSourceVM {
	return &NullableDataSourceVM{value: val, isSet: true}
}

func (v NullableDataSourceVM) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDataSourceVM) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


