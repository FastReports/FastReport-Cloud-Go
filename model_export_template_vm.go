/*
FastReport Cloud

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gofrcloud

import (
	"encoding/json"
)

// checks if the ExportTemplateVM type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExportTemplateVM{}

// ExportTemplateVM struct for ExportTemplateVM
type ExportTemplateVM struct {
	FileName NullableString `json:"fileName,omitempty"`
	FolderId NullableString `json:"folderId,omitempty"`
	Locale NullableString `json:"locale,omitempty"`
	PagesCount NullableInt32 `json:"pagesCount,omitempty"`
	Format *ExportFormat `json:"format,omitempty"`
	ExportParameters map[string]string `json:"exportParameters,omitempty"`
	ReportParameters map[string]string `json:"reportParameters,omitempty"`
}

// NewExportTemplateVM instantiates a new ExportTemplateVM object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExportTemplateVM() *ExportTemplateVM {
	this := ExportTemplateVM{}
	return &this
}

// NewExportTemplateVMWithDefaults instantiates a new ExportTemplateVM object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExportTemplateVMWithDefaults() *ExportTemplateVM {
	this := ExportTemplateVM{}
	return &this
}

// GetFileName returns the FileName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExportTemplateVM) GetFileName() string {
	if o == nil || IsNil(o.FileName.Get()) {
		var ret string
		return ret
	}
	return *o.FileName.Get()
}

// GetFileNameOk returns a tuple with the FileName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExportTemplateVM) GetFileNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FileName.Get(), o.FileName.IsSet()
}

// HasFileName returns a boolean if a field has been set.
func (o *ExportTemplateVM) HasFileName() bool {
	if o != nil && o.FileName.IsSet() {
		return true
	}

	return false
}

// SetFileName gets a reference to the given NullableString and assigns it to the FileName field.
func (o *ExportTemplateVM) SetFileName(v string) {
	o.FileName.Set(&v)
}
// SetFileNameNil sets the value for FileName to be an explicit nil
func (o *ExportTemplateVM) SetFileNameNil() {
	o.FileName.Set(nil)
}

// UnsetFileName ensures that no value is present for FileName, not even an explicit nil
func (o *ExportTemplateVM) UnsetFileName() {
	o.FileName.Unset()
}

// GetFolderId returns the FolderId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExportTemplateVM) GetFolderId() string {
	if o == nil || IsNil(o.FolderId.Get()) {
		var ret string
		return ret
	}
	return *o.FolderId.Get()
}

// GetFolderIdOk returns a tuple with the FolderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExportTemplateVM) GetFolderIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FolderId.Get(), o.FolderId.IsSet()
}

// HasFolderId returns a boolean if a field has been set.
func (o *ExportTemplateVM) HasFolderId() bool {
	if o != nil && o.FolderId.IsSet() {
		return true
	}

	return false
}

// SetFolderId gets a reference to the given NullableString and assigns it to the FolderId field.
func (o *ExportTemplateVM) SetFolderId(v string) {
	o.FolderId.Set(&v)
}
// SetFolderIdNil sets the value for FolderId to be an explicit nil
func (o *ExportTemplateVM) SetFolderIdNil() {
	o.FolderId.Set(nil)
}

// UnsetFolderId ensures that no value is present for FolderId, not even an explicit nil
func (o *ExportTemplateVM) UnsetFolderId() {
	o.FolderId.Unset()
}

// GetLocale returns the Locale field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExportTemplateVM) GetLocale() string {
	if o == nil || IsNil(o.Locale.Get()) {
		var ret string
		return ret
	}
	return *o.Locale.Get()
}

// GetLocaleOk returns a tuple with the Locale field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExportTemplateVM) GetLocaleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Locale.Get(), o.Locale.IsSet()
}

// HasLocale returns a boolean if a field has been set.
func (o *ExportTemplateVM) HasLocale() bool {
	if o != nil && o.Locale.IsSet() {
		return true
	}

	return false
}

// SetLocale gets a reference to the given NullableString and assigns it to the Locale field.
func (o *ExportTemplateVM) SetLocale(v string) {
	o.Locale.Set(&v)
}
// SetLocaleNil sets the value for Locale to be an explicit nil
func (o *ExportTemplateVM) SetLocaleNil() {
	o.Locale.Set(nil)
}

// UnsetLocale ensures that no value is present for Locale, not even an explicit nil
func (o *ExportTemplateVM) UnsetLocale() {
	o.Locale.Unset()
}

// GetPagesCount returns the PagesCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExportTemplateVM) GetPagesCount() int32 {
	if o == nil || IsNil(o.PagesCount.Get()) {
		var ret int32
		return ret
	}
	return *o.PagesCount.Get()
}

// GetPagesCountOk returns a tuple with the PagesCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExportTemplateVM) GetPagesCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.PagesCount.Get(), o.PagesCount.IsSet()
}

// HasPagesCount returns a boolean if a field has been set.
func (o *ExportTemplateVM) HasPagesCount() bool {
	if o != nil && o.PagesCount.IsSet() {
		return true
	}

	return false
}

// SetPagesCount gets a reference to the given NullableInt32 and assigns it to the PagesCount field.
func (o *ExportTemplateVM) SetPagesCount(v int32) {
	o.PagesCount.Set(&v)
}
// SetPagesCountNil sets the value for PagesCount to be an explicit nil
func (o *ExportTemplateVM) SetPagesCountNil() {
	o.PagesCount.Set(nil)
}

// UnsetPagesCount ensures that no value is present for PagesCount, not even an explicit nil
func (o *ExportTemplateVM) UnsetPagesCount() {
	o.PagesCount.Unset()
}

// GetFormat returns the Format field value if set, zero value otherwise.
func (o *ExportTemplateVM) GetFormat() ExportFormat {
	if o == nil || IsNil(o.Format) {
		var ret ExportFormat
		return ret
	}
	return *o.Format
}

// GetFormatOk returns a tuple with the Format field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportTemplateVM) GetFormatOk() (*ExportFormat, bool) {
	if o == nil || IsNil(o.Format) {
		return nil, false
	}
	return o.Format, true
}

// HasFormat returns a boolean if a field has been set.
func (o *ExportTemplateVM) HasFormat() bool {
	if o != nil && !IsNil(o.Format) {
		return true
	}

	return false
}

// SetFormat gets a reference to the given ExportFormat and assigns it to the Format field.
func (o *ExportTemplateVM) SetFormat(v ExportFormat) {
	o.Format = &v
}

// GetExportParameters returns the ExportParameters field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExportTemplateVM) GetExportParameters() map[string]string {
	if o == nil {
		var ret map[string]string
		return ret
	}
	return o.ExportParameters
}

// GetExportParametersOk returns a tuple with the ExportParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExportTemplateVM) GetExportParametersOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.ExportParameters) {
		return nil, false
	}
	return &o.ExportParameters, true
}

// HasExportParameters returns a boolean if a field has been set.
func (o *ExportTemplateVM) HasExportParameters() bool {
	if o != nil && IsNil(o.ExportParameters) {
		return true
	}

	return false
}

// SetExportParameters gets a reference to the given map[string]string and assigns it to the ExportParameters field.
func (o *ExportTemplateVM) SetExportParameters(v map[string]string) {
	o.ExportParameters = v
}

// GetReportParameters returns the ReportParameters field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ExportTemplateVM) GetReportParameters() map[string]string {
	if o == nil {
		var ret map[string]string
		return ret
	}
	return o.ReportParameters
}

// GetReportParametersOk returns a tuple with the ReportParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ExportTemplateVM) GetReportParametersOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.ReportParameters) {
		return nil, false
	}
	return &o.ReportParameters, true
}

// HasReportParameters returns a boolean if a field has been set.
func (o *ExportTemplateVM) HasReportParameters() bool {
	if o != nil && IsNil(o.ReportParameters) {
		return true
	}

	return false
}

// SetReportParameters gets a reference to the given map[string]string and assigns it to the ReportParameters field.
func (o *ExportTemplateVM) SetReportParameters(v map[string]string) {
	o.ReportParameters = v
}

func (o ExportTemplateVM) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExportTemplateVM) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.FileName.IsSet() {
		toSerialize["fileName"] = o.FileName.Get()
	}
	if o.FolderId.IsSet() {
		toSerialize["folderId"] = o.FolderId.Get()
	}
	if o.Locale.IsSet() {
		toSerialize["locale"] = o.Locale.Get()
	}
	if o.PagesCount.IsSet() {
		toSerialize["pagesCount"] = o.PagesCount.Get()
	}
	if !IsNil(o.Format) {
		toSerialize["format"] = o.Format
	}
	if o.ExportParameters != nil {
		toSerialize["exportParameters"] = o.ExportParameters
	}
	if o.ReportParameters != nil {
		toSerialize["reportParameters"] = o.ReportParameters
	}
	return toSerialize, nil
}

type NullableExportTemplateVM struct {
	value *ExportTemplateVM
	isSet bool
}

func (v NullableExportTemplateVM) Get() *ExportTemplateVM {
	return v.value
}

func (v *NullableExportTemplateVM) Set(val *ExportTemplateVM) {
	v.value = val
	v.isSet = true
}

func (v NullableExportTemplateVM) IsSet() bool {
	return v.isSet
}

func (v *NullableExportTemplateVM) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExportTemplateVM(val *ExportTemplateVM) *NullableExportTemplateVM {
	return &NullableExportTemplateVM{value: val, isSet: true}
}

func (v NullableExportTemplateVM) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExportTemplateVM) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


