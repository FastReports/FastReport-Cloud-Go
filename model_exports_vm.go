/*
FastReport Cloud

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gofrcloud

import (
	"encoding/json"
)

// checks if the ExportsVM type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExportsVM{}

// ExportsVM struct for ExportsVM
type ExportsVM struct {
}

// NewExportsVM instantiates a new ExportsVM object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExportsVM() *ExportsVM {
	this := ExportsVM{}
	return &this
}

// NewExportsVMWithDefaults instantiates a new ExportsVM object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExportsVMWithDefaults() *ExportsVM {
	this := ExportsVM{}
	return &this
}

func (o ExportsVM) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExportsVM) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	return toSerialize, nil
}

type NullableExportsVM struct {
	value *ExportsVM
	isSet bool
}

func (v NullableExportsVM) Get() *ExportsVM {
	return v.value
}

func (v *NullableExportsVM) Set(val *ExportsVM) {
	v.value = val
	v.isSet = true
}

func (v NullableExportsVM) IsSet() bool {
	return v.isSet
}

func (v *NullableExportsVM) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExportsVM(val *ExportsVM) *NullableExportsVM {
	return &NullableExportsVM{value: val, isSet: true}
}

func (v NullableExportsVM) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExportsVM) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


