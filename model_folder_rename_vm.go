/*
FastReport Cloud

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gofrcloud

import (
	"encoding/json"
)

// checks if the FolderRenameVM type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FolderRenameVM{}

// FolderRenameVM struct for FolderRenameVM
type FolderRenameVM struct {
	Name string `json:"name"`
}

// NewFolderRenameVM instantiates a new FolderRenameVM object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFolderRenameVM(name string) *FolderRenameVM {
	this := FolderRenameVM{}
	this.Name = name
	return &this
}

// NewFolderRenameVMWithDefaults instantiates a new FolderRenameVM object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFolderRenameVMWithDefaults() *FolderRenameVM {
	this := FolderRenameVM{}
	return &this
}

// GetName returns the Name field value
func (o *FolderRenameVM) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *FolderRenameVM) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *FolderRenameVM) SetName(v string) {
	o.Name = v
}

func (o FolderRenameVM) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FolderRenameVM) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	return toSerialize, nil
}

type NullableFolderRenameVM struct {
	value *FolderRenameVM
	isSet bool
}

func (v NullableFolderRenameVM) Get() *FolderRenameVM {
	return v.value
}

func (v *NullableFolderRenameVM) Set(val *FolderRenameVM) {
	v.value = val
	v.isSet = true
}

func (v NullableFolderRenameVM) IsSet() bool {
	return v.isSet
}

func (v *NullableFolderRenameVM) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFolderRenameVM(val *FolderRenameVM) *NullableFolderRenameVM {
	return &NullableFolderRenameVM{value: val, isSet: true}
}

func (v NullableFolderRenameVM) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFolderRenameVM) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


