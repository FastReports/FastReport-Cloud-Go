/*
 * FastReport Cloud
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package FastReport.Cloud.SDK

import (
	"encoding/json"
)

// DataSourcePermissionsVM struct for DataSourcePermissionsVM
type DataSourcePermissionsVM struct {
	Permissions *DataSourcePermissions `json:"permissions,omitempty"`
}

// NewDataSourcePermissionsVM instantiates a new DataSourcePermissionsVM object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDataSourcePermissionsVM() *DataSourcePermissionsVM {
	this := DataSourcePermissionsVM{}
	return &this
}

// NewDataSourcePermissionsVMWithDefaults instantiates a new DataSourcePermissionsVM object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDataSourcePermissionsVMWithDefaults() *DataSourcePermissionsVM {
	this := DataSourcePermissionsVM{}
	return &this
}

// GetPermissions returns the Permissions field value if set, zero value otherwise.
func (o *DataSourcePermissionsVM) GetPermissions() DataSourcePermissions {
	if o == nil || o.Permissions == nil {
		var ret DataSourcePermissions
		return ret
	}
	return *o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DataSourcePermissionsVM) GetPermissionsOk() (*DataSourcePermissions, bool) {
	if o == nil || o.Permissions == nil {
		return nil, false
	}
	return o.Permissions, true
}

// HasPermissions returns a boolean if a field has been set.
func (o *DataSourcePermissionsVM) HasPermissions() bool {
	if o != nil && o.Permissions != nil {
		return true
	}

	return false
}

// SetPermissions gets a reference to the given DataSourcePermissions and assigns it to the Permissions field.
func (o *DataSourcePermissionsVM) SetPermissions(v DataSourcePermissions) {
	o.Permissions = &v
}

func (o DataSourcePermissionsVM) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Permissions != nil {
		toSerialize["permissions"] = o.Permissions
	}
	return json.Marshal(toSerialize)
}

type NullableDataSourcePermissionsVM struct {
	value *DataSourcePermissionsVM
	isSet bool
}

func (v NullableDataSourcePermissionsVM) Get() *DataSourcePermissionsVM {
	return v.value
}

func (v *NullableDataSourcePermissionsVM) Set(val *DataSourcePermissionsVM) {
	v.value = val
	v.isSet = true
}

func (v NullableDataSourcePermissionsVM) IsSet() bool {
	return v.isSet
}

func (v *NullableDataSourcePermissionsVM) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDataSourcePermissionsVM(val *DataSourcePermissionsVM) *NullableDataSourcePermissionsVM {
	return &NullableDataSourcePermissionsVM{value: val, isSet: true}
}

func (v NullableDataSourcePermissionsVM) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDataSourcePermissionsVM) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


