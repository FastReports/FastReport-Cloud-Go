/*
FastReport Cloud

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gofrcloud

import (
	"encoding/json"
	"time"
)

// checks if the CreateSubscriptionInviteVM type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateSubscriptionInviteVM{}

// CreateSubscriptionInviteVM struct for CreateSubscriptionInviteVM
type CreateSubscriptionInviteVM struct {
	Usages *int64 `json:"usages,omitempty"`
	Durable *bool `json:"durable,omitempty"`
	ExpiredDate *time.Time `json:"expiredDate,omitempty"`
}

// NewCreateSubscriptionInviteVM instantiates a new CreateSubscriptionInviteVM object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateSubscriptionInviteVM() *CreateSubscriptionInviteVM {
	this := CreateSubscriptionInviteVM{}
	return &this
}

// NewCreateSubscriptionInviteVMWithDefaults instantiates a new CreateSubscriptionInviteVM object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateSubscriptionInviteVMWithDefaults() *CreateSubscriptionInviteVM {
	this := CreateSubscriptionInviteVM{}
	return &this
}

// GetUsages returns the Usages field value if set, zero value otherwise.
func (o *CreateSubscriptionInviteVM) GetUsages() int64 {
	if o == nil || IsNil(o.Usages) {
		var ret int64
		return ret
	}
	return *o.Usages
}

// GetUsagesOk returns a tuple with the Usages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSubscriptionInviteVM) GetUsagesOk() (*int64, bool) {
	if o == nil || IsNil(o.Usages) {
		return nil, false
	}
	return o.Usages, true
}

// HasUsages returns a boolean if a field has been set.
func (o *CreateSubscriptionInviteVM) HasUsages() bool {
	if o != nil && !IsNil(o.Usages) {
		return true
	}

	return false
}

// SetUsages gets a reference to the given int64 and assigns it to the Usages field.
func (o *CreateSubscriptionInviteVM) SetUsages(v int64) {
	o.Usages = &v
}

// GetDurable returns the Durable field value if set, zero value otherwise.
func (o *CreateSubscriptionInviteVM) GetDurable() bool {
	if o == nil || IsNil(o.Durable) {
		var ret bool
		return ret
	}
	return *o.Durable
}

// GetDurableOk returns a tuple with the Durable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSubscriptionInviteVM) GetDurableOk() (*bool, bool) {
	if o == nil || IsNil(o.Durable) {
		return nil, false
	}
	return o.Durable, true
}

// HasDurable returns a boolean if a field has been set.
func (o *CreateSubscriptionInviteVM) HasDurable() bool {
	if o != nil && !IsNil(o.Durable) {
		return true
	}

	return false
}

// SetDurable gets a reference to the given bool and assigns it to the Durable field.
func (o *CreateSubscriptionInviteVM) SetDurable(v bool) {
	o.Durable = &v
}

// GetExpiredDate returns the ExpiredDate field value if set, zero value otherwise.
func (o *CreateSubscriptionInviteVM) GetExpiredDate() time.Time {
	if o == nil || IsNil(o.ExpiredDate) {
		var ret time.Time
		return ret
	}
	return *o.ExpiredDate
}

// GetExpiredDateOk returns a tuple with the ExpiredDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSubscriptionInviteVM) GetExpiredDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ExpiredDate) {
		return nil, false
	}
	return o.ExpiredDate, true
}

// HasExpiredDate returns a boolean if a field has been set.
func (o *CreateSubscriptionInviteVM) HasExpiredDate() bool {
	if o != nil && !IsNil(o.ExpiredDate) {
		return true
	}

	return false
}

// SetExpiredDate gets a reference to the given time.Time and assigns it to the ExpiredDate field.
func (o *CreateSubscriptionInviteVM) SetExpiredDate(v time.Time) {
	o.ExpiredDate = &v
}

func (o CreateSubscriptionInviteVM) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateSubscriptionInviteVM) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Usages) {
		toSerialize["usages"] = o.Usages
	}
	if !IsNil(o.Durable) {
		toSerialize["durable"] = o.Durable
	}
	if !IsNil(o.ExpiredDate) {
		toSerialize["expiredDate"] = o.ExpiredDate
	}
	return toSerialize, nil
}

type NullableCreateSubscriptionInviteVM struct {
	value *CreateSubscriptionInviteVM
	isSet bool
}

func (v NullableCreateSubscriptionInviteVM) Get() *CreateSubscriptionInviteVM {
	return v.value
}

func (v *NullableCreateSubscriptionInviteVM) Set(val *CreateSubscriptionInviteVM) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateSubscriptionInviteVM) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateSubscriptionInviteVM) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateSubscriptionInviteVM(val *CreateSubscriptionInviteVM) *NullableCreateSubscriptionInviteVM {
	return &NullableCreateSubscriptionInviteVM{value: val, isSet: true}
}

func (v NullableCreateSubscriptionInviteVM) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateSubscriptionInviteVM) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


