/*
FastReport Cloud

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gofrcloud

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the RunFTPUploadTaskVM type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RunFTPUploadTaskVM{}

// RunFTPUploadTaskVM struct for RunFTPUploadTaskVM
type RunFTPUploadTaskVM struct {
	RunTransportTaskBaseVM
	Archive *bool `json:"archive,omitempty"`
	ArchiveName NullableString `json:"archiveName,omitempty"`
	DestinationFolder NullableString `json:"destinationFolder,omitempty"`
	FtpHost NullableString `json:"ftpHost,omitempty"`
	FtpPassword NullableString `json:"ftpPassword,omitempty"`
	FtpPort *int32 `json:"ftpPort,omitempty"`
	FtpUsername NullableString `json:"ftpUsername,omitempty"`
	UseSFTP *bool `json:"useSFTP,omitempty"`
	T string `json:"$t"`
}

type _RunFTPUploadTaskVM RunFTPUploadTaskVM

// NewRunFTPUploadTaskVM instantiates a new RunFTPUploadTaskVM object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRunFTPUploadTaskVM(t string) *RunFTPUploadTaskVM {
	this := RunFTPUploadTaskVM{}
	this.T = t
	return &this
}

// NewRunFTPUploadTaskVMWithDefaults instantiates a new RunFTPUploadTaskVM object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRunFTPUploadTaskVMWithDefaults() *RunFTPUploadTaskVM {
	this := RunFTPUploadTaskVM{}
	return &this
}

// GetArchive returns the Archive field value if set, zero value otherwise.
func (o *RunFTPUploadTaskVM) GetArchive() bool {
	if o == nil || IsNil(o.Archive) {
		var ret bool
		return ret
	}
	return *o.Archive
}

// GetArchiveOk returns a tuple with the Archive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RunFTPUploadTaskVM) GetArchiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Archive) {
		return nil, false
	}
	return o.Archive, true
}

// HasArchive returns a boolean if a field has been set.
func (o *RunFTPUploadTaskVM) HasArchive() bool {
	if o != nil && !IsNil(o.Archive) {
		return true
	}

	return false
}

// SetArchive gets a reference to the given bool and assigns it to the Archive field.
func (o *RunFTPUploadTaskVM) SetArchive(v bool) {
	o.Archive = &v
}

// GetArchiveName returns the ArchiveName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RunFTPUploadTaskVM) GetArchiveName() string {
	if o == nil || IsNil(o.ArchiveName.Get()) {
		var ret string
		return ret
	}
	return *o.ArchiveName.Get()
}

// GetArchiveNameOk returns a tuple with the ArchiveName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RunFTPUploadTaskVM) GetArchiveNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ArchiveName.Get(), o.ArchiveName.IsSet()
}

// HasArchiveName returns a boolean if a field has been set.
func (o *RunFTPUploadTaskVM) HasArchiveName() bool {
	if o != nil && o.ArchiveName.IsSet() {
		return true
	}

	return false
}

// SetArchiveName gets a reference to the given NullableString and assigns it to the ArchiveName field.
func (o *RunFTPUploadTaskVM) SetArchiveName(v string) {
	o.ArchiveName.Set(&v)
}
// SetArchiveNameNil sets the value for ArchiveName to be an explicit nil
func (o *RunFTPUploadTaskVM) SetArchiveNameNil() {
	o.ArchiveName.Set(nil)
}

// UnsetArchiveName ensures that no value is present for ArchiveName, not even an explicit nil
func (o *RunFTPUploadTaskVM) UnsetArchiveName() {
	o.ArchiveName.Unset()
}

// GetDestinationFolder returns the DestinationFolder field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RunFTPUploadTaskVM) GetDestinationFolder() string {
	if o == nil || IsNil(o.DestinationFolder.Get()) {
		var ret string
		return ret
	}
	return *o.DestinationFolder.Get()
}

// GetDestinationFolderOk returns a tuple with the DestinationFolder field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RunFTPUploadTaskVM) GetDestinationFolderOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DestinationFolder.Get(), o.DestinationFolder.IsSet()
}

// HasDestinationFolder returns a boolean if a field has been set.
func (o *RunFTPUploadTaskVM) HasDestinationFolder() bool {
	if o != nil && o.DestinationFolder.IsSet() {
		return true
	}

	return false
}

// SetDestinationFolder gets a reference to the given NullableString and assigns it to the DestinationFolder field.
func (o *RunFTPUploadTaskVM) SetDestinationFolder(v string) {
	o.DestinationFolder.Set(&v)
}
// SetDestinationFolderNil sets the value for DestinationFolder to be an explicit nil
func (o *RunFTPUploadTaskVM) SetDestinationFolderNil() {
	o.DestinationFolder.Set(nil)
}

// UnsetDestinationFolder ensures that no value is present for DestinationFolder, not even an explicit nil
func (o *RunFTPUploadTaskVM) UnsetDestinationFolder() {
	o.DestinationFolder.Unset()
}

// GetFtpHost returns the FtpHost field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RunFTPUploadTaskVM) GetFtpHost() string {
	if o == nil || IsNil(o.FtpHost.Get()) {
		var ret string
		return ret
	}
	return *o.FtpHost.Get()
}

// GetFtpHostOk returns a tuple with the FtpHost field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RunFTPUploadTaskVM) GetFtpHostOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FtpHost.Get(), o.FtpHost.IsSet()
}

// HasFtpHost returns a boolean if a field has been set.
func (o *RunFTPUploadTaskVM) HasFtpHost() bool {
	if o != nil && o.FtpHost.IsSet() {
		return true
	}

	return false
}

// SetFtpHost gets a reference to the given NullableString and assigns it to the FtpHost field.
func (o *RunFTPUploadTaskVM) SetFtpHost(v string) {
	o.FtpHost.Set(&v)
}
// SetFtpHostNil sets the value for FtpHost to be an explicit nil
func (o *RunFTPUploadTaskVM) SetFtpHostNil() {
	o.FtpHost.Set(nil)
}

// UnsetFtpHost ensures that no value is present for FtpHost, not even an explicit nil
func (o *RunFTPUploadTaskVM) UnsetFtpHost() {
	o.FtpHost.Unset()
}

// GetFtpPassword returns the FtpPassword field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RunFTPUploadTaskVM) GetFtpPassword() string {
	if o == nil || IsNil(o.FtpPassword.Get()) {
		var ret string
		return ret
	}
	return *o.FtpPassword.Get()
}

// GetFtpPasswordOk returns a tuple with the FtpPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RunFTPUploadTaskVM) GetFtpPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FtpPassword.Get(), o.FtpPassword.IsSet()
}

// HasFtpPassword returns a boolean if a field has been set.
func (o *RunFTPUploadTaskVM) HasFtpPassword() bool {
	if o != nil && o.FtpPassword.IsSet() {
		return true
	}

	return false
}

// SetFtpPassword gets a reference to the given NullableString and assigns it to the FtpPassword field.
func (o *RunFTPUploadTaskVM) SetFtpPassword(v string) {
	o.FtpPassword.Set(&v)
}
// SetFtpPasswordNil sets the value for FtpPassword to be an explicit nil
func (o *RunFTPUploadTaskVM) SetFtpPasswordNil() {
	o.FtpPassword.Set(nil)
}

// UnsetFtpPassword ensures that no value is present for FtpPassword, not even an explicit nil
func (o *RunFTPUploadTaskVM) UnsetFtpPassword() {
	o.FtpPassword.Unset()
}

// GetFtpPort returns the FtpPort field value if set, zero value otherwise.
func (o *RunFTPUploadTaskVM) GetFtpPort() int32 {
	if o == nil || IsNil(o.FtpPort) {
		var ret int32
		return ret
	}
	return *o.FtpPort
}

// GetFtpPortOk returns a tuple with the FtpPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RunFTPUploadTaskVM) GetFtpPortOk() (*int32, bool) {
	if o == nil || IsNil(o.FtpPort) {
		return nil, false
	}
	return o.FtpPort, true
}

// HasFtpPort returns a boolean if a field has been set.
func (o *RunFTPUploadTaskVM) HasFtpPort() bool {
	if o != nil && !IsNil(o.FtpPort) {
		return true
	}

	return false
}

// SetFtpPort gets a reference to the given int32 and assigns it to the FtpPort field.
func (o *RunFTPUploadTaskVM) SetFtpPort(v int32) {
	o.FtpPort = &v
}

// GetFtpUsername returns the FtpUsername field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RunFTPUploadTaskVM) GetFtpUsername() string {
	if o == nil || IsNil(o.FtpUsername.Get()) {
		var ret string
		return ret
	}
	return *o.FtpUsername.Get()
}

// GetFtpUsernameOk returns a tuple with the FtpUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RunFTPUploadTaskVM) GetFtpUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FtpUsername.Get(), o.FtpUsername.IsSet()
}

// HasFtpUsername returns a boolean if a field has been set.
func (o *RunFTPUploadTaskVM) HasFtpUsername() bool {
	if o != nil && o.FtpUsername.IsSet() {
		return true
	}

	return false
}

// SetFtpUsername gets a reference to the given NullableString and assigns it to the FtpUsername field.
func (o *RunFTPUploadTaskVM) SetFtpUsername(v string) {
	o.FtpUsername.Set(&v)
}
// SetFtpUsernameNil sets the value for FtpUsername to be an explicit nil
func (o *RunFTPUploadTaskVM) SetFtpUsernameNil() {
	o.FtpUsername.Set(nil)
}

// UnsetFtpUsername ensures that no value is present for FtpUsername, not even an explicit nil
func (o *RunFTPUploadTaskVM) UnsetFtpUsername() {
	o.FtpUsername.Unset()
}

// GetUseSFTP returns the UseSFTP field value if set, zero value otherwise.
func (o *RunFTPUploadTaskVM) GetUseSFTP() bool {
	if o == nil || IsNil(o.UseSFTP) {
		var ret bool
		return ret
	}
	return *o.UseSFTP
}

// GetUseSFTPOk returns a tuple with the UseSFTP field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RunFTPUploadTaskVM) GetUseSFTPOk() (*bool, bool) {
	if o == nil || IsNil(o.UseSFTP) {
		return nil, false
	}
	return o.UseSFTP, true
}

// HasUseSFTP returns a boolean if a field has been set.
func (o *RunFTPUploadTaskVM) HasUseSFTP() bool {
	if o != nil && !IsNil(o.UseSFTP) {
		return true
	}

	return false
}

// SetUseSFTP gets a reference to the given bool and assigns it to the UseSFTP field.
func (o *RunFTPUploadTaskVM) SetUseSFTP(v bool) {
	o.UseSFTP = &v
}

// GetT returns the T field value
func (o *RunFTPUploadTaskVM) GetT() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.T
}

// GetTOk returns a tuple with the T field value
// and a boolean to check if the value has been set.
func (o *RunFTPUploadTaskVM) GetTOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.T, true
}

// SetT sets field value
func (o *RunFTPUploadTaskVM) SetT(v string) {
	o.T = v
}

func (o RunFTPUploadTaskVM) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RunFTPUploadTaskVM) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	serializedRunTransportTaskBaseVM, errRunTransportTaskBaseVM := json.Marshal(o.RunTransportTaskBaseVM)
	if errRunTransportTaskBaseVM != nil {
		return map[string]interface{}{}, errRunTransportTaskBaseVM
	}
	errRunTransportTaskBaseVM = json.Unmarshal([]byte(serializedRunTransportTaskBaseVM), &toSerialize)
	if errRunTransportTaskBaseVM != nil {
		return map[string]interface{}{}, errRunTransportTaskBaseVM
	}
	if !IsNil(o.Archive) {
		toSerialize["archive"] = o.Archive
	}
	if o.ArchiveName.IsSet() {
		toSerialize["archiveName"] = o.ArchiveName.Get()
	}
	if o.DestinationFolder.IsSet() {
		toSerialize["destinationFolder"] = o.DestinationFolder.Get()
	}
	if o.FtpHost.IsSet() {
		toSerialize["ftpHost"] = o.FtpHost.Get()
	}
	if o.FtpPassword.IsSet() {
		toSerialize["ftpPassword"] = o.FtpPassword.Get()
	}
	if !IsNil(o.FtpPort) {
		toSerialize["ftpPort"] = o.FtpPort
	}
	if o.FtpUsername.IsSet() {
		toSerialize["ftpUsername"] = o.FtpUsername.Get()
	}
	if !IsNil(o.UseSFTP) {
		toSerialize["useSFTP"] = o.UseSFTP
	}
	toSerialize["$t"] = o.T
	return toSerialize, nil
}

func (o *RunFTPUploadTaskVM) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"$t",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRunFTPUploadTaskVM := _RunFTPUploadTaskVM{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRunFTPUploadTaskVM)

	if err != nil {
		return err
	}

	*o = RunFTPUploadTaskVM(varRunFTPUploadTaskVM)

	return err
}

type NullableRunFTPUploadTaskVM struct {
	value *RunFTPUploadTaskVM
	isSet bool
}

func (v NullableRunFTPUploadTaskVM) Get() *RunFTPUploadTaskVM {
	return v.value
}

func (v *NullableRunFTPUploadTaskVM) Set(val *RunFTPUploadTaskVM) {
	v.value = val
	v.isSet = true
}

func (v NullableRunFTPUploadTaskVM) IsSet() bool {
	return v.isSet
}

func (v *NullableRunFTPUploadTaskVM) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRunFTPUploadTaskVM(val *RunFTPUploadTaskVM) *NullableRunFTPUploadTaskVM {
	return &NullableRunFTPUploadTaskVM{value: val, isSet: true}
}

func (v NullableRunFTPUploadTaskVM) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRunFTPUploadTaskVM) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


