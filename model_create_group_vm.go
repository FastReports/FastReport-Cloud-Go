/*
FastReport Cloud

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gofrcloud

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateGroupVM type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateGroupVM{}

// CreateGroupVM struct for CreateGroupVM
type CreateGroupVM struct {
	CloudBaseVM
	Name string `json:"name"`
	SubscriptionId NullableString `json:"subscriptionId,omitempty"`
	T string `json:"$t"`
}

type _CreateGroupVM CreateGroupVM

// NewCreateGroupVM instantiates a new CreateGroupVM object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateGroupVM(name string, t string) *CreateGroupVM {
	this := CreateGroupVM{}
	this.T = t
	return &this
}

// NewCreateGroupVMWithDefaults instantiates a new CreateGroupVM object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateGroupVMWithDefaults() *CreateGroupVM {
	this := CreateGroupVM{}
	return &this
}

// GetName returns the Name field value
func (o *CreateGroupVM) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateGroupVM) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateGroupVM) SetName(v string) {
	o.Name = v
}

// GetSubscriptionId returns the SubscriptionId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateGroupVM) GetSubscriptionId() string {
	if o == nil || IsNil(o.SubscriptionId.Get()) {
		var ret string
		return ret
	}
	return *o.SubscriptionId.Get()
}

// GetSubscriptionIdOk returns a tuple with the SubscriptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateGroupVM) GetSubscriptionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SubscriptionId.Get(), o.SubscriptionId.IsSet()
}

// HasSubscriptionId returns a boolean if a field has been set.
func (o *CreateGroupVM) HasSubscriptionId() bool {
	if o != nil && o.SubscriptionId.IsSet() {
		return true
	}

	return false
}

// SetSubscriptionId gets a reference to the given NullableString and assigns it to the SubscriptionId field.
func (o *CreateGroupVM) SetSubscriptionId(v string) {
	o.SubscriptionId.Set(&v)
}
// SetSubscriptionIdNil sets the value for SubscriptionId to be an explicit nil
func (o *CreateGroupVM) SetSubscriptionIdNil() {
	o.SubscriptionId.Set(nil)
}

// UnsetSubscriptionId ensures that no value is present for SubscriptionId, not even an explicit nil
func (o *CreateGroupVM) UnsetSubscriptionId() {
	o.SubscriptionId.Unset()
}

// GetT returns the T field value
func (o *CreateGroupVM) GetT() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.T
}

// GetTOk returns a tuple with the T field value
// and a boolean to check if the value has been set.
func (o *CreateGroupVM) GetTOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.T, true
}

// SetT sets field value
func (o *CreateGroupVM) SetT(v string) {
	o.T = v
}

func (o CreateGroupVM) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateGroupVM) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	serializedCloudBaseVM, errCloudBaseVM := json.Marshal(o.CloudBaseVM)
	if errCloudBaseVM != nil {
		return map[string]interface{}{}, errCloudBaseVM
	}
	errCloudBaseVM = json.Unmarshal([]byte(serializedCloudBaseVM), &toSerialize)
	if errCloudBaseVM != nil {
		return map[string]interface{}{}, errCloudBaseVM
	}
	toSerialize["name"] = o.Name
	if o.SubscriptionId.IsSet() {
		toSerialize["subscriptionId"] = o.SubscriptionId.Get()
	}
	toSerialize["$t"] = o.T
	return toSerialize, nil
}

func (o *CreateGroupVM) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"$t",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateGroupVM := _CreateGroupVM{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateGroupVM)

	if err != nil {
		return err
	}

	*o = CreateGroupVM(varCreateGroupVM)

	return err
}

type NullableCreateGroupVM struct {
	value *CreateGroupVM
	isSet bool
}

func (v NullableCreateGroupVM) Get() *CreateGroupVM {
	return v.value
}

func (v *NullableCreateGroupVM) Set(val *CreateGroupVM) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateGroupVM) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateGroupVM) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateGroupVM(val *CreateGroupVM) *NullableCreateGroupVM {
	return &NullableCreateGroupVM{value: val, isSet: true}
}

func (v NullableCreateGroupVM) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateGroupVM) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


