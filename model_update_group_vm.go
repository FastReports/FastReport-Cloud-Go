/*
 * FastReport Cloud
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: v1
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package FastReport.Cloud.SDK

import (
	"encoding/json"
)

// UpdateGroupVM struct for UpdateGroupVM
type UpdateGroupVM struct {
	Name *string `json:"name,omitempty"`
	SubscriptionId *string `json:"subscriptionId,omitempty"`
}

// NewUpdateGroupVM instantiates a new UpdateGroupVM object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateGroupVM() *UpdateGroupVM {
	this := UpdateGroupVM{}
	return &this
}

// NewUpdateGroupVMWithDefaults instantiates a new UpdateGroupVM object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateGroupVMWithDefaults() *UpdateGroupVM {
	this := UpdateGroupVM{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpdateGroupVM) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateGroupVM) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UpdateGroupVM) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UpdateGroupVM) SetName(v string) {
	o.Name = &v
}

// GetSubscriptionId returns the SubscriptionId field value if set, zero value otherwise.
func (o *UpdateGroupVM) GetSubscriptionId() string {
	if o == nil || o.SubscriptionId == nil {
		var ret string
		return ret
	}
	return *o.SubscriptionId
}

// GetSubscriptionIdOk returns a tuple with the SubscriptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateGroupVM) GetSubscriptionIdOk() (*string, bool) {
	if o == nil || o.SubscriptionId == nil {
		return nil, false
	}
	return o.SubscriptionId, true
}

// HasSubscriptionId returns a boolean if a field has been set.
func (o *UpdateGroupVM) HasSubscriptionId() bool {
	if o != nil && o.SubscriptionId != nil {
		return true
	}

	return false
}

// SetSubscriptionId gets a reference to the given string and assigns it to the SubscriptionId field.
func (o *UpdateGroupVM) SetSubscriptionId(v string) {
	o.SubscriptionId = &v
}

func (o UpdateGroupVM) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.SubscriptionId != nil {
		toSerialize["subscriptionId"] = o.SubscriptionId
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateGroupVM struct {
	value *UpdateGroupVM
	isSet bool
}

func (v NullableUpdateGroupVM) Get() *UpdateGroupVM {
	return v.value
}

func (v *NullableUpdateGroupVM) Set(val *UpdateGroupVM) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateGroupVM) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateGroupVM) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateGroupVM(val *UpdateGroupVM) *NullableUpdateGroupVM {
	return &NullableUpdateGroupVM{value: val, isSet: true}
}

func (v NullableUpdateGroupVM) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateGroupVM) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


